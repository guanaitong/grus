{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5173\u7231\u901a\u6280\u672f\u624b\u518c-JAVA \u00b6 Java \u7edf\u4e00\u5c01\u88c5\u4e86 grus \u6846\u67b6\u4f9b\u5927\u5bb6\u4f7f\u7528\u5f00\u53d1\uff0c\u6240\u4ee5\u5f00\u53d1\u516c\u53f8\u7684\u9879\u76ee\uff0c\u9700\u4fdd\u8bc1\u9879\u76ee\u7684parent\uff0c\u7edf\u4e00\u4f7f\u7528 grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u6b64 parent \u7c7b\u4f3c SpringBoot \u7684 parent\uff0c\u5305\u542b\u4e86\u65e5\u5e38\u5f00\u53d1\u4e2d\u9700\u8981\u7528\u5230\u7684 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u7b49\u6240\u6709\u4f9d\u8d56\u3002 \u5728 grus \u7248\u672c 2021.1.x \u53ca\u4ee5\u524d\uff0c\u4f7f\u7528 jdk-11 \uff0c\u81ea 2021.2.x \uff08\u6700\u65b0\u7248\u672c\uff09\u5f00\u59cb\u4f7f\u7528 jdk-17 \uff0c\u8be6\u89c1 Java17\u5347\u7ea7\u6307\u5357 \u76ee\u524d\u63a8\u8350\u7684\u7248\u672c\u4e3a 2021.1.17 \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.3.12.RELEASE Warning 1.0.0-SNAPSHOT \u548c\u65e9\u671f\u7248\u672c\u5df2\u4e0d\u518d\u7ef4\u62a4\uff0c\u8bf7\u53ca\u65f6\u5347\u7ea7\u5230\u63a8\u8350\u7248\u672c\uff0c\u4fdd\u6301\u6280\u672f\u6808\u7684\u7edf\u4e00\u548c\u7a0b\u5e8f\u7684\u5b89\u5168. \u9879\u76ee\u76ee\u524d\u5df2\u7ecf\u4ece\u591a\u4e2agit\u9879\u76ee\u5408\u5e76\u6210\u4e00\u4e2a\uff082021-09-01\u5f00\u59cb\uff09\uff0c\u51cf\u5c11\u7ef4\u62a4\u7684\u6210\u672c\uff0c\u63d0\u4ea4issue\u548cpr\u7684\u8bf7\u6ce8\u610f \u81ea 2021.2 \u5f00\u59cb\uff0c\u6846\u67b6\u548c\u5de8\u7075\u795e\u7684\u5f15\u7528\u4e0d\u518d\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u53ea\u652f\u6301\u4e86 jdk-17 \uff0c\u5373\u4f7f\u7528 2021.2 \u53ca\u540e\u9762\u7684\u7248\u672c\uff0c\u9700\u8981\u5728\u7236POM\u6dfb\u52a0\u5982\u4e0b\u5e76\u6307\u5b9a java.version \uff1a <projecp> <properties> <java.version> 17 </java.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> </projecp> \u53d1\u5e03\u7248\u672c \u00b6 2021.2 - \u5728\u5f00\u53d1\u4e2d 2021.2.0-SNAPSHOT \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.5.7 2021.1 - \u63a8\u8350\u4f7f\u7528 2021.1.16 \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.3.12.RELEASE Old versions(\u4e0d\u63a8\u8350\u4f7f\u7528) 2020.9 - \u63a8\u8350\u4f7f\u7528 2020.9.2.RELEASE\uff0c\u4e8e2021\u5e746\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4 2020.7 - \u63a8\u8350\u4f7f\u7528 2020.7.3.RELEASE\uff0c\u4e8e2021\u5e743\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4 2020.6 - \u4e8e2021\u5e741\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4\uff0c\u5df2\u4e8e2021\u5e749\u670828\u65e5\u4ecemaven\u4ed3\u5e93\u79fb\u9664 \u5347\u7ea7\u65e5\u5fd7 \u00b6 \u5347\u7ea7\u65f6\uff0cgrus \u4e00\u822c\u90fd\u4f1a\u6709\u8f83\u5927\u7684\u53d8\u52a8\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u6709\u7528\u7684\u65b0\u7279\u6027\u3002\u5347\u7ea7\u524d\u5efa\u8bae\u4ed4\u7ec6\u9605\u8bfb Release Notes\uff0c\u5982\u4e0b\u662f\u76f8\u5173\u7684\u8df3\u8f6c\u94fe\u63a5\u3002 2021.1 to 2021.2 - TODO old to 2021.1 , \u8fd9\u662f\u4e00\u4e2a\u4ece\u5386\u53f2\u8001\u7248\u672c\u5347\u7ea7\u7684\u7b80\u5355\u6c47\u603b \u8001\u7248\u672c\u5347\u7ea7 2020.7 to 2020.9 2020.6 to 2020.7 1.0.0 to 2020.6 \u66f4\u591a\u8d44\u6599 \u00b6 grus-wiki grus-\u4ee3\u7801\u5e93 \u5173\u7231\u901a\u77e5\u8bc6\u5e93","title":"\u5173\u7231\u901a\u6280\u672f\u624b\u518c-JAVA"},{"location":"#-java","text":"Java \u7edf\u4e00\u5c01\u88c5\u4e86 grus \u6846\u67b6\u4f9b\u5927\u5bb6\u4f7f\u7528\u5f00\u53d1\uff0c\u6240\u4ee5\u5f00\u53d1\u516c\u53f8\u7684\u9879\u76ee\uff0c\u9700\u4fdd\u8bc1\u9879\u76ee\u7684parent\uff0c\u7edf\u4e00\u4f7f\u7528 grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u6b64 parent \u7c7b\u4f3c SpringBoot \u7684 parent\uff0c\u5305\u542b\u4e86\u65e5\u5e38\u5f00\u53d1\u4e2d\u9700\u8981\u7528\u5230\u7684 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u7b49\u6240\u6709\u4f9d\u8d56\u3002 \u5728 grus \u7248\u672c 2021.1.x \u53ca\u4ee5\u524d\uff0c\u4f7f\u7528 jdk-11 \uff0c\u81ea 2021.2.x \uff08\u6700\u65b0\u7248\u672c\uff09\u5f00\u59cb\u4f7f\u7528 jdk-17 \uff0c\u8be6\u89c1 Java17\u5347\u7ea7\u6307\u5357 \u76ee\u524d\u63a8\u8350\u7684\u7248\u672c\u4e3a 2021.1.17 \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.3.12.RELEASE Warning 1.0.0-SNAPSHOT \u548c\u65e9\u671f\u7248\u672c\u5df2\u4e0d\u518d\u7ef4\u62a4\uff0c\u8bf7\u53ca\u65f6\u5347\u7ea7\u5230\u63a8\u8350\u7248\u672c\uff0c\u4fdd\u6301\u6280\u672f\u6808\u7684\u7edf\u4e00\u548c\u7a0b\u5e8f\u7684\u5b89\u5168. \u9879\u76ee\u76ee\u524d\u5df2\u7ecf\u4ece\u591a\u4e2agit\u9879\u76ee\u5408\u5e76\u6210\u4e00\u4e2a\uff082021-09-01\u5f00\u59cb\uff09\uff0c\u51cf\u5c11\u7ef4\u62a4\u7684\u6210\u672c\uff0c\u63d0\u4ea4issue\u548cpr\u7684\u8bf7\u6ce8\u610f \u81ea 2021.2 \u5f00\u59cb\uff0c\u6846\u67b6\u548c\u5de8\u7075\u795e\u7684\u5f15\u7528\u4e0d\u518d\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u53ea\u652f\u6301\u4e86 jdk-17 \uff0c\u5373\u4f7f\u7528 2021.2 \u53ca\u540e\u9762\u7684\u7248\u672c\uff0c\u9700\u8981\u5728\u7236POM\u6dfb\u52a0\u5982\u4e0b\u5e76\u6307\u5b9a java.version \uff1a <projecp> <properties> <java.version> 17 </java.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> </projecp>","title":"\u5173\u7231\u901a\u6280\u672f\u624b\u518c-JAVA"},{"location":"#_1","text":"2021.2 - \u5728\u5f00\u53d1\u4e2d 2021.2.0-SNAPSHOT \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.5.7 2021.1 - \u63a8\u8350\u4f7f\u7528 2021.1.16 \uff0c\u57fa\u4e8e spring-boot-version \u4e3a 2.3.12.RELEASE Old versions(\u4e0d\u63a8\u8350\u4f7f\u7528) 2020.9 - \u63a8\u8350\u4f7f\u7528 2020.9.2.RELEASE\uff0c\u4e8e2021\u5e746\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4 2020.7 - \u63a8\u8350\u4f7f\u7528 2020.7.3.RELEASE\uff0c\u4e8e2021\u5e743\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4 2020.6 - \u4e8e2021\u5e741\u67081\u65e5\u4e0d\u518d\u7ef4\u62a4\uff0c\u5df2\u4e8e2021\u5e749\u670828\u65e5\u4ecemaven\u4ed3\u5e93\u79fb\u9664","title":"\u53d1\u5e03\u7248\u672c"},{"location":"#_2","text":"\u5347\u7ea7\u65f6\uff0cgrus \u4e00\u822c\u90fd\u4f1a\u6709\u8f83\u5927\u7684\u53d8\u52a8\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u6709\u7528\u7684\u65b0\u7279\u6027\u3002\u5347\u7ea7\u524d\u5efa\u8bae\u4ed4\u7ec6\u9605\u8bfb Release Notes\uff0c\u5982\u4e0b\u662f\u76f8\u5173\u7684\u8df3\u8f6c\u94fe\u63a5\u3002 2021.1 to 2021.2 - TODO old to 2021.1 , \u8fd9\u662f\u4e00\u4e2a\u4ece\u5386\u53f2\u8001\u7248\u672c\u5347\u7ea7\u7684\u7b80\u5355\u6c47\u603b \u8001\u7248\u672c\u5347\u7ea7 2020.7 to 2020.9 2020.6 to 2020.7 1.0.0 to 2020.6","title":"\u5347\u7ea7\u65e5\u5fd7"},{"location":"#_3","text":"grus-wiki grus-\u4ee3\u7801\u5e93 \u5173\u7231\u901a\u77e5\u8bc6\u5e93","title":"\u66f4\u591a\u8d44\u6599"},{"location":"grus/api/","text":"\u5de8\u7075\u795e\u89c4\u8303 \u00b6 \u5de8\u7075\u795e\u51c6\u5165\u6761\u4ef6 \u00b6 \u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u670d\u52a1\u6216\u5e94\u7528\u4f7f\u7528\u7684\u63a5\u53e3 \u975e MGR \u7f51\u5173\u4f7f\u7528\u7684\u63a5\u53e3 \u5f00\u653e\u7684 API \u9700\u8981\u63d0\u4f9b javadoc \u548c\u7248\u672c\u8ffd\u8e2a \u5de8\u7075\u795e\u7684\u63a5\u53e3\u65b0\u589e\u548c\u53d8\u52a8\u5c06\u4f1a\u6709\u66f4\u4e25\u683c\u7684\u5ba1\u6838\uff0c\u63d0\u4ea4\u65f6\u5c06\u5fc5\u8981\u4fe1\u606f\u586b\u5165 commit message \u4e2d\u3002 \u6ee1\u8db3\u4ee5\u4e0b\u60c5\u51b5\u7684\uff0c\u9700\u8981\u4ece\u73b0\u6709\u5de8\u7075\u795e\u4e2d\u79fb\u9664 \u4ec5\u4f9b\u4e00\u4e2a\u5e94\u7528\u6216\u670d\u52a1\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u5e94\u5c06\u63a5\u53e3\u7c7b\u4fe1\u606f\u76f4\u63a5\u7ef4\u62a4\u5728\u5bf9\u5e94\u5e94\u7528\u5185\u3002 MGR \u7f51\u5173\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u901a\u8fc7 KONG \u7f51\u5173\u914d\u7f6e\u76f4\u63a5\u6620\u5c04\u4f7f\u7528\u3002 \u63a5\u53e3\u5f52\u5c5e\u8be6\u60c5 \u00b6 \u6240\u5c5e\u4e2d\u5fc3 api \u4f1a\u5458\u4e2d\u5fc3 ciicgat-agg-member ciicgat-api-passport ciicgat-api-userdoor ciicgat-api-userdoorES ciicgat-api-admin ciicgat-api-log ciicgat-api-riskrule ciicgat-api-riskdata ciicgat-api-risk-safety ciicgat-api-device ciicgat-api-wxwork ciicgat-api-wechat ciicgat-api-contract ciicgat-api-contract-signing \u8d44\u4ea7\u4e2d\u5fc3 ciicgat-agg-asset ciicgat-api-assets ciicgat-api-limit ciicgat-api-thirdasset ciicgat-api-assetsES ciicgat-api-assets-io ciicgat-api-coupon ciicgat-api-rights \u652f\u4ed8\u4e2d\u5fc3 ciicgat-agg-payment ciicgat-api-payment ciicgat-api-cashier ciicgat-api-excashier ciicgat-api-market ciicgat-api-biz-order ciicgat-api-third-payment ciicgat-api-qrcode ciicgat-api-order ciicgat-api-pay-authcode ciicgat-api-channel-trans \u7ed3\u7b97\u4e2d\u5fc3 ciicgat-agg-settlement ciicgat-api-seller-settlement ciicgat-api-enterprise-settlement ciicgat-api-invoice ciicgat-api-einvoice ciicgat-api-billing ciicgat-api-nc ciicgat-api-billing-agency ciicgat-api-datacenter-report ciicgat-api-posting \u5e94\u7528\u4ea7\u54c1\u4e2d\u5fc3 ciicgat-agg-newapp ciicgat-api-newapp ciicgat-api-catalog ciicgat-api-php ciicgat-api-privilege ciicgat-api-giveapp ciicgat-api-app-display ciicgat-api-announcement ciicgat-api-app-entry ciicgat-api-ticket ciicgat-api-prediction-support ciicgat-api-value-added ciicgat-api-seller-official-accounts ciicgat-api-square ciicgat-api-guanaitong-admin ciicgat-api-agent ciicgat-api-app-admin ciicgat-api-open-service \u57fa\u7840\u8bbe\u65bd ciicgat-agg-base ciicgat-api-common-data ciicgat-api-kms ciicgat-api-ip ciicgat-api-gwf ciicgat-api-notify-agent ciicgat-api-gfs ciicgat-api-notification ciicgat-api-captcha","title":"\u51c6\u5165\u6761\u4ef6"},{"location":"grus/api/#_1","text":"","title":"\u5de8\u7075\u795e\u89c4\u8303"},{"location":"grus/api/#_2","text":"\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u670d\u52a1\u6216\u5e94\u7528\u4f7f\u7528\u7684\u63a5\u53e3 \u975e MGR \u7f51\u5173\u4f7f\u7528\u7684\u63a5\u53e3 \u5f00\u653e\u7684 API \u9700\u8981\u63d0\u4f9b javadoc \u548c\u7248\u672c\u8ffd\u8e2a \u5de8\u7075\u795e\u7684\u63a5\u53e3\u65b0\u589e\u548c\u53d8\u52a8\u5c06\u4f1a\u6709\u66f4\u4e25\u683c\u7684\u5ba1\u6838\uff0c\u63d0\u4ea4\u65f6\u5c06\u5fc5\u8981\u4fe1\u606f\u586b\u5165 commit message \u4e2d\u3002 \u6ee1\u8db3\u4ee5\u4e0b\u60c5\u51b5\u7684\uff0c\u9700\u8981\u4ece\u73b0\u6709\u5de8\u7075\u795e\u4e2d\u79fb\u9664 \u4ec5\u4f9b\u4e00\u4e2a\u5e94\u7528\u6216\u670d\u52a1\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u5e94\u5c06\u63a5\u53e3\u7c7b\u4fe1\u606f\u76f4\u63a5\u7ef4\u62a4\u5728\u5bf9\u5e94\u5e94\u7528\u5185\u3002 MGR \u7f51\u5173\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u901a\u8fc7 KONG \u7f51\u5173\u914d\u7f6e\u76f4\u63a5\u6620\u5c04\u4f7f\u7528\u3002","title":"\u5de8\u7075\u795e\u51c6\u5165\u6761\u4ef6"},{"location":"grus/api/#_3","text":"\u6240\u5c5e\u4e2d\u5fc3 api \u4f1a\u5458\u4e2d\u5fc3 ciicgat-agg-member ciicgat-api-passport ciicgat-api-userdoor ciicgat-api-userdoorES ciicgat-api-admin ciicgat-api-log ciicgat-api-riskrule ciicgat-api-riskdata ciicgat-api-risk-safety ciicgat-api-device ciicgat-api-wxwork ciicgat-api-wechat ciicgat-api-contract ciicgat-api-contract-signing \u8d44\u4ea7\u4e2d\u5fc3 ciicgat-agg-asset ciicgat-api-assets ciicgat-api-limit ciicgat-api-thirdasset ciicgat-api-assetsES ciicgat-api-assets-io ciicgat-api-coupon ciicgat-api-rights \u652f\u4ed8\u4e2d\u5fc3 ciicgat-agg-payment ciicgat-api-payment ciicgat-api-cashier ciicgat-api-excashier ciicgat-api-market ciicgat-api-biz-order ciicgat-api-third-payment ciicgat-api-qrcode ciicgat-api-order ciicgat-api-pay-authcode ciicgat-api-channel-trans \u7ed3\u7b97\u4e2d\u5fc3 ciicgat-agg-settlement ciicgat-api-seller-settlement ciicgat-api-enterprise-settlement ciicgat-api-invoice ciicgat-api-einvoice ciicgat-api-billing ciicgat-api-nc ciicgat-api-billing-agency ciicgat-api-datacenter-report ciicgat-api-posting \u5e94\u7528\u4ea7\u54c1\u4e2d\u5fc3 ciicgat-agg-newapp ciicgat-api-newapp ciicgat-api-catalog ciicgat-api-php ciicgat-api-privilege ciicgat-api-giveapp ciicgat-api-app-display ciicgat-api-announcement ciicgat-api-app-entry ciicgat-api-ticket ciicgat-api-prediction-support ciicgat-api-value-added ciicgat-api-seller-official-accounts ciicgat-api-square ciicgat-api-guanaitong-admin ciicgat-api-agent ciicgat-api-app-admin ciicgat-api-open-service \u57fa\u7840\u8bbe\u65bd ciicgat-agg-base ciicgat-api-common-data ciicgat-api-kms ciicgat-api-ip ciicgat-api-gwf ciicgat-api-notify-agent ciicgat-api-gfs ciicgat-api-notification ciicgat-api-captcha","title":"\u63a5\u53e3\u5f52\u5c5e\u8be6\u60c5"},{"location":"grus/api/grus-feign-best-practice/","text":"\u5de8\u7075\u795e\u6700\u4f73\u5b9e\u8df5\u548c\u89c4\u8303 \u00b6 ServiceName \u00b6 \u6ce8\u89e3 com.ciicgat.api.core.annotation.ServiceName \u91cc\u9762\u586b\u7684 value\uff0c\u8bf7\u5199\u5e94\u7528\u540d\uff0c\u4e5f\u5c31\u662f Frigate \u91cc\u7684\u5e94\u7528\u540d\u3002\u9700\u8981\u4fdd\u8bc1\u4e25\u683c\u4e00\u81f4\u3001\u4e00\u6a21\u4e00\u6837\u3002 \u5982\u679c\u6240\u6709\u7684\u63a5\u53e3\uff0c\u6709\u7edf\u4e00\u7684\u524d\u7f00(\u6bd4\u5982 userdoor \u7684\u4e1a\u52a1\u63a5\u53e3 URL \u524d\u7f00\u90fd\u7edf\u4e00\u4e3a http://userdoor.services.dev.ofc/userdoor )\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u7f6e urlPathPrefix \u503c\uff0c\u6ca1\u5fc5\u8981\u5728 RequestLine \u91cc\u6bcf\u6761\u90fd\u52a0\u4e00\u4e2a\u524d\u7f00\u3002 \u65b9\u6cd5\u8bf7\u6c42 \u00b6 \u53c2\u6570\u4e2a\u6570\u4e0d\u8981\u591a\u4f59\u4e09\u4e2a \u4e00\u822c\u60c5\u51b5\u63a8\u8350\u4f7f\u7528 application/x-www-form-urlencoded\u3002 \u53c2\u6570\u5305\u542b List \u6216\u5bf9\u8c61\u5d4c\u5957\u7684\u60c5\u51b5\u591a\u4e0b\uff0c\u91c7\u7528 application/json \u65b9\u5f0f\u63d0\u4ea4\uff0c\u4e0d\u8981\u4f7f\u7528 application/x-www-form-urlencoded \u8bf7\u6c42\u5bf9\u8c61\u65e0\u9700\u7ee7\u627f java.io.Serializable \u63a5\u53e3 \u4e1a\u52a1\u6a21\u5757\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u6240\u6709\u8bf7\u6c42\u7c7b\u5b9a\u4e49\u7edf\u4e00\u57fa\u7c7b\uff0c\u547d\u540d\u53ef\u4ee5\u7edf\u4e00\u4e3a XXXRequest \u65b9\u6cd5\u8fd4\u56de \u00b6 \u4e00\u822c\u76f4\u63a5\u7528\u5bf9\u8c61\u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\uff0c\u4e0d\u8981\u4f7f\u7528 ApiResponse<T> \u6216\u8005 PhpApiResponse<T> \u3002\u7531\u6846\u67b6\u7edf\u4e00\u5904\u7406 code \u975e 0 \u65f6\u629b\u51fa\u7684 BusinessFeignException \u5982\u679c\u9700\u8981\u83b7\u53d6 code \u975e 0 \u60c5\u51b5\u4e0b data \u91cc\u7684\u503c\uff0c\u90a3\u4e48\u4f7f\u7528 ApiResponse<T> \u3002\u56e0\u4e3a BusinessFeignException \u91cc\u9762\u6ca1\u6709 data\u3001\u5b83\u4f1a\u628a data \u629b\u5f03\u3002 php \u63a5\u53e3\u8fd4\u56de\u6570\u636e\u6d89\u53ca\u5230\u5206\u9875\u7684\u60c5\u51b5\uff0c\u8bf7\u4f7f\u7528 PhpApiResponse<T> \u4f5c\u4e3a\u8fd4\u56de \u4e0d\u8981\u4f7f\u7528 void \u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\uff0cvoid \u7684\u60c5\u51b5\u4e0b\uff0ccode \u4e0d\u7b49\u4e8e 0 \u65f6\uff0c\u4e0d\u4f1a\u629b\u51fa BusinessFeignException \u4e0d\u8981\u53bb\u4fee\u6539 service \u7684\u8fd4\u56de\u5bf9\u8c61\uff0c\u5f53\u4f5c\u53ea\u8bfb\u3001\u4e0d\u53ef\u53d8\u7684\u4f7f\u7528 (\u540e\u7eed\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u6846\u67b6\u5c42\u9762\u505a\u51fa\u7ea6\u675f\uff0c\u6bd4\u5982\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u4ee3\u7406\u5bf9\u8c61) \u8fd4\u56de\u5bf9\u8c61\u9700\u8981\u7ee7\u627f java.io.Serializable \u63a5\u53e3\uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u6709\u5e8f\u5217\u5316\u4f60\u7684\u5bf9\u8c61\u7684\u9700\u6c42\u3002 \u4e1a\u52a1\u6a21\u5757\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u6240\u6709\u8fd4\u56de\u7c7b\u5b9a\u4e49\u7edf\u4e00\u57fa\u7c7b \u8fd4\u56de\u7801 \u00b6 \u4e1a\u52a1\u6a21\u5757\u4e3a\u8fd4\u56de\u7684 code \u7f16\u5199\u679a\u4e3e\u7c7b\uff0c\u679a\u4e3e code \u5217\u8868\u3002 \u679a\u4e3e\u7c7b\u9700\u8981\u7ee7\u627f com.ciicgat.sdk.lang.convert.ErrorCode \u8d85\u65f6 \u00b6 \u6846\u67b6\u9ed8\u8ba4\u7684\u8d85\u65f6\u53c2\u6570\u4e3a\uff1aconnectTimeout=10s\u3001readTimeout=60s \u63a5\u53e3\u63d0\u4f9b\u65b9\uff0c\u53ef\u4ee5\u901a\u8fc7 com.ciicgat.api.core.annotation.ApiTimeout \u6ce8\u89e3\u8bbe\u7f6e\u63a5\u53e3\u7684**\u5408\u7406\u901a\u7528**\u8d85\u65f6\u53c2\u6570\u3002\u4e00\u822c\u7684\uff1a \u5355\u6761\u8bfb\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 500ms \u6279\u91cf\u67e5\u8be2\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 10s \u5355\u6761\u63d2\u5165\u3001\u66f4\u65b0\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 500ms \u5b58\u5728\u590d\u6742\u4e8b\u52a1\u7684\u64cd\u4f5c\uff0c\u4e0d\u8981\u8d85\u8fc7 5s \u4ee5\u4e0a\u53c2\u6570\u9700\u8981\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u8c03\u6574 \u6211\u4eec\u7684\u8981\u6c42\u662f\uff0c\u63a5\u53e3\u63d0\u4f9b\u65b9\u5fc5\u987b\u8bbe\u7f6e timeout \u53c2\u6570\u3001\u5c24\u5176\u662f readTimeout\u3002\u540e\u7eed\u7684 Merge Request\uff0c\u4f1a\u5ba1\u6838\uff0c\u4e4b\u524d\u7684\u670d\u52a1\u9700\u8981\u8865\u4e0a \u63a5\u53e3\u4f7f\u7528\u65b9\uff0c\u53ef\u4ee5\u901a\u8fc7 FeignServiceFactory.newInstance(final Class<T> serviceClazz, Request.Options options) \u65b9\u6cd5\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684 timeout\u3002\u8fd9\u4e2a\u4f1a\u8986\u76d6 ApiTimeout \u6ce8\u89e3\u91cc\u7684\u914d\u7f6e\u503c\uff0c\u4f18\u5148\u7ea7\u6700\u9ad8\u3002 \u5f02\u5e38\u5904\u7406 \u00b6 \u5ba2\u6237\u7aef\u9700\u8981\u5904\u7406\u6240\u6709\u7684 BusinessFeignException \u548c FeignException \u63a5\u53e3\u63d0\u4f9b\u65b9\uff0c\u9700\u8981\u8003\u8651\u4f7f\u7528\u8005\u5bf9\u4f60\u63a5\u53e3\u7684\u4f9d\u8d56\u7a0b\u5ea6\u3002\u6bd4\u5982\u5982\u4e0b\u573a\u666f\uff1a\u9875\u9762\u4e0a\u6709\u516c\u544a\u680f\uff0c\u516c\u544a\u5185\u5bb9\u4ece\u516c\u544a\u670d\u52a1\u91cc\u83b7\u53d6\u3002\u5bf9\u4e8e\u6574\u4e2a\u9875\u9762\u6765\u8bf4\uff0c\u516c\u544a\u680f\u4e0d\u662f\u5fc5\u987b\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u6ca1\u6709\u3002\u90a3\u4e48\u5728\u8c03\u7528\u516c\u544a\u670d\u52a1\u7684\u65f6\u5019\uff0c\u5047\u5982\u5b83\u51fa\u73b0\u95ee\u9898\uff0c\u5176\u5b9e\u5bf9\u4e8e\u5168\u5c40\u662f\u65e0\u5f71\u54cd\u7684\uff0c\u5b83\u7684\u9519\u8bef\u662f\u53ef\u4ee5\u5ffd\u7565\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4f7f\u7528 try catch \u3002\u6211\u4eec\u6846\u67b6\u63d0\u4f9b\u4e86\u7279\u6027 com.ciicgat.api.core.annotation.IgnoreError \uff0c\u52a0\u5728\u65b9\u6cd5\u4e0a\u9762\uff0c\u53ef\u4ee5\u5b8c\u7f8e\u9002\u7528\u8fd9\u79cd\u573a\u666f\u3002 \u53ef\u4ee5\u4f7f\u7528 com.ciicgat.api.core.ServiceError \u6765\u83b7\u53d6 FeignException \u7684\u9519\u8bef\u7c7b\u578b\uff0c\u7136\u540e\u53cb\u597d\u8f93\u51fa\u7ed9\u7528\u6237\u3001\u6216\u8005\u6253\u5370\u5230\u65e5\u5fd7 \u7f13\u5b58 \u00b6 \u4e00\u81f4\u6027\u8981\u6c42\u4e0d\u9ad8\u4e14\u5bf9\u6027\u80fd\u6709\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 com.ciicgat.api.core.annotation.ApiCache \u517c\u5bb9\u6027 \u00b6 \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u5b9e\u9645\u63a5\u53e3\u9700\u8981\u4e25\u683c\u4fdd\u8bc1\u517c\u5bb9\u6027 \u5de8\u7075\u795e\u7684\u63a5\u53e3\u53ef\u4ee5\u505a\u7834\u574f\u6027\u7684\u53d8\u66f4\u3002\u4f9d\u8d56\u63a5\u53e3\u7684\u8c03\u7528\u65b9\u7f16\u8bd1\u4e0d\u4f1a\u901a\u8fc7\uff0c\u5f3a\u5236\u4ed6\u4eec\u4fee\u6539\u4ee3\u7801\uff0c\u6309\u7167\u65b0\u7684\u8c03\u7528\u65b9\u6cd5\u8c03\u7528\u3002 \u4ee3\u7801\u4f9d\u8d56\u6027 \u00b6 \u5bf9\u4e8e\u8fd4\u56de\u7c7b\uff0c\u6211\u4eec\u7684\u89c4\u8303\u662f\u5199\u4e24\u6b21\uff1a\u5de8\u7075\u795e\u5199\u4e00\u6b21\u3001\u670d\u52a1\u7aef\u5199\u4e00\u6b21\u3002\u670d\u52a1\u7aef\u7981\u6b62\u4f9d\u8d56\u5de8\u7075\u795e\u91cc\u7684\u6a21\u578b\u3002 \u5de8\u7075\u795e\u91cc\u7684\u6a21\u578b\u4e3a\u670d\u52a1\u6a21\u578b\uff0c\u670d\u52a1\u7aef\u91cc\u7684\u6a21\u578b\u4f60\u53ef\u4ee5\u770b\u4f5c\u662f VO\u3002\u540c\u65f6\uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u5b50\u96c6\u3002 \u591a\u8bed\u8a00\u652f\u6301 \u00b6 \u8bed\u8a00\u6807\u8bc6\u4e00\u822c\u7531 BFF \u5c42\u4ece\u767b\u5f55\u6001\u83b7\u53d6\uff0c\u5e76\u901a\u8fc7 LanguageThreadLocal \u8bbe\u503c\u3002 \u540e\u7aef Services \u7684\u8bed\u8a00\u6807\u8bc6\u53ef\u4ee5\u5f15\u5165\u6846\u67b6\u5185\u7684 LanguageFilter \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e\u3002 LanguageThreadLocal \u53ef\u4ee5\u8bc6\u522b\u5f53\u524d\u4f7f\u7528\u7ebf\u7a0b\u7684\u8bed\u8a00\u8bbe\u7f6e\uff0c\u5e76\u5b9e\u73b0\u5bf9\u5e94\u4e1a\u52a1\u3002 \u975e tomcat \u7ebf\u7a0b\u9700\u8981\u81ea\u884c\u4f20\u9012\u8bed\u8a00\u8bbe\u7f6e\u5230\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u4e2d\u3002 \u9700\u8981\u5411\u4e0b\u6e38\u81ea\u52a8\u4f20\u9012\u8bed\u8a00\u6807\u8bc6\u7684\u670d\u52a1\uff0c\u9700\u8981\u5728\u5e94\u7528\u4e0b\u914d\u7f6e lang.properties \u6587\u4ef6(\u4efb\u610f\u5185\u5bb9\uff0c\u7b49\u540e\u7eed\u5347\u7ea7)\u3002","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"grus/api/grus-feign-best-practice/#_1","text":"","title":"\u5de8\u7075\u795e\u6700\u4f73\u5b9e\u8df5\u548c\u89c4\u8303"},{"location":"grus/api/grus-feign-best-practice/#servicename","text":"\u6ce8\u89e3 com.ciicgat.api.core.annotation.ServiceName \u91cc\u9762\u586b\u7684 value\uff0c\u8bf7\u5199\u5e94\u7528\u540d\uff0c\u4e5f\u5c31\u662f Frigate \u91cc\u7684\u5e94\u7528\u540d\u3002\u9700\u8981\u4fdd\u8bc1\u4e25\u683c\u4e00\u81f4\u3001\u4e00\u6a21\u4e00\u6837\u3002 \u5982\u679c\u6240\u6709\u7684\u63a5\u53e3\uff0c\u6709\u7edf\u4e00\u7684\u524d\u7f00(\u6bd4\u5982 userdoor \u7684\u4e1a\u52a1\u63a5\u53e3 URL \u524d\u7f00\u90fd\u7edf\u4e00\u4e3a http://userdoor.services.dev.ofc/userdoor )\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u7f6e urlPathPrefix \u503c\uff0c\u6ca1\u5fc5\u8981\u5728 RequestLine \u91cc\u6bcf\u6761\u90fd\u52a0\u4e00\u4e2a\u524d\u7f00\u3002","title":"ServiceName"},{"location":"grus/api/grus-feign-best-practice/#_2","text":"\u53c2\u6570\u4e2a\u6570\u4e0d\u8981\u591a\u4f59\u4e09\u4e2a \u4e00\u822c\u60c5\u51b5\u63a8\u8350\u4f7f\u7528 application/x-www-form-urlencoded\u3002 \u53c2\u6570\u5305\u542b List \u6216\u5bf9\u8c61\u5d4c\u5957\u7684\u60c5\u51b5\u591a\u4e0b\uff0c\u91c7\u7528 application/json \u65b9\u5f0f\u63d0\u4ea4\uff0c\u4e0d\u8981\u4f7f\u7528 application/x-www-form-urlencoded \u8bf7\u6c42\u5bf9\u8c61\u65e0\u9700\u7ee7\u627f java.io.Serializable \u63a5\u53e3 \u4e1a\u52a1\u6a21\u5757\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u6240\u6709\u8bf7\u6c42\u7c7b\u5b9a\u4e49\u7edf\u4e00\u57fa\u7c7b\uff0c\u547d\u540d\u53ef\u4ee5\u7edf\u4e00\u4e3a XXXRequest","title":"\u65b9\u6cd5\u8bf7\u6c42"},{"location":"grus/api/grus-feign-best-practice/#_3","text":"\u4e00\u822c\u76f4\u63a5\u7528\u5bf9\u8c61\u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\uff0c\u4e0d\u8981\u4f7f\u7528 ApiResponse<T> \u6216\u8005 PhpApiResponse<T> \u3002\u7531\u6846\u67b6\u7edf\u4e00\u5904\u7406 code \u975e 0 \u65f6\u629b\u51fa\u7684 BusinessFeignException \u5982\u679c\u9700\u8981\u83b7\u53d6 code \u975e 0 \u60c5\u51b5\u4e0b data \u91cc\u7684\u503c\uff0c\u90a3\u4e48\u4f7f\u7528 ApiResponse<T> \u3002\u56e0\u4e3a BusinessFeignException \u91cc\u9762\u6ca1\u6709 data\u3001\u5b83\u4f1a\u628a data \u629b\u5f03\u3002 php \u63a5\u53e3\u8fd4\u56de\u6570\u636e\u6d89\u53ca\u5230\u5206\u9875\u7684\u60c5\u51b5\uff0c\u8bf7\u4f7f\u7528 PhpApiResponse<T> \u4f5c\u4e3a\u8fd4\u56de \u4e0d\u8981\u4f7f\u7528 void \u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\uff0cvoid \u7684\u60c5\u51b5\u4e0b\uff0ccode \u4e0d\u7b49\u4e8e 0 \u65f6\uff0c\u4e0d\u4f1a\u629b\u51fa BusinessFeignException \u4e0d\u8981\u53bb\u4fee\u6539 service \u7684\u8fd4\u56de\u5bf9\u8c61\uff0c\u5f53\u4f5c\u53ea\u8bfb\u3001\u4e0d\u53ef\u53d8\u7684\u4f7f\u7528 (\u540e\u7eed\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u6846\u67b6\u5c42\u9762\u505a\u51fa\u7ea6\u675f\uff0c\u6bd4\u5982\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u4ee3\u7406\u5bf9\u8c61) \u8fd4\u56de\u5bf9\u8c61\u9700\u8981\u7ee7\u627f java.io.Serializable \u63a5\u53e3\uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u6709\u5e8f\u5217\u5316\u4f60\u7684\u5bf9\u8c61\u7684\u9700\u6c42\u3002 \u4e1a\u52a1\u6a21\u5757\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u6240\u6709\u8fd4\u56de\u7c7b\u5b9a\u4e49\u7edf\u4e00\u57fa\u7c7b","title":"\u65b9\u6cd5\u8fd4\u56de"},{"location":"grus/api/grus-feign-best-practice/#_4","text":"\u4e1a\u52a1\u6a21\u5757\u4e3a\u8fd4\u56de\u7684 code \u7f16\u5199\u679a\u4e3e\u7c7b\uff0c\u679a\u4e3e code \u5217\u8868\u3002 \u679a\u4e3e\u7c7b\u9700\u8981\u7ee7\u627f com.ciicgat.sdk.lang.convert.ErrorCode","title":"\u8fd4\u56de\u7801"},{"location":"grus/api/grus-feign-best-practice/#_5","text":"\u6846\u67b6\u9ed8\u8ba4\u7684\u8d85\u65f6\u53c2\u6570\u4e3a\uff1aconnectTimeout=10s\u3001readTimeout=60s \u63a5\u53e3\u63d0\u4f9b\u65b9\uff0c\u53ef\u4ee5\u901a\u8fc7 com.ciicgat.api.core.annotation.ApiTimeout \u6ce8\u89e3\u8bbe\u7f6e\u63a5\u53e3\u7684**\u5408\u7406\u901a\u7528**\u8d85\u65f6\u53c2\u6570\u3002\u4e00\u822c\u7684\uff1a \u5355\u6761\u8bfb\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 500ms \u6279\u91cf\u67e5\u8be2\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 10s \u5355\u6761\u63d2\u5165\u3001\u66f4\u65b0\u63a5\u53e3\uff0c\u4e0d\u8981\u8d85\u8fc7 500ms \u5b58\u5728\u590d\u6742\u4e8b\u52a1\u7684\u64cd\u4f5c\uff0c\u4e0d\u8981\u8d85\u8fc7 5s \u4ee5\u4e0a\u53c2\u6570\u9700\u8981\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u8c03\u6574 \u6211\u4eec\u7684\u8981\u6c42\u662f\uff0c\u63a5\u53e3\u63d0\u4f9b\u65b9\u5fc5\u987b\u8bbe\u7f6e timeout \u53c2\u6570\u3001\u5c24\u5176\u662f readTimeout\u3002\u540e\u7eed\u7684 Merge Request\uff0c\u4f1a\u5ba1\u6838\uff0c\u4e4b\u524d\u7684\u670d\u52a1\u9700\u8981\u8865\u4e0a \u63a5\u53e3\u4f7f\u7528\u65b9\uff0c\u53ef\u4ee5\u901a\u8fc7 FeignServiceFactory.newInstance(final Class<T> serviceClazz, Request.Options options) \u65b9\u6cd5\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684 timeout\u3002\u8fd9\u4e2a\u4f1a\u8986\u76d6 ApiTimeout \u6ce8\u89e3\u91cc\u7684\u914d\u7f6e\u503c\uff0c\u4f18\u5148\u7ea7\u6700\u9ad8\u3002","title":"\u8d85\u65f6"},{"location":"grus/api/grus-feign-best-practice/#_6","text":"\u5ba2\u6237\u7aef\u9700\u8981\u5904\u7406\u6240\u6709\u7684 BusinessFeignException \u548c FeignException \u63a5\u53e3\u63d0\u4f9b\u65b9\uff0c\u9700\u8981\u8003\u8651\u4f7f\u7528\u8005\u5bf9\u4f60\u63a5\u53e3\u7684\u4f9d\u8d56\u7a0b\u5ea6\u3002\u6bd4\u5982\u5982\u4e0b\u573a\u666f\uff1a\u9875\u9762\u4e0a\u6709\u516c\u544a\u680f\uff0c\u516c\u544a\u5185\u5bb9\u4ece\u516c\u544a\u670d\u52a1\u91cc\u83b7\u53d6\u3002\u5bf9\u4e8e\u6574\u4e2a\u9875\u9762\u6765\u8bf4\uff0c\u516c\u544a\u680f\u4e0d\u662f\u5fc5\u987b\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u6ca1\u6709\u3002\u90a3\u4e48\u5728\u8c03\u7528\u516c\u544a\u670d\u52a1\u7684\u65f6\u5019\uff0c\u5047\u5982\u5b83\u51fa\u73b0\u95ee\u9898\uff0c\u5176\u5b9e\u5bf9\u4e8e\u5168\u5c40\u662f\u65e0\u5f71\u54cd\u7684\uff0c\u5b83\u7684\u9519\u8bef\u662f\u53ef\u4ee5\u5ffd\u7565\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4f7f\u7528 try catch \u3002\u6211\u4eec\u6846\u67b6\u63d0\u4f9b\u4e86\u7279\u6027 com.ciicgat.api.core.annotation.IgnoreError \uff0c\u52a0\u5728\u65b9\u6cd5\u4e0a\u9762\uff0c\u53ef\u4ee5\u5b8c\u7f8e\u9002\u7528\u8fd9\u79cd\u573a\u666f\u3002 \u53ef\u4ee5\u4f7f\u7528 com.ciicgat.api.core.ServiceError \u6765\u83b7\u53d6 FeignException \u7684\u9519\u8bef\u7c7b\u578b\uff0c\u7136\u540e\u53cb\u597d\u8f93\u51fa\u7ed9\u7528\u6237\u3001\u6216\u8005\u6253\u5370\u5230\u65e5\u5fd7","title":"\u5f02\u5e38\u5904\u7406"},{"location":"grus/api/grus-feign-best-practice/#_7","text":"\u4e00\u81f4\u6027\u8981\u6c42\u4e0d\u9ad8\u4e14\u5bf9\u6027\u80fd\u6709\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 com.ciicgat.api.core.annotation.ApiCache","title":"\u7f13\u5b58"},{"location":"grus/api/grus-feign-best-practice/#_8","text":"\u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u5b9e\u9645\u63a5\u53e3\u9700\u8981\u4e25\u683c\u4fdd\u8bc1\u517c\u5bb9\u6027 \u5de8\u7075\u795e\u7684\u63a5\u53e3\u53ef\u4ee5\u505a\u7834\u574f\u6027\u7684\u53d8\u66f4\u3002\u4f9d\u8d56\u63a5\u53e3\u7684\u8c03\u7528\u65b9\u7f16\u8bd1\u4e0d\u4f1a\u901a\u8fc7\uff0c\u5f3a\u5236\u4ed6\u4eec\u4fee\u6539\u4ee3\u7801\uff0c\u6309\u7167\u65b0\u7684\u8c03\u7528\u65b9\u6cd5\u8c03\u7528\u3002","title":"\u517c\u5bb9\u6027"},{"location":"grus/api/grus-feign-best-practice/#_9","text":"\u5bf9\u4e8e\u8fd4\u56de\u7c7b\uff0c\u6211\u4eec\u7684\u89c4\u8303\u662f\u5199\u4e24\u6b21\uff1a\u5de8\u7075\u795e\u5199\u4e00\u6b21\u3001\u670d\u52a1\u7aef\u5199\u4e00\u6b21\u3002\u670d\u52a1\u7aef\u7981\u6b62\u4f9d\u8d56\u5de8\u7075\u795e\u91cc\u7684\u6a21\u578b\u3002 \u5de8\u7075\u795e\u91cc\u7684\u6a21\u578b\u4e3a\u670d\u52a1\u6a21\u578b\uff0c\u670d\u52a1\u7aef\u91cc\u7684\u6a21\u578b\u4f60\u53ef\u4ee5\u770b\u4f5c\u662f VO\u3002\u540c\u65f6\uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u5b50\u96c6\u3002","title":"\u4ee3\u7801\u4f9d\u8d56\u6027"},{"location":"grus/api/grus-feign-best-practice/#_10","text":"\u8bed\u8a00\u6807\u8bc6\u4e00\u822c\u7531 BFF \u5c42\u4ece\u767b\u5f55\u6001\u83b7\u53d6\uff0c\u5e76\u901a\u8fc7 LanguageThreadLocal \u8bbe\u503c\u3002 \u540e\u7aef Services \u7684\u8bed\u8a00\u6807\u8bc6\u53ef\u4ee5\u5f15\u5165\u6846\u67b6\u5185\u7684 LanguageFilter \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e\u3002 LanguageThreadLocal \u53ef\u4ee5\u8bc6\u522b\u5f53\u524d\u4f7f\u7528\u7ebf\u7a0b\u7684\u8bed\u8a00\u8bbe\u7f6e\uff0c\u5e76\u5b9e\u73b0\u5bf9\u5e94\u4e1a\u52a1\u3002 \u975e tomcat \u7ebf\u7a0b\u9700\u8981\u81ea\u884c\u4f20\u9012\u8bed\u8a00\u8bbe\u7f6e\u5230\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u4e2d\u3002 \u9700\u8981\u5411\u4e0b\u6e38\u81ea\u52a8\u4f20\u9012\u8bed\u8a00\u6807\u8bc6\u7684\u670d\u52a1\uff0c\u9700\u8981\u5728\u5e94\u7528\u4e0b\u914d\u7f6e lang.properties \u6587\u4ef6(\u4efb\u610f\u5185\u5bb9\uff0c\u7b49\u540e\u7eed\u5347\u7ea7)\u3002","title":"\u591a\u8bed\u8a00\u652f\u6301"},{"location":"grus/api/grus-feign-contract/","text":"Feign contract \u00b6 \u73b0\u72b6 \u00b6 @ServiceName ( \"user\" ) @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface UserService { @RequestLine ( \"POST /user/get\" ) User getUser ( @Param ( \"id\" ) Integer id ); } @RequestMapping ( \"/user\" ) @RestController public class UserController { @PostMapping ( \"/get\" ) ApiResponse < User1 > getUser ( GetUserRequest request ){}; } feign \u7684\u63a5\u53e3\u7c7b UserService\uff0c\u548c\u670d\u52a1\u7aef\u63a5\u53e3\u7c7b UserController \u4e24\u8005\u4e92\u76f8\u72ec\u7acb\uff0c\u867d\u7136\u6709\u7075\u6d3b\u6027\u7684\u4f18\u70b9\uff0c\u4f46\u9762\u5bf9\u5927\u91cf\u7684\u4e1a\u52a1\u63a5\u53e3\u65f6\uff0c\u5927\u91cf\u7684\u4ee3\u7801\u62f7\u8d1d\u96be\u4ee5\u907f\u514d\uff0c\u963b\u788d\u5f00\u53d1\u6548\u7387\u7684\u63d0\u5347\u3002 Spring MVC Contract\uff082020.7.1.RELEASE\uff09 \u00b6 \u901a\u8fc7\u5f15\u5165 feign \u7684 spring mvc \u534f\u8bae\u53ef\u4ee5\u89e3\u51b3\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898 @ServiceName ( \"user\" ) @RequestMapping ( \"/user\" ) public interface UserService { @PostMapping ( \"/get\" ) User getUser ( GetUserRequest request ); } @RestController public class UserController implements UserService { @Override public User getUser ( GetUserRequest request ){}; } \u670d\u52a1\u7aef\u7684\u63a5\u53e3\u7c7b\u5c06\u76f4\u63a5\u57fa\u4e8e feign \u7684\u63a5\u53e3\u5b9e\u73b0\uff0c\u5173\u4e8e\u63a5\u53e3\u8def\u5f84\uff0c\u53c2\u6570\u6a21\u578b\u7b49\u7684\u5b9a\u4e49\u53ea\u9700\u8981\u5199\u5728 feign \u63a5\u53e3\u4e2d\uff0c\u5373\u6211\u4eec\u7684\u5de8\u7075\u795e\u4e2d\u5373\u53ef\u3002 \u4f7f\u7528 Spring MVC Contract \u7684 controller \u7684\u5bf9\u8c61\u8fd4\u56de\u503c\u65e0\u9700\u5f3a\u5236\u5b9a\u4e49\u4e3a ApiResponse\uff0c\u63a5\u53e3\u7684 code \u548c msg \u901a\u8fc7 HTTP \u7684 header \u4f20\u9012\u3002 \u9ed8\u8ba4\u7684\u4f20\u53c2\u5f62\u5f0f\u4e3a application/x-www-form-urlencoded \uff0c\u4ecd\u9700**\u4f7f\u7528 @UrlFormBody \u6807\u6ce8\u5bf9\u8c61\u7c7b**\u3002 \u6a21\u578b\u5b9a\u4e49 \u00b6 \u7531\u4e8e\u670d\u52a1\u7aef\u548c\u5de8\u7075\u795e\u5171\u7528\u4e00\u4e2a\u6a21\u578b\uff0c\u4e00\u4e9b\u53c2\u6570\u6821\u9a8c\u6ce8\u89e3\u548c\u6587\u6863\u6ce8\u89e3\u90fd\u9700\u8981\u5728\u5de8\u7075\u795e\u7684\u6a21\u578b\u7c7b\u4e0a\u4f53\u73b0\u3002 @UrlFormBody public class GetUserRequest { @NotNull @Min ( 0 ) @ApiModelProperty ( \"\u7528\u6237ID\" ) private Integer id ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } } public class User { @ApiModelProperty ( \"\u7528\u6237\u59d3\u540d\" ) private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ;} } \u826f\u597d\u7684\u6a21\u578b\u6ce8\u89e3\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u5bf9\u63a5\u63a5\u53e3\uff0c\u540c\u65f6\u670d\u52a1\u7aef\u7684 swagger \u4e0a\u4e5f\u4f1a\u8f93\u51fa\u53ef\u8bfb\u6027\u5f3a\u7684\u6587\u6863\uff0c\u4f9b\u5176\u4ed6\u5f00\u53d1\u6d4b\u8bd5\u4eba\u5458\u4f7f\u7528\u3002 \u6700\u4f73\u5b9e\u8df5 \u00b6 \u540e\u7aef Service \u5c42\u4ee3\u7801\u7edf\u4e00\u4f7f\u7528 post \u63a5\u53e3\uff0c\u4f7f\u7528 @PostMapping \u6ce8\u89e3\u5feb\u901f\u5b9a\u4e49\u3002\u4f18\u5148\u9009\u7528 application/x-www-form-urlencoded \u683c\u5f0f\u4f20\u8f93\u6570\u636e\u3002\u4f18\u70b9\u662f\u5728 swagger \u4e0a\u751f\u6210\u7684\u6587\u6863\u6700\u4e3a\u7b80\u6d01\u548c\u53ef\u8bfb\u3002 \u5bf9\u4e8e\u5165\u53c2\u53c2\u6570\u590d\u6742\uff0c\u5fc5\u987b\u4f7f\u7528 application/json \u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u5728\u5de8\u7075\u795e\u4e2d\u6307\u5b9a\u683c\u5f0f\uff0c\u5e76\u5728\u670d\u52a1\u6216\u63a5\u53e3\u4e2d\uff08\u4e8c\u9009\u4e00\uff09\u6dfb\u52a0 @RequestBody \u6ce8\u89e3\u3002 @ServiceName ( \"user\" ) @RequestMapping ( \"/user\" ) public interface UserService { @PostMapping ( value = \"/postJson\" , consumes = MediaType . APPLICATION_JSON_VALUE ) User getUser ( @RequestBody GetUserRequest request ); /** * \u6b64\u5904\u7684 GetUserRequest \u7c7b\u4e0a\u5fc5\u987b\u6807\u6ce8 @UrlFormBody\uff0c\u5728\u5de8\u7075\u795e\u8bf7\u6c42\u65f6\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u7136 feign \u9ed8\u8ba4\u662f\u4e0d\u652f\u6301 post+form \u7684 */ @PostMapping ( value = \"/postForm\" ) User getUserByForm ( GetUserRequest request ); } @RestController public class UserController implements UserService { @Override public User getUser ( GetUserRequest request ){}; } \u4f7f\u7528\u65b0\u7684 MVC \u534f\u8bae\u540e\uff0c\u670d\u52a1\u7aef\uff0c\u5ba2\u6237\u7aef\uff0c\u5de8\u7075\u795e\u3002\u4e09\u8005\u7684\u63a5\u53e3\u534f\u8bae\u5c06\u5b8c\u5168\u4e00\u81f4\u3002(\u539f\u5148\u53ea\u6709\u5ba2\u6237\u7aef\u548c\u5de8\u7075\u795e\u4e00\u81f4)\u3002\u8fd9\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\uff0c\u6709\u4e9b\u7279\u6b8a\u573a\u666f\u53ef\u80fd\u9700\u8981\u505a\u670d\u52a1\u7aef\u5ba2\u6237\u7aef\u6a21\u578b\u7684\u5dee\u5f02\u5316\uff0c\u4f8b\u5982\u670d\u52a1\u5bf9\u5916\u66b4\u9732\u53c2\u6570\u5c11\u4e8e\u5b9e\u9645\u670d\u52a1\u7aef\u63a5\u53e3\u3002\u6b64\u65f6\u5de8\u7075\u795e\u63a5\u53e3\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528 MVC \u534f\u8bae\uff0c\u4f46\u670d\u52a1\u7aef\u53ef\u4e0d\u7ee7\u627f\u5de8\u7075\u795e\u63a5\u53e3\uff0c\u800c\u662f\u4f7f\u7528\u7ee7\u627f\u6a21\u578b\u65b9\u5f0f\u590d\u7528\u4ee3\u7801\u3002 @RequestMapping ( \"/user\" ) @RestController public class UserController { @PostMapping ( \"/get\" ) User getUser ( GetUserRequestEx request ){}; } public class GetUserRequestEx { @NotNull @Min ( 0 ) @ApiModelProperty ( \"\u5458\u5de5\u5de5\u53f7\" ) private String code ; public String getCode () { return code ; } public void setCode ( String id ) { this . code = code ;} }","title":"Feign\u534f\u8bae\u5347\u7ea7"},{"location":"grus/api/grus-feign-contract/#feign-contract","text":"","title":"Feign contract"},{"location":"grus/api/grus-feign-contract/#_1","text":"@ServiceName ( \"user\" ) @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface UserService { @RequestLine ( \"POST /user/get\" ) User getUser ( @Param ( \"id\" ) Integer id ); } @RequestMapping ( \"/user\" ) @RestController public class UserController { @PostMapping ( \"/get\" ) ApiResponse < User1 > getUser ( GetUserRequest request ){}; } feign \u7684\u63a5\u53e3\u7c7b UserService\uff0c\u548c\u670d\u52a1\u7aef\u63a5\u53e3\u7c7b UserController \u4e24\u8005\u4e92\u76f8\u72ec\u7acb\uff0c\u867d\u7136\u6709\u7075\u6d3b\u6027\u7684\u4f18\u70b9\uff0c\u4f46\u9762\u5bf9\u5927\u91cf\u7684\u4e1a\u52a1\u63a5\u53e3\u65f6\uff0c\u5927\u91cf\u7684\u4ee3\u7801\u62f7\u8d1d\u96be\u4ee5\u907f\u514d\uff0c\u963b\u788d\u5f00\u53d1\u6548\u7387\u7684\u63d0\u5347\u3002","title":"\u73b0\u72b6"},{"location":"grus/api/grus-feign-contract/#spring-mvc-contract202071release","text":"\u901a\u8fc7\u5f15\u5165 feign \u7684 spring mvc \u534f\u8bae\u53ef\u4ee5\u89e3\u51b3\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898 @ServiceName ( \"user\" ) @RequestMapping ( \"/user\" ) public interface UserService { @PostMapping ( \"/get\" ) User getUser ( GetUserRequest request ); } @RestController public class UserController implements UserService { @Override public User getUser ( GetUserRequest request ){}; } \u670d\u52a1\u7aef\u7684\u63a5\u53e3\u7c7b\u5c06\u76f4\u63a5\u57fa\u4e8e feign \u7684\u63a5\u53e3\u5b9e\u73b0\uff0c\u5173\u4e8e\u63a5\u53e3\u8def\u5f84\uff0c\u53c2\u6570\u6a21\u578b\u7b49\u7684\u5b9a\u4e49\u53ea\u9700\u8981\u5199\u5728 feign \u63a5\u53e3\u4e2d\uff0c\u5373\u6211\u4eec\u7684\u5de8\u7075\u795e\u4e2d\u5373\u53ef\u3002 \u4f7f\u7528 Spring MVC Contract \u7684 controller \u7684\u5bf9\u8c61\u8fd4\u56de\u503c\u65e0\u9700\u5f3a\u5236\u5b9a\u4e49\u4e3a ApiResponse\uff0c\u63a5\u53e3\u7684 code \u548c msg \u901a\u8fc7 HTTP \u7684 header \u4f20\u9012\u3002 \u9ed8\u8ba4\u7684\u4f20\u53c2\u5f62\u5f0f\u4e3a application/x-www-form-urlencoded \uff0c\u4ecd\u9700**\u4f7f\u7528 @UrlFormBody \u6807\u6ce8\u5bf9\u8c61\u7c7b**\u3002","title":"Spring MVC Contract\uff082020.7.1.RELEASE\uff09"},{"location":"grus/api/grus-feign-contract/#_2","text":"\u7531\u4e8e\u670d\u52a1\u7aef\u548c\u5de8\u7075\u795e\u5171\u7528\u4e00\u4e2a\u6a21\u578b\uff0c\u4e00\u4e9b\u53c2\u6570\u6821\u9a8c\u6ce8\u89e3\u548c\u6587\u6863\u6ce8\u89e3\u90fd\u9700\u8981\u5728\u5de8\u7075\u795e\u7684\u6a21\u578b\u7c7b\u4e0a\u4f53\u73b0\u3002 @UrlFormBody public class GetUserRequest { @NotNull @Min ( 0 ) @ApiModelProperty ( \"\u7528\u6237ID\" ) private Integer id ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } } public class User { @ApiModelProperty ( \"\u7528\u6237\u59d3\u540d\" ) private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ;} } \u826f\u597d\u7684\u6a21\u578b\u6ce8\u89e3\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u5bf9\u63a5\u63a5\u53e3\uff0c\u540c\u65f6\u670d\u52a1\u7aef\u7684 swagger \u4e0a\u4e5f\u4f1a\u8f93\u51fa\u53ef\u8bfb\u6027\u5f3a\u7684\u6587\u6863\uff0c\u4f9b\u5176\u4ed6\u5f00\u53d1\u6d4b\u8bd5\u4eba\u5458\u4f7f\u7528\u3002","title":"\u6a21\u578b\u5b9a\u4e49"},{"location":"grus/api/grus-feign-contract/#_3","text":"\u540e\u7aef Service \u5c42\u4ee3\u7801\u7edf\u4e00\u4f7f\u7528 post \u63a5\u53e3\uff0c\u4f7f\u7528 @PostMapping \u6ce8\u89e3\u5feb\u901f\u5b9a\u4e49\u3002\u4f18\u5148\u9009\u7528 application/x-www-form-urlencoded \u683c\u5f0f\u4f20\u8f93\u6570\u636e\u3002\u4f18\u70b9\u662f\u5728 swagger \u4e0a\u751f\u6210\u7684\u6587\u6863\u6700\u4e3a\u7b80\u6d01\u548c\u53ef\u8bfb\u3002 \u5bf9\u4e8e\u5165\u53c2\u53c2\u6570\u590d\u6742\uff0c\u5fc5\u987b\u4f7f\u7528 application/json \u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u5728\u5de8\u7075\u795e\u4e2d\u6307\u5b9a\u683c\u5f0f\uff0c\u5e76\u5728\u670d\u52a1\u6216\u63a5\u53e3\u4e2d\uff08\u4e8c\u9009\u4e00\uff09\u6dfb\u52a0 @RequestBody \u6ce8\u89e3\u3002 @ServiceName ( \"user\" ) @RequestMapping ( \"/user\" ) public interface UserService { @PostMapping ( value = \"/postJson\" , consumes = MediaType . APPLICATION_JSON_VALUE ) User getUser ( @RequestBody GetUserRequest request ); /** * \u6b64\u5904\u7684 GetUserRequest \u7c7b\u4e0a\u5fc5\u987b\u6807\u6ce8 @UrlFormBody\uff0c\u5728\u5de8\u7075\u795e\u8bf7\u6c42\u65f6\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u7136 feign \u9ed8\u8ba4\u662f\u4e0d\u652f\u6301 post+form \u7684 */ @PostMapping ( value = \"/postForm\" ) User getUserByForm ( GetUserRequest request ); } @RestController public class UserController implements UserService { @Override public User getUser ( GetUserRequest request ){}; } \u4f7f\u7528\u65b0\u7684 MVC \u534f\u8bae\u540e\uff0c\u670d\u52a1\u7aef\uff0c\u5ba2\u6237\u7aef\uff0c\u5de8\u7075\u795e\u3002\u4e09\u8005\u7684\u63a5\u53e3\u534f\u8bae\u5c06\u5b8c\u5168\u4e00\u81f4\u3002(\u539f\u5148\u53ea\u6709\u5ba2\u6237\u7aef\u548c\u5de8\u7075\u795e\u4e00\u81f4)\u3002\u8fd9\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\uff0c\u6709\u4e9b\u7279\u6b8a\u573a\u666f\u53ef\u80fd\u9700\u8981\u505a\u670d\u52a1\u7aef\u5ba2\u6237\u7aef\u6a21\u578b\u7684\u5dee\u5f02\u5316\uff0c\u4f8b\u5982\u670d\u52a1\u5bf9\u5916\u66b4\u9732\u53c2\u6570\u5c11\u4e8e\u5b9e\u9645\u670d\u52a1\u7aef\u63a5\u53e3\u3002\u6b64\u65f6\u5de8\u7075\u795e\u63a5\u53e3\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528 MVC \u534f\u8bae\uff0c\u4f46\u670d\u52a1\u7aef\u53ef\u4e0d\u7ee7\u627f\u5de8\u7075\u795e\u63a5\u53e3\uff0c\u800c\u662f\u4f7f\u7528\u7ee7\u627f\u6a21\u578b\u65b9\u5f0f\u590d\u7528\u4ee3\u7801\u3002 @RequestMapping ( \"/user\" ) @RestController public class UserController { @PostMapping ( \"/get\" ) User getUser ( GetUserRequestEx request ){}; } public class GetUserRequestEx { @NotNull @Min ( 0 ) @ApiModelProperty ( \"\u5458\u5de5\u5de5\u53f7\" ) private String code ; public String getCode () { return code ; } public void setCode ( String id ) { this . code = code ;} }","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"grus/api/grus-feign-guide/","text":"\u4f7f\u7528\u6307\u5357 \u00b6 maven \u4f9d\u8d56 \u00b6 <!-- \u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5f15\u5165\u8fd9\u4e2a\u6a21\u5757 --> <dependency> <artifactId> grus-feign </artifactId> <groupId> com.ciicgat.grus </groupId> </dependency> ``` ## \u81ea\u5b9a\u4e49\u63a5\u53e3 ```java @Headers({\"Content-Type: application/x-www-form-urlencoded\"}) public interface MemberService { @RequestLine(\"POST /member/get\") Member getMemberById(@Param(\"id\") Integer var1); } \u81ea\u5b9a\u4e49 ServiceName \u00b6 \u5728 Java \u5305\u4e2d(package-info.java),\u914d\u7f6e ServiceName \u6307\u5411\u4e0a\u9762\u7684 userdoor @ServiceName ( \"userdoor\" ) package com.ciicgat.api.userdoor.service ; import com.ciicgat.api.core.annotation.ServiceName ; \u5b9e\u4f8b\u5316\u63a5\u53e3 \u00b6 \u9879\u76ee\u542f\u52a8\u65f6\uff0c\u4f1a\u626b\u63cf @FeignService \uff0c\u901a\u8fc7 BeanPostProcessor \u81ea\u52a8\u5c06\u5de8\u7075\u795eAPI\u7684\u670d\u52a1\u6ce8\u5165\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7 @Bean \u65b9\u5f0f\u6ce8\u5165Spring\u5bb9\u5668\u4f7f\u7528\uff0c \u4f46\u4e0d\u518d\u63a8\u8350 @Service public class AppService { @FeignService private PersonService personService ; @FeignService ( cacheBinding = @CacheBinding ( method = \"getPersonById\" , params = { 0 })) private PersonService personService2 ; } // \u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\u4e0d\u518d\u63a8\u8350\uff1a @Configuration public class DependencyServiceConfig { @Bean public PersonService personService () { return FeignServiceFactory . newInstance ( PersonService . class ); } } ``` ## \u6ce8\u89e3\u8bf4\u660e ** @Headers @RequestLine @Param ** > Feign \u6ce8\u89e3 > @Headers \u8bf7\u6c42\u5934\u90e8 > @RequestLine \u8bf7\u6c42\u65b9\u5f0f > @Param \u539f\u751f\u7c7b\u578b\u6216\u5176\u5305\u88c5\u7c7b\u578b\u65f6 \uff0c \u8bf7\u6c42\u53c2\u6570\u540d\u79f0 ** @ServiceName ** > ** value ** \uff1a gconf \u4e2d ciicgat - api \u4e2d end_points . properties \u6216 end_points_k8s . properties \u5c5e\u6027\u6587\u4ef6\u7684 key \u503c > ** urlPathPrefix ** \uff1a url path \u7684\u524d\u7f00 \uff0c \u9002\u5408\u5728\u670d\u52a1\u6709\u4e00\u4e2a\u7edf\u4e00\u524d\u7f00 path \u65f6\u8bbe\u7f6e \u3002 ** \u6ce8\u610f ** \uff1a _\u6b64\u6ce8\u89e3\u4f18\u5148\u4ece\u7c7b\u4e0a\u83b7\u53d6 \uff0c \u4e5f\u5373\u6ce8\u5728\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4f18\u5148\u4e8e\u6ce8\u89e3\u4e8e\u5305\u4e0a\u7684\u6ce8\u89e3_ ** \u6ce8\u610f ** \uff1a _value \u7684\u503c\u4e00\u5f8b\u4e0e gconf \u7684 appId \u503c\u76f8\u540c_ ``` java @ServiceName ( value = \"card-mall-service\" , urlPathPrefix = \"cardMallService\" ) @PhpApiName \u5728\u65b9\u6cd5\u4e0a\u52a0\u5165\u6b64\u6ce8\u89e3\uff0c\u8bf7\u6c42 php \u670d\u52a1\u65f6\u81ea\u52a8\u4f1a\u5728\u8bf7\u6c42\u4f53\u4e2d\u52a0\u5165\"apiOutput=JSON&apiName=\" value \uff1a\u8bf7\u6c42 php \u670d\u52a1\u65f6\uff0cphp \u63a5\u53e3\u7684\u540d\u79f0\uff0c\u5373\u4e0a\u9762\u7684 apiName @RequestLine ( \"POST\" ) @PhpApiName ( \"CardSample.findAll\" ) List < CardSampleInfo > findCardSampleInfo ( CardSampleInfoFindRequest request ); @UrlFormBody \u5f53\u8bf7\u6c42\u5934\u90e8\u4e3a @Headers (\"Content-Type: application/x-www-form-urlencoded\")\u800c\u8bf7\u6c42\u53c2\u6570\u4e3a\u5bf9\u8c61\u65f6\uff0c\u8bf7\u6c42\u5bf9\u8c61\u9700\u52a0\u6b64\u6ce8\u89e3 @UrlFormBody public class CardSampleInfoFindRequest implements java . io . Serializable { private String ids ; private Integer enterpriseId ; // ... } @ApiCache params \uff1a\u53c2\u6570\u7684\u5e8f\u5217\u53f7\uff0c\u6309\u987a\u5e8f\u7ec4\u88c5\u7f13\u5b58 key\uff0c\u4e0d\u4f20\u5c06\u4ee5\u65b9\u6cd5\u540d\u505a key\uff0c\u786e\u4fdd\u53c2\u6570\u975e\u7a7a\u65f6 toString \u4e0d\u4f1a\u7ed9\u51fa\"null\"\u7ed3\u679c expireSeconds \uff1a \u7f13\u5b58\u8fc7\u671f\u65f6\u95f4 maxCacheSize \uff1a \u6700\u5927\u7f13\u5b58\u5927\u5c0f concurrencyLevel \uff1a\u5e76\u53d1\u7ea7\u522b cacheNullValue \uff1a\u5f53\u503c\u4e3a null \u65f6\uff0c\u4e3a true\uff08\u9ed8\u8ba4\uff09\u5c06\u4f1a\u7f13\u5b58 null \u503c\uff0c\u4e3a false \u7684\u65f6\u5019\u4e0d\u4f1a\u7f13\u5b58 null \u503c @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) @RequestLine ( \"POST /getBean\" ) @ApiCache ( params = { 0 , 1 }, expireSeconds = 30 ) TestBean getBean ( @Param ( \"text\" ) String text , @Param ( \"integer\" ) int integer ); \u6ce8\u610f\uff1a\u7f13\u5b58\u53ea\u4f1a\u7f13\u5b58\u6210\u529f\u7684\u8c03\u7528\u8fd4\u56de\u503c\uff1bApiCache \u5e95\u5c42\u4f7f\u7528\u7684\u7f13\u5b58\u662f google \u7684 guava @IgnoreError \u8c03\u7528\u65f6\u53d1\u751f\u9519\u8bef\u6216\u5176\u4ed6\u5f02\u5e38\uff0c\u5f53\u8fd4\u56de\u4e3a\u975e\u57fa\u7840\u5bf9\u8c61\u65f6\u4ee5\u7a7a\u503c\u8fd4\u56de\uff0c\u5426\u5219\u8fd4\u56de\u57fa\u7840\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c \u4f7f\u7528\u65b9\u9700\u8981\u5bf9\u63a5\u53e3\u8fd4\u56de\u7684\u7a7a\u503c\u6216\u9ed8\u8ba4\u503c\u505a\u6b63\u786e\u7684\u5224\u65ad\u548c\u5904\u7406 \u9002\u7528\u4e8e\u805a\u5408\u7c7b\u63a5\u53e3\uff0c\u5176\u4e2d\u90e8\u5206\u63a5\u53e3\u5931\u8d25\u4e0d\u5f71\u54cd\u6574\u4f53\u8fd4\u56de Form \u8bf7\u6c42\u65b9\u5f0f \u00b6 @Headers (\"Content-Type: application/x-www-form-urlencoded\") \u6b64\u65b9\u5f0f\u4e3a\u5e38\u7528\u8bf7\u6c42\u65b9\u5f0f\uff0c\u5f53\u8bf7\u6c42\u53c2\u6570\u4e3a\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u5728\u5bf9\u8c61\u4e0a\u52a0\u4e0a\u6ce8\u89e3 @UrlFormBody @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface AdminRealmService { @RequestLine ( \"POST /adminrealm/getAdminRealm2\" ) AdminRealm getAdminRealm ( @Param ( \"appId\" ) long appId , @Param ( \"adminId\" ) long adminId ); } GET \u8bf7\u6c42\u65b9\u5f0f \u00b6 GET \u8bf7\u6c42\u9700\u8981\u5728 url \u540e\u9762\u62fc\u63a5\u53c2\u6570\uff0c\u5982\u4e0b\u9762\u7684?personId={personId} @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) @RequestLine ( \"GET /push/findByPersonId?personId={personId}\" ) UserPushSetting findByPersonId ( @Param ( \"personId\" ) Long personId ); POST \u8bf7\u6c42\u65b9\u5f0f \u00b6 \u4e0d\u540c\u4e8e GET,POST \u4e0d\u9700\u8981\u518d url \u540e\u9762\u62fc\u63a5\u53c2\u6570 @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface AdminRealmService { @RequestLine ( \"POST /adminrealm/getAdminRealm2\" ) AdminRealm getAdminRealm ( @Param ( \"appId\" ) long appId , @Param ( \"adminId\" ) long adminId ); } Json \u8bf7\u6c42\u65b9\u5f0f \u00b6 \u6b64\u8bf7\u6c42\u65b9\u5f0f\u4e3a Json \u683c\u5f0f\u8bf7\u6c42\u65b9\u5f0f\uff0c\u4f7f\u7528 Spring Controller \u63a5\u6536\u65f6\u52a0\u4e0a @RequestBody \u6ce8\u89e3 public interface AppApi { @Headers ({ \"Content-Type: application/json\" }) @RequestLine ( \"POST /employee/batchGetEmployerNameByPersonIds\" ) Map < Integer , String > batchGetEmployerNameByPersonIds ( List < Integer > personIds ); } Php \u8bf7\u6c42\u65b9\u5f0f \u5f88\u5c11 \u00b6 Php \u8bf7\u6c42\u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff1a curl -d \"apiOutput=JSON&apiName=CardInterface.checkCardStock&cardSampleIds=[114,151]\" http://webservice.card.ciicgat.dev/ \u4f7f\u7528 @PhpApiName \u65f6\uff0c\u4f1a\u81ea\u52a8\u5728\u5934\u90e8\u52a0\u4e0a apiOutput=JSON&apiName= \u3002 public interface AppApi { @RequestLine ( \"POST\" ) @PhpApiName ( \"CardSample.findAll\" ) List < CardSampleInfo > findCardSampleInfo ( CardSampleInfoFindRequest request ); } \u8fd4\u56de\u6570\u636e\u683c\u5f0f\u53ca\u5f02\u5e38\u5904\u7406 \u00b6 \u670d\u52a1\u7aef\u8fd4\u56de\u7684\u4e3a Json \u683c\u5f0f\uff0c\u4e14**Java \u7aef**\u7684\u683c\u5f0f\u4e3a\uff1a { \"code\": 0, //\u8fd4\u56de\u72b6\u6001\u7801 \"data\": true, //data\u4e3a\u5b9e\u9645\u8fd4\u56de\u6570\u636e \"msg\": \"OK\" //\u8fd4\u56de\u9519\u8bef\u6d88\u606f } \u81ea\u5b9a\u4e49\u7684 feign \u63a5\u53e3\u5982\u679c\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3a com.ciicgat.sdk.lang.convert.ApiResponse \u4e14\u8fd4\u56de code \u975e 0 \u65f6\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u53cd\u4e4b\u82e5\u4e0d\u4e3a ApiResponse \u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a com.ciicgat.api.core.BusinessFeignException \u5f02\u5e38\u4fe1\u606f \u670d\u52a1\u7aef\u8fd4\u56de\u7684\u4e3a Json \u683c\u5f0f\uff0c\u4e14**Php \u7aef**\u7684\u683c\u5f0f\u4e3a\uff1a { \"result\":true, //result\u4e3a\u5b9e\u9645\u8fd4\u56de\u6570\u636e \"success\":\"true\",//\u8fd4\u56de\u7ed3\u679c \"totalRows\":\"\",//\u5206\u9875\uff0c\u603b\u6570 \"errorMsg\":\"\"//\u8fd4\u56de\u9519\u8bef\u6d88\u606f } \u81ea\u5b9a\u4e49\u7684 feign \u63a5\u53e3\u5982\u679c\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3a com.ciicgat.sdk.lang.convert.PhpApiResponse \u4e14\u8fd4\u56de\u4e3a false \u65f6\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u53cd\u4e4b\u82e5\u4e0d\u4e3a PhpApiResponse \u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a com.ciicgat.api.core.BusinessFeignException \u5f02\u5e38\u4fe1\u606f \u6ce8\u610f\uff1aPHP \u6d89\u53ca\u5230\u5206\u9875\u8bf7\u4f7f\u7528 PhpApiResponse \u4f5c\u4e3a\u8fd4\u56de \u81ea\u5b9a\u4e49\u5b9e\u4f8b\u5316\u5de5\u5382\u53ca\u8d85\u65f6\u548c\u91cd\u8bd5\u7b49\u914d\u7f6e \u00b6 FeignServiceFactory.newInstance(MemberService.class) \u7b49\u4ef7\u4e8e FeignServiceFactory.newInstance(MemberService.class, new Request.Options(), null, null) ,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 FeignServiceFactory.newInstance \u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b feign \u7279\u6b8a\u7684\u8bbe\u7f6e\u3002 public static <T> T newInstance(Class<T> serviceClazz, Options options, Iterable<RequestInterceptor> requestInterceptors, Retryer retryer) FeignServiceFactory.newInstance \u53c2\u6570\u8bf4\u660e \u00b6 Options \uff1a\u81ea\u5b9a\u4e49\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08connectTimeoutMillis\uff09\u548c\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\uff08readTimeoutMillis\uff09 RequestInterceptor \uff1afeign \u62e6\u622a\u5668\uff0c\u82e5\u76f8\u5bf9\u6240\u6709 request \u505a\u7edf\u4e00\u7684\u5904\u7406\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u6b64\u62e6\u622a\u5668 Retryer \uff1a\u81ea\u5b9a\u4e49\u5f02\u5e38\u8bf7\u6c42\u91cd\u8bd5\u6b21\u6570\uff0c\u4ee5\u53ca\u91cd\u8bd5\u95f4\u9694\u4ee5\u53ca\u6700\u5927\u91cd\u8bd5\u95f4\u9694 \u81ea\u5b9a\u4e49\u8fd4\u56de Json \u7684\u89e3\u6790\u683c\u5f0f \u00b6 ciicgat-sdk-api \u5904\u7406\u8fd4\u56de Json \u683c\u5f0f\u7684\u5de5\u5177\u7c7b\u662f Jackson \u7c7b\u5e93\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Jackson \u63d0\u4f9b\u7684\u4e00\u4e9b\u7c7b\u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b\u8fd4\u56de\u6570\u636e\u7684\u683c\u5f0f\uff0c\u5982 BigDecimal \u7cbe\u5ea6\uff1a public class MoneyDeserializer extends JsonDeserializer<BigDecimal> { @Override public BigDecimal deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException { return jp.getDecimalValue().setScale(2, BigDecimal.ROUND_FLOOR); } } \u5728\u8fd4\u56de\u7684 model \u4e0a\u52a0\u4e0a\u6ce8\u89e3\uff1a @JsonDeserialize(using = MoneyDeserializer.class) private BigDecimal balance; \u672c\u5730\u8c03\u8bd5\u670d\u52a1 \u00b6 \u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8c03\u8bd5\u672c\u5730\u670d\u52a1\uff0c\u53c8\u4e0d\u60f3\u6539 gconf \u4e0a\u7684\u914d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u672c\u5730\u9759\u6001\u521d\u59cb\u5316\u5982\u4e0b\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u914d\u7f6e key \u4e3a userdoor \u7684\u8bf7\u6c42\u5730\u5740\u4e3ahttp://localhost:19992 @SpringBootApplication public class Application { public static void main ( String [] args ) { EndPointConfigs . addEndPointConfig ( \"userdoor\" , \"http://localhost:19992\" ); // ... } } \u67e5\u770b\u6d4b\u8bd5\u7528\u4f8b \u00b6 sdk \u5305\u4e2d\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u67e5\u770b\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u5feb\u7684\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u7528\u4f8b\u5730\u5740\uff1a http://gitlab.wuxingdev.cn/java/ciicgat-sdk/tree/master/ciicgat-sdk-api/src/test/java/com/ciicgat/api/core \u53c2\u8003\u6587\u6863 \u00b6 OpenFeign Github\u5730\u5740 ciicgat-sdk-api GitLab\u5730\u5740","title":"\u4f7f\u7528\u6307\u5357"},{"location":"grus/api/grus-feign-guide/#_1","text":"","title":"\u4f7f\u7528\u6307\u5357"},{"location":"grus/api/grus-feign-guide/#maven","text":"<!-- \u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5f15\u5165\u8fd9\u4e2a\u6a21\u5757 --> <dependency> <artifactId> grus-feign </artifactId> <groupId> com.ciicgat.grus </groupId> </dependency> ``` ## \u81ea\u5b9a\u4e49\u63a5\u53e3 ```java @Headers({\"Content-Type: application/x-www-form-urlencoded\"}) public interface MemberService { @RequestLine(\"POST /member/get\") Member getMemberById(@Param(\"id\") Integer var1); }","title":"maven \u4f9d\u8d56"},{"location":"grus/api/grus-feign-guide/#servicename","text":"\u5728 Java \u5305\u4e2d(package-info.java),\u914d\u7f6e ServiceName \u6307\u5411\u4e0a\u9762\u7684 userdoor @ServiceName ( \"userdoor\" ) package com.ciicgat.api.userdoor.service ; import com.ciicgat.api.core.annotation.ServiceName ;","title":"\u81ea\u5b9a\u4e49 ServiceName"},{"location":"grus/api/grus-feign-guide/#_2","text":"\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u4f1a\u626b\u63cf @FeignService \uff0c\u901a\u8fc7 BeanPostProcessor \u81ea\u52a8\u5c06\u5de8\u7075\u795eAPI\u7684\u670d\u52a1\u6ce8\u5165\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7 @Bean \u65b9\u5f0f\u6ce8\u5165Spring\u5bb9\u5668\u4f7f\u7528\uff0c \u4f46\u4e0d\u518d\u63a8\u8350 @Service public class AppService { @FeignService private PersonService personService ; @FeignService ( cacheBinding = @CacheBinding ( method = \"getPersonById\" , params = { 0 })) private PersonService personService2 ; } // \u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\u4e0d\u518d\u63a8\u8350\uff1a @Configuration public class DependencyServiceConfig { @Bean public PersonService personService () { return FeignServiceFactory . newInstance ( PersonService . class ); } } ``` ## \u6ce8\u89e3\u8bf4\u660e ** @Headers @RequestLine @Param ** > Feign \u6ce8\u89e3 > @Headers \u8bf7\u6c42\u5934\u90e8 > @RequestLine \u8bf7\u6c42\u65b9\u5f0f > @Param \u539f\u751f\u7c7b\u578b\u6216\u5176\u5305\u88c5\u7c7b\u578b\u65f6 \uff0c \u8bf7\u6c42\u53c2\u6570\u540d\u79f0 ** @ServiceName ** > ** value ** \uff1a gconf \u4e2d ciicgat - api \u4e2d end_points . properties \u6216 end_points_k8s . properties \u5c5e\u6027\u6587\u4ef6\u7684 key \u503c > ** urlPathPrefix ** \uff1a url path \u7684\u524d\u7f00 \uff0c \u9002\u5408\u5728\u670d\u52a1\u6709\u4e00\u4e2a\u7edf\u4e00\u524d\u7f00 path \u65f6\u8bbe\u7f6e \u3002 ** \u6ce8\u610f ** \uff1a _\u6b64\u6ce8\u89e3\u4f18\u5148\u4ece\u7c7b\u4e0a\u83b7\u53d6 \uff0c \u4e5f\u5373\u6ce8\u5728\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4f18\u5148\u4e8e\u6ce8\u89e3\u4e8e\u5305\u4e0a\u7684\u6ce8\u89e3_ ** \u6ce8\u610f ** \uff1a _value \u7684\u503c\u4e00\u5f8b\u4e0e gconf \u7684 appId \u503c\u76f8\u540c_ ``` java @ServiceName ( value = \"card-mall-service\" , urlPathPrefix = \"cardMallService\" ) @PhpApiName \u5728\u65b9\u6cd5\u4e0a\u52a0\u5165\u6b64\u6ce8\u89e3\uff0c\u8bf7\u6c42 php \u670d\u52a1\u65f6\u81ea\u52a8\u4f1a\u5728\u8bf7\u6c42\u4f53\u4e2d\u52a0\u5165\"apiOutput=JSON&apiName=\" value \uff1a\u8bf7\u6c42 php \u670d\u52a1\u65f6\uff0cphp \u63a5\u53e3\u7684\u540d\u79f0\uff0c\u5373\u4e0a\u9762\u7684 apiName @RequestLine ( \"POST\" ) @PhpApiName ( \"CardSample.findAll\" ) List < CardSampleInfo > findCardSampleInfo ( CardSampleInfoFindRequest request ); @UrlFormBody \u5f53\u8bf7\u6c42\u5934\u90e8\u4e3a @Headers (\"Content-Type: application/x-www-form-urlencoded\")\u800c\u8bf7\u6c42\u53c2\u6570\u4e3a\u5bf9\u8c61\u65f6\uff0c\u8bf7\u6c42\u5bf9\u8c61\u9700\u52a0\u6b64\u6ce8\u89e3 @UrlFormBody public class CardSampleInfoFindRequest implements java . io . Serializable { private String ids ; private Integer enterpriseId ; // ... } @ApiCache params \uff1a\u53c2\u6570\u7684\u5e8f\u5217\u53f7\uff0c\u6309\u987a\u5e8f\u7ec4\u88c5\u7f13\u5b58 key\uff0c\u4e0d\u4f20\u5c06\u4ee5\u65b9\u6cd5\u540d\u505a key\uff0c\u786e\u4fdd\u53c2\u6570\u975e\u7a7a\u65f6 toString \u4e0d\u4f1a\u7ed9\u51fa\"null\"\u7ed3\u679c expireSeconds \uff1a \u7f13\u5b58\u8fc7\u671f\u65f6\u95f4 maxCacheSize \uff1a \u6700\u5927\u7f13\u5b58\u5927\u5c0f concurrencyLevel \uff1a\u5e76\u53d1\u7ea7\u522b cacheNullValue \uff1a\u5f53\u503c\u4e3a null \u65f6\uff0c\u4e3a true\uff08\u9ed8\u8ba4\uff09\u5c06\u4f1a\u7f13\u5b58 null \u503c\uff0c\u4e3a false \u7684\u65f6\u5019\u4e0d\u4f1a\u7f13\u5b58 null \u503c @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) @RequestLine ( \"POST /getBean\" ) @ApiCache ( params = { 0 , 1 }, expireSeconds = 30 ) TestBean getBean ( @Param ( \"text\" ) String text , @Param ( \"integer\" ) int integer ); \u6ce8\u610f\uff1a\u7f13\u5b58\u53ea\u4f1a\u7f13\u5b58\u6210\u529f\u7684\u8c03\u7528\u8fd4\u56de\u503c\uff1bApiCache \u5e95\u5c42\u4f7f\u7528\u7684\u7f13\u5b58\u662f google \u7684 guava @IgnoreError \u8c03\u7528\u65f6\u53d1\u751f\u9519\u8bef\u6216\u5176\u4ed6\u5f02\u5e38\uff0c\u5f53\u8fd4\u56de\u4e3a\u975e\u57fa\u7840\u5bf9\u8c61\u65f6\u4ee5\u7a7a\u503c\u8fd4\u56de\uff0c\u5426\u5219\u8fd4\u56de\u57fa\u7840\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c \u4f7f\u7528\u65b9\u9700\u8981\u5bf9\u63a5\u53e3\u8fd4\u56de\u7684\u7a7a\u503c\u6216\u9ed8\u8ba4\u503c\u505a\u6b63\u786e\u7684\u5224\u65ad\u548c\u5904\u7406 \u9002\u7528\u4e8e\u805a\u5408\u7c7b\u63a5\u53e3\uff0c\u5176\u4e2d\u90e8\u5206\u63a5\u53e3\u5931\u8d25\u4e0d\u5f71\u54cd\u6574\u4f53\u8fd4\u56de","title":"\u5b9e\u4f8b\u5316\u63a5\u53e3"},{"location":"grus/api/grus-feign-guide/#form","text":"@Headers (\"Content-Type: application/x-www-form-urlencoded\") \u6b64\u65b9\u5f0f\u4e3a\u5e38\u7528\u8bf7\u6c42\u65b9\u5f0f\uff0c\u5f53\u8bf7\u6c42\u53c2\u6570\u4e3a\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u5728\u5bf9\u8c61\u4e0a\u52a0\u4e0a\u6ce8\u89e3 @UrlFormBody @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface AdminRealmService { @RequestLine ( \"POST /adminrealm/getAdminRealm2\" ) AdminRealm getAdminRealm ( @Param ( \"appId\" ) long appId , @Param ( \"adminId\" ) long adminId ); }","title":"Form \u8bf7\u6c42\u65b9\u5f0f"},{"location":"grus/api/grus-feign-guide/#get","text":"GET \u8bf7\u6c42\u9700\u8981\u5728 url \u540e\u9762\u62fc\u63a5\u53c2\u6570\uff0c\u5982\u4e0b\u9762\u7684?personId={personId} @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) @RequestLine ( \"GET /push/findByPersonId?personId={personId}\" ) UserPushSetting findByPersonId ( @Param ( \"personId\" ) Long personId );","title":"GET \u8bf7\u6c42\u65b9\u5f0f"},{"location":"grus/api/grus-feign-guide/#post","text":"\u4e0d\u540c\u4e8e GET,POST \u4e0d\u9700\u8981\u518d url \u540e\u9762\u62fc\u63a5\u53c2\u6570 @Headers ( \"Content-Type: application/x-www-form-urlencoded\" ) public interface AdminRealmService { @RequestLine ( \"POST /adminrealm/getAdminRealm2\" ) AdminRealm getAdminRealm ( @Param ( \"appId\" ) long appId , @Param ( \"adminId\" ) long adminId ); }","title":"POST \u8bf7\u6c42\u65b9\u5f0f"},{"location":"grus/api/grus-feign-guide/#json","text":"\u6b64\u8bf7\u6c42\u65b9\u5f0f\u4e3a Json \u683c\u5f0f\u8bf7\u6c42\u65b9\u5f0f\uff0c\u4f7f\u7528 Spring Controller \u63a5\u6536\u65f6\u52a0\u4e0a @RequestBody \u6ce8\u89e3 public interface AppApi { @Headers ({ \"Content-Type: application/json\" }) @RequestLine ( \"POST /employee/batchGetEmployerNameByPersonIds\" ) Map < Integer , String > batchGetEmployerNameByPersonIds ( List < Integer > personIds ); }","title":"Json \u8bf7\u6c42\u65b9\u5f0f"},{"location":"grus/api/grus-feign-guide/#php","text":"Php \u8bf7\u6c42\u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff1a curl -d \"apiOutput=JSON&apiName=CardInterface.checkCardStock&cardSampleIds=[114,151]\" http://webservice.card.ciicgat.dev/ \u4f7f\u7528 @PhpApiName \u65f6\uff0c\u4f1a\u81ea\u52a8\u5728\u5934\u90e8\u52a0\u4e0a apiOutput=JSON&apiName= \u3002 public interface AppApi { @RequestLine ( \"POST\" ) @PhpApiName ( \"CardSample.findAll\" ) List < CardSampleInfo > findCardSampleInfo ( CardSampleInfoFindRequest request ); }","title":"Php \u8bf7\u6c42\u65b9\u5f0f \u5f88\u5c11"},{"location":"grus/api/grus-feign-guide/#_3","text":"\u670d\u52a1\u7aef\u8fd4\u56de\u7684\u4e3a Json \u683c\u5f0f\uff0c\u4e14**Java \u7aef**\u7684\u683c\u5f0f\u4e3a\uff1a { \"code\": 0, //\u8fd4\u56de\u72b6\u6001\u7801 \"data\": true, //data\u4e3a\u5b9e\u9645\u8fd4\u56de\u6570\u636e \"msg\": \"OK\" //\u8fd4\u56de\u9519\u8bef\u6d88\u606f } \u81ea\u5b9a\u4e49\u7684 feign \u63a5\u53e3\u5982\u679c\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3a com.ciicgat.sdk.lang.convert.ApiResponse \u4e14\u8fd4\u56de code \u975e 0 \u65f6\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u53cd\u4e4b\u82e5\u4e0d\u4e3a ApiResponse \u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a com.ciicgat.api.core.BusinessFeignException \u5f02\u5e38\u4fe1\u606f \u670d\u52a1\u7aef\u8fd4\u56de\u7684\u4e3a Json \u683c\u5f0f\uff0c\u4e14**Php \u7aef**\u7684\u683c\u5f0f\u4e3a\uff1a { \"result\":true, //result\u4e3a\u5b9e\u9645\u8fd4\u56de\u6570\u636e \"success\":\"true\",//\u8fd4\u56de\u7ed3\u679c \"totalRows\":\"\",//\u5206\u9875\uff0c\u603b\u6570 \"errorMsg\":\"\"//\u8fd4\u56de\u9519\u8bef\u6d88\u606f } \u81ea\u5b9a\u4e49\u7684 feign \u63a5\u53e3\u5982\u679c\u65b9\u6cd5\u8fd4\u56de\u503c\u4e3a com.ciicgat.sdk.lang.convert.PhpApiResponse \u4e14\u8fd4\u56de\u4e3a false \u65f6\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u53cd\u4e4b\u82e5\u4e0d\u4e3a PhpApiResponse \u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a com.ciicgat.api.core.BusinessFeignException \u5f02\u5e38\u4fe1\u606f \u6ce8\u610f\uff1aPHP \u6d89\u53ca\u5230\u5206\u9875\u8bf7\u4f7f\u7528 PhpApiResponse \u4f5c\u4e3a\u8fd4\u56de","title":"\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u53ca\u5f02\u5e38\u5904\u7406"},{"location":"grus/api/grus-feign-guide/#_4","text":"FeignServiceFactory.newInstance(MemberService.class) \u7b49\u4ef7\u4e8e FeignServiceFactory.newInstance(MemberService.class, new Request.Options(), null, null) ,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 FeignServiceFactory.newInstance \u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b feign \u7279\u6b8a\u7684\u8bbe\u7f6e\u3002 public static <T> T newInstance(Class<T> serviceClazz, Options options, Iterable<RequestInterceptor> requestInterceptors, Retryer retryer)","title":"\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u5316\u5de5\u5382\u53ca\u8d85\u65f6\u548c\u91cd\u8bd5\u7b49\u914d\u7f6e"},{"location":"grus/api/grus-feign-guide/#feignservicefactorynewinstance","text":"Options \uff1a\u81ea\u5b9a\u4e49\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08connectTimeoutMillis\uff09\u548c\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\uff08readTimeoutMillis\uff09 RequestInterceptor \uff1afeign \u62e6\u622a\u5668\uff0c\u82e5\u76f8\u5bf9\u6240\u6709 request \u505a\u7edf\u4e00\u7684\u5904\u7406\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u6b64\u62e6\u622a\u5668 Retryer \uff1a\u81ea\u5b9a\u4e49\u5f02\u5e38\u8bf7\u6c42\u91cd\u8bd5\u6b21\u6570\uff0c\u4ee5\u53ca\u91cd\u8bd5\u95f4\u9694\u4ee5\u53ca\u6700\u5927\u91cd\u8bd5\u95f4\u9694","title":"FeignServiceFactory.newInstance \u53c2\u6570\u8bf4\u660e"},{"location":"grus/api/grus-feign-guide/#json_1","text":"ciicgat-sdk-api \u5904\u7406\u8fd4\u56de Json \u683c\u5f0f\u7684\u5de5\u5177\u7c7b\u662f Jackson \u7c7b\u5e93\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Jackson \u63d0\u4f9b\u7684\u4e00\u4e9b\u7c7b\u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b\u8fd4\u56de\u6570\u636e\u7684\u683c\u5f0f\uff0c\u5982 BigDecimal \u7cbe\u5ea6\uff1a public class MoneyDeserializer extends JsonDeserializer<BigDecimal> { @Override public BigDecimal deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException { return jp.getDecimalValue().setScale(2, BigDecimal.ROUND_FLOOR); } } \u5728\u8fd4\u56de\u7684 model \u4e0a\u52a0\u4e0a\u6ce8\u89e3\uff1a @JsonDeserialize(using = MoneyDeserializer.class) private BigDecimal balance;","title":"\u81ea\u5b9a\u4e49\u8fd4\u56de Json \u7684\u89e3\u6790\u683c\u5f0f"},{"location":"grus/api/grus-feign-guide/#_5","text":"\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8c03\u8bd5\u672c\u5730\u670d\u52a1\uff0c\u53c8\u4e0d\u60f3\u6539 gconf \u4e0a\u7684\u914d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u672c\u5730\u9759\u6001\u521d\u59cb\u5316\u5982\u4e0b\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u914d\u7f6e key \u4e3a userdoor \u7684\u8bf7\u6c42\u5730\u5740\u4e3ahttp://localhost:19992 @SpringBootApplication public class Application { public static void main ( String [] args ) { EndPointConfigs . addEndPointConfig ( \"userdoor\" , \"http://localhost:19992\" ); // ... } }","title":"\u672c\u5730\u8c03\u8bd5\u670d\u52a1"},{"location":"grus/api/grus-feign-guide/#_6","text":"sdk \u5305\u4e2d\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u67e5\u770b\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u5feb\u7684\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u7528\u4f8b\u5730\u5740\uff1a http://gitlab.wuxingdev.cn/java/ciicgat-sdk/tree/master/ciicgat-sdk-api/src/test/java/com/ciicgat/api/core","title":"\u67e5\u770b\u6d4b\u8bd5\u7528\u4f8b"},{"location":"grus/api/grus-feign-guide/#_7","text":"OpenFeign Github\u5730\u5740 ciicgat-sdk-api GitLab\u5730\u5740","title":"\u53c2\u8003\u6587\u6863"},{"location":"grus/api/grus-feign-use/","text":"feign \u00b6 \u4f7f\u7528\u8bf4\u660e \u00b6 \u4f9d\u8d56\u5f15\u5165 <!-- \u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5f15\u5165\u8fd9\u4e2a\u6a21\u5757 --> <dependency> <artifactId> grus-feign </artifactId> <groupId> com.ciicgat.grus </groupId> </dependency> \u5927\u5bb6\u5728\u521b\u5efa feign-service \u7684\u65f6\u5019\uff0c\u652f\u6301\u4ee5\u4e0b\u5199\u6cd5 @Service public class AppService { @FeignService private PersonService personService ; @FeignService ( cacheBinding = @CacheBinding ( method = \"getPersonById\" , params = { 0 })) private PersonService personService2 ; } // \u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\u4e0d\u518d\u63a8\u8350\uff1a @Configuration public class DependencyServiceConfig { @Bean public PersonService personService () { return FeignServiceFactory . newInstance ( PersonService . class ); } } \u5de8\u7075\u795e api \u4e2d\uff0c\u5bf9\u4e8e\u53ef\u80fd\u4e3a Null \u7684\u8fd4\u56de\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Optional \u65b0\u589e\u4e86 com.ciicgat.grus.service.naming.NamingService \u6a21\u5757\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4ece\u4e00\u4e2a serviceName \u83b7\u5f97\u76f8\u5173\u7684\u670d\u52a1\u5730\u5740\u3002 \u65b0\u589e\u4e86 FeignServiceBuilder \u6765\u521b\u5efa\u5bf9\u8c61 \u65e5\u5fd7\u6253\u5370 \u00b6 \u65b0\u589e\u4e86\u6253\u5370 feign \u65e5\u5fd7\u7684\u914d\u7f6e\uff1a grus.feign.log-req = true //\u6253\u5370feign\u8bf7\u6c42\u65e5\u5fd7 grus.feign.log-resp = true //\u6253\u5370feign\u8fd4\u56de\u65e5\u5fd7 \u5bf9\u4e8e\u6709\u7279\u6b8a\u7684\u6709\u654f\u611f\u4fe1\u606f\u7684\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528 @LogExclude \u53d6\u6d88\u63a5\u53e3\u7684\u65e5\u5fd7\u6253\u5370\u3002 public interface AppApi { @RequestLine ( \"POST /getPassword\" ) @LogExclude String getPassword ( @Param ( \"memberId\" ) Integer memberId ); } \u5982\u679c\u63a5\u53e3\u7684\u51fa\u53c2\u6216\u5165\u53c2\u8d85\u957f\uff0c\u76ee\u524d\u662f\u8d85\u8fc7 2000 \u5b57\u7b26\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u4f1a\u88ab\u622a\u65ad\uff0c\u4e0d\u4f1a\u88ab\u6253\u5370\u3002 \u4e1a\u52a1api-sdk \u00b6 \u9879\u76ee\u7ed3\u6784 \u00b6 \u8bf4\u660e \u00b6 \u5982\u4e0a\u56fe\uff1a grus-feigh \u6a21\u5757\uff0c\u662f\u6240\u6709 api \u7684\u5b9e\u73b0\u57fa\u7840\u3002 \u4f1a\u5458\u4e2d\u5fc3 ciicgat-agg-member \u8d44\u4ea7\u4e2d\u5fc3 ciicgat-agg-asset \u652f\u4ed8\u4e2d\u5fc3 ciicgat-agg-payment \u7ed3\u7b97\u4e2d\u5fc3 ciicgat-agg-settlement \u5e94\u7528\u4ea7\u54c1\u4e2d\u5fc3 ciicgat-agg-newapp \u57fa\u7840\u670d\u52a1 ciicgat-agg-base API \u6846\u67b6\u7279\u70b9 \u00b6 \u5c01\u88c5\u4e86\u670d\u52a1\u8c03\u7528\u89c4\u8303 \u6240\u6709\u8bf7\u6c42\u589e\u52a0\u4e86 SITE-ID \u3001 APP-ID \u3001 REQUEST-ID \u3002\u53ef\u7528\u4e8e\u670d\u52a1\u8bf7\u6c42\u7684\u7edf\u8ba1\u3001\u76d1\u63a7\u3001\u8c03\u7528\u94fe\u8ffd\u8e2a\u3002 \u8bf7\u6c42\u652f\u6301\u539f\u6709 URLFORM \u683c\u5f0f\u548c REST \u98ce\u683c \u5728 okhttp \u548c feign \u7684\u57fa\u7840\u4e0a\u505a\u6269\u5c55\uff0c\u65b9\u4fbf\u4ee5\u540e\u5207\u6362\u5230 spring cloud feign + spring cloud hystrix \u53cd\u5e8f\u5217\u5316\u652f\u6301 JAVA \u7684\u65b0\u89c4\u8303\u548c PHP \u8001\u5e94\u7528\u89c4\u8303\u3002 Endpoint \u7edf\u4e00\u914d\u7f6e\uff0c\u5f00\u7bb1\u5373\u7528\uff0c\u5e94\u7528\u4e2d\u65e0\u9700\u518d\u914d\u7f6e\u670d\u52a1\u5730\u5740\u3002 \u8fd4\u56de code \u521d\u6b65\u7edf\u4e00\uff0c\u5168\u5c40\u552f\u4e00\u3002\u53ef\u4f7f\u7528\u679a\u4e3e\u6052\u7b49\u6bd4\u8f83 ErrorCode \u3002 \u4f7f\u7528\u89c4\u8303 \u00b6 \u5177\u4f53\u9879\u76ee\u4e2d\uff0c\u4ee5\u5982\u4e0b\u4f7f\u7528\u65b9\u5f0f\uff0c\u65e0\u9700\u52a0\u4e0a\u7248\u672c\uff1a <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-captcha </artifactId> </dependency> <!-- userdoor --> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-userdoor </artifactId> </dependency> <!-- passport --> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-passport </artifactId> </dependency> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-giveapp </artifactId> </dependency> </dependencies>","title":"feign"},{"location":"grus/api/grus-feign-use/#feign","text":"","title":"feign"},{"location":"grus/api/grus-feign-use/#_1","text":"\u4f9d\u8d56\u5f15\u5165 <!-- \u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5f15\u5165\u8fd9\u4e2a\u6a21\u5757 --> <dependency> <artifactId> grus-feign </artifactId> <groupId> com.ciicgat.grus </groupId> </dependency> \u5927\u5bb6\u5728\u521b\u5efa feign-service \u7684\u65f6\u5019\uff0c\u652f\u6301\u4ee5\u4e0b\u5199\u6cd5 @Service public class AppService { @FeignService private PersonService personService ; @FeignService ( cacheBinding = @CacheBinding ( method = \"getPersonById\" , params = { 0 })) private PersonService personService2 ; } // \u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\u4e0d\u518d\u63a8\u8350\uff1a @Configuration public class DependencyServiceConfig { @Bean public PersonService personService () { return FeignServiceFactory . newInstance ( PersonService . class ); } } \u5de8\u7075\u795e api \u4e2d\uff0c\u5bf9\u4e8e\u53ef\u80fd\u4e3a Null \u7684\u8fd4\u56de\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Optional \u65b0\u589e\u4e86 com.ciicgat.grus.service.naming.NamingService \u6a21\u5757\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u4ece\u4e00\u4e2a serviceName \u83b7\u5f97\u76f8\u5173\u7684\u670d\u52a1\u5730\u5740\u3002 \u65b0\u589e\u4e86 FeignServiceBuilder \u6765\u521b\u5efa\u5bf9\u8c61","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/api/grus-feign-use/#_2","text":"\u65b0\u589e\u4e86\u6253\u5370 feign \u65e5\u5fd7\u7684\u914d\u7f6e\uff1a grus.feign.log-req = true //\u6253\u5370feign\u8bf7\u6c42\u65e5\u5fd7 grus.feign.log-resp = true //\u6253\u5370feign\u8fd4\u56de\u65e5\u5fd7 \u5bf9\u4e8e\u6709\u7279\u6b8a\u7684\u6709\u654f\u611f\u4fe1\u606f\u7684\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528 @LogExclude \u53d6\u6d88\u63a5\u53e3\u7684\u65e5\u5fd7\u6253\u5370\u3002 public interface AppApi { @RequestLine ( \"POST /getPassword\" ) @LogExclude String getPassword ( @Param ( \"memberId\" ) Integer memberId ); } \u5982\u679c\u63a5\u53e3\u7684\u51fa\u53c2\u6216\u5165\u53c2\u8d85\u957f\uff0c\u76ee\u524d\u662f\u8d85\u8fc7 2000 \u5b57\u7b26\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u4f1a\u88ab\u622a\u65ad\uff0c\u4e0d\u4f1a\u88ab\u6253\u5370\u3002","title":"\u65e5\u5fd7\u6253\u5370"},{"location":"grus/api/grus-feign-use/#api-sdk","text":"","title":"\u4e1a\u52a1api-sdk"},{"location":"grus/api/grus-feign-use/#_3","text":"","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"grus/api/grus-feign-use/#_4","text":"\u5982\u4e0a\u56fe\uff1a grus-feigh \u6a21\u5757\uff0c\u662f\u6240\u6709 api \u7684\u5b9e\u73b0\u57fa\u7840\u3002 \u4f1a\u5458\u4e2d\u5fc3 ciicgat-agg-member \u8d44\u4ea7\u4e2d\u5fc3 ciicgat-agg-asset \u652f\u4ed8\u4e2d\u5fc3 ciicgat-agg-payment \u7ed3\u7b97\u4e2d\u5fc3 ciicgat-agg-settlement \u5e94\u7528\u4ea7\u54c1\u4e2d\u5fc3 ciicgat-agg-newapp \u57fa\u7840\u670d\u52a1 ciicgat-agg-base","title":"\u8bf4\u660e"},{"location":"grus/api/grus-feign-use/#api","text":"\u5c01\u88c5\u4e86\u670d\u52a1\u8c03\u7528\u89c4\u8303 \u6240\u6709\u8bf7\u6c42\u589e\u52a0\u4e86 SITE-ID \u3001 APP-ID \u3001 REQUEST-ID \u3002\u53ef\u7528\u4e8e\u670d\u52a1\u8bf7\u6c42\u7684\u7edf\u8ba1\u3001\u76d1\u63a7\u3001\u8c03\u7528\u94fe\u8ffd\u8e2a\u3002 \u8bf7\u6c42\u652f\u6301\u539f\u6709 URLFORM \u683c\u5f0f\u548c REST \u98ce\u683c \u5728 okhttp \u548c feign \u7684\u57fa\u7840\u4e0a\u505a\u6269\u5c55\uff0c\u65b9\u4fbf\u4ee5\u540e\u5207\u6362\u5230 spring cloud feign + spring cloud hystrix \u53cd\u5e8f\u5217\u5316\u652f\u6301 JAVA \u7684\u65b0\u89c4\u8303\u548c PHP \u8001\u5e94\u7528\u89c4\u8303\u3002 Endpoint \u7edf\u4e00\u914d\u7f6e\uff0c\u5f00\u7bb1\u5373\u7528\uff0c\u5e94\u7528\u4e2d\u65e0\u9700\u518d\u914d\u7f6e\u670d\u52a1\u5730\u5740\u3002 \u8fd4\u56de code \u521d\u6b65\u7edf\u4e00\uff0c\u5168\u5c40\u552f\u4e00\u3002\u53ef\u4f7f\u7528\u679a\u4e3e\u6052\u7b49\u6bd4\u8f83 ErrorCode \u3002","title":"API \u6846\u67b6\u7279\u70b9"},{"location":"grus/api/grus-feign-use/#_5","text":"\u5177\u4f53\u9879\u76ee\u4e2d\uff0c\u4ee5\u5982\u4e0b\u4f7f\u7528\u65b9\u5f0f\uff0c\u65e0\u9700\u52a0\u4e0a\u7248\u672c\uff1a <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-captcha </artifactId> </dependency> <!-- userdoor --> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-userdoor </artifactId> </dependency> <!-- passport --> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-passport </artifactId> </dependency> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-giveapp </artifactId> </dependency> </dependencies>","title":"\u4f7f\u7528\u89c4\u8303"},{"location":"grus/data/","text":"\u6570\u636e\u6a21\u5757 \u00b6 mysql driver \u00b6 mysql \u9a71\u52a8\u5347\u7ea7\u4e3a 8.x\u3002\u65f6\u533a\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u6846\u67b6\u5df2\u7ecf\u9488\u5bf9\u65f6\u533a\u505a\u4e86\u517c\u5bb9\u6027\u5904\u7406\uff0c\u4f1a\u5728 JDBC \u8fde\u63a5\u4e2d\uff0c\u81ea\u52a8\u6dfb\u52a0 serverTimezone=GMT%2B8 data \u00b6 \u4f1a\u6839\u636e\u914d\u7f6e\uff0c\u81ea\u52a8\u521b\u5efa\u6570\u636e\u6e90\u3002 \u5982\u679c\u9700\u8981\u8bfb\u5199\u5206\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7 DbProperties \u6765\u914d\u7f6e\uff0c\u5982\uff1a grus.db.read-write-separation=true DbProperties \u8fd8\u652f\u6301 jdbc \u548c\u8fde\u63a5\u6c60\u7684\u6269\u5c55\u914d\u7f6e\uff0c\u5982\uff1a grus.db.jdbcParams.useAffectedRows=true grus.db.dataSourceExtParams.connectionTimeout=30000 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u914d\u7f6e\u4f1a\u8986\u76d6 datasource.json \u91cc\u7684\u914d\u7f6e\u3002 \u81ea\u52a8\u521b\u5efa\u6570\u636e\u6e90\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e APP_NAME \u53bb gconf \u91cc\u8bfb\u53d6 datasource.json \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u662f\u7531 frigate \u6570\u636e\u6e90\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u5199\u5165 gconf \u4e2d\u7684\u3002\u65e0\u9700\u5927\u5bb6\u624b\u52a8\u7ef4\u62a4\u3002 \u6570\u636e\u6e90\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u7684\u52a8\u6001\u914d\u7f6e\uff0c\u65e0\u987b\u91cd\u542f\u5e94\u7528\uff1a maximumPoolSize minimumIdle connectionTimeout idleTimeout maxLifetime validationTimeout leakDetectionThreshold \u6846\u67b6\u5728\u6570\u636e\u6e90\u4e0d\u540c\u914d\u7f6e\u4e0b\u751f\u6210\u7684 bean \u7c7b \u5bf9\u8c61\u540d \u4e0d\u542f\u52a8\u8bfb\u5199\u5206\u79bb \u542f\u7528\u8bfb\u5199\u5206\u79bb DataSource dataSource y\uff0c\u7b49\u540c\u4e8e masterDataSource y\uff0c\u7b49\u540c\u4e8e masterDataSource DataSource masterDataSource y y DataSource slaveDataSource n y SqlSessionFactory sqlSessionFactory y\uff0c\u7b49\u540c\u4e8e writeSqlSessionFactory y\uff0c\u7b49\u540c\u4e8e writeSqlSessionFactory SqlSessionFactory writeSqlSessionFactory y y SqlSessionFactory readSqlSessionFactory n y SqlSessionTemplate sqlSessionTemplate y\uff0c\u7b49\u540c\u4e8e writeSqlSessionTemplate y\uff0c\u7b49\u540c\u4e8e writeSqlSessionTemplate SqlSessionTemplate writeSqlSessionTemplate y y SqlSessionTemplate readSqlSessionTemplate n y \u5927\u5bb6\u5728\u8fc1\u79fb\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c24\u5176\u9700\u8981\u6ce8\u610f SqlSessionTemplate \u7684\u547d\u540d\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u4e2d\u9700\u8981\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff0c\u90a3\u4e48\u9700\u8981\u8c03\u7528 com.ciicgat.sdk.data.datasource.DataSourceFactory.createMasterDataSource(String dbName) \uff0c\u4f20\u5165\u81ea\u5df1\u7684 dbName\u3002\u914d\u5957\u7684\uff0cSqlSessionFactory \u548c SqlSessionTemplate \u4e5f\u9700\u8981\u521b\u5efa\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 SQL \u8bed\u53e5\u4e2d\uff0c\u6307\u5b9a\u6570\u636e\u7684 schema\u3002 \u8bfb\u5199\u5206\u79bb\u4e0b\uff0cSqlSessionTemplate \u7684\u4e24\u4e2a\u81ea\u52a8\u6ce8\u5165\u7684\u5bf9\u8c61\u4e3a writeSqlSessionTemplate \u548c readSqlSessionTemplate mybatis \u00b6 mybatis \u7248\u672c\u5347\u7ea7\u4e3a 3.5.1 mybatis-3.5.0-Release-Notes mybatis-3.5.1-Release-Notes mybatis \u4e2d\uff0c\u5bf9\u4e8e\u53ef\u80fd\u4e3a Null \u7684\u8fd4\u56de\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Optional \u505a\u4e3a\u8fd4\u56de \u4f7f\u7528 @Insert \u6ce8\u89e3\u65f6\uff0c\u4e0d\u518d\u652f\u6301\u8fd4\u56de\u503c\u4e3a\u81ea\u589e\u52a0 id\u3002 mybatis \u7684\u914d\u7f6e\uff0c\u901a\u8fc7 MybatisProperties \u6765\u914d\u7f6e\u3002\u6bd4\u5982\uff1a mybatis.mapperLocations=classpath*:mapper/*.xml mybatis.typeAliasesPackage=com.ciicgat.app.domain.entity \u4f7f\u7528 mybatis \u7684 xml \u65b9\u5f0f\u65f6\uff0c\u9700\u8981\u5728 applicaton.properties \u6587\u4ef6\u4e2d\u914d\u7f6e mybatis.mapperLocations \u548c mybatis.typeAliasesPackage \u6846\u67b6\u4f1a\u81ea\u52a8\u52a0\u8f7d SQLLineInterceptor \uff0c\u5927\u5bb6\u65e0\u9700\u518d\u624b\u52a8\u8bbe\u7f6e \u5982\u679c\u5927\u5bb6\u9700\u8981\u5f15\u5165\u81ea\u5b9a\u4e49\u7684 Interceptor \uff0c\u53ea\u9700\u8981\u6ce8\u5165\u5b83\u7684 bean \u5373\u53ef\uff1a @Configuration public class DependencyService { @Bean public Interceptor interceptor() { return new MybatisPageInterceptor(); } } \u539f\u7406\u5728\u4e8e\uff1a public class GrusMybatisAutoConfiguration implements InitializingBean { public GrusMybatisAutoConfiguration(DbProperties dbProperties, MybatisProperties properties, ObjectProvider<Interceptor[]> interceptorsProvider, ResourceLoader resourceLoader, ObjectProvider<DatabaseIdProvider> databaseIdProvider, ObjectProvider<List<ConfigurationCustomizer>> configurationCustomizersProvider) { this.dbProperties = dbProperties; this.properties = properties; this.interceptors = appendSystemInterceptor(interceptorsProvider.getIfAvailable()); this.resourceLoader = resourceLoader; this.databaseIdProvider = databaseIdProvider.getIfAvailable(); this.configurationCustomizers = configurationCustomizersProvider.getIfAvailable(); } } GrusMybatisAutoConfiguration \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6709\u4e00\u4e2a ObjectProvider<Interceptor[]> \u7684\u53c2\u6570\uff0cspring \u6846\u67b6\u4f1a\u81ea\u52a8 IOC \u5bb9\u5668\u4e2d\u7684 Interceptor \u90fd\u6ce8\u5165\u8fc7\u6765\u3002 \u5982\u679c\u5e94\u7528\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u9700\u8981\u628a\u6570\u636e\u5e93\u8fde\u63a5\u548c mybatis \u8bbe\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u5168\u90e8\u5220\u9664\u3002\u91c7\u7528 grus \u7684 data starter\u3002\u540c\u65f6\u53bb\u53eb\u8fd0\u7ef4\u914d\u7f6e\u4f60\u7684\u5e94\u7528\u7684\u6570\u636e\u5e93\u8fde\u63a5\u3002\u5b8c\u6210\u540e\uff0c\u5728\u5e94\u7528\u7684 gconf \u4e0b\u4f1a\u6709 datasource.json \u914d\u7f6e\u6587\u4ef6\u3002\u5bf9\u4e8e\u672a\u4e0a\u7ebf\u7684\u65b0\u5e94\u7528\uff0c\u5927\u5bb6\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u5df2\u6709\u5e94\u7528\u7684 datasource.json \u6587\u4ef6\uff0c\u7136\u540e\u628a\u76f8\u5173\u914d\u7f6e\u6539\u4e0b\uff0c\u5176\u4e2d encryptedPassword \u9700\u8981\u6539\u6210 password\uff0c\u503c\u4f7f\u7528\u660e\u6587\u3002\u5982\u4e0b\uff1a { \"dbName\": \"ciicgatcard\", \"password\": \"1qazxsw@\", \"groupName\": \"GSDEV-NORMAL-MYSQL\", \"maxUserConnections\": 50, \"mysqlServers\": [ { \"domain\": \"mdb.servers.dev.ofc\", \"groupName\": \"GSDEV-NORMAL-MYSQL\", \"ip\": \"10.101.11.106\", \"name\": \"GSDEV-NORMAL-MYSQL-01\", \"port\": \"3306\", \"proxyIp\": \"\", \"proxyPort\": \"\", \"role\": \"master\", \"version\": \"\" } ], \"params\": { \"minimumIdle\": \"1\", \"validationTimeout\": \"5000\", \"idleTimeout\": \"30000\", \"maximumPoolSize\": \"30\", \"connectionTimeout\": \"3000\", \"maxLifetime\": \"300000\", \"leakDetectionThreshold\": \"60000\" }, \"username\": \"amy\" } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684 datasource.json\uff0c\u662f\u53ea\u8bfb\u7684\uff0c\u4f60\u65e0\u6cd5\u4fee\u6539\u3002 \u539f\u5148 SpringFramework \u9879\u76ee(\u975e Springboot)\uff0c\u5982\u679c\u5728 aplicationcontext.xml \u914d\u7f6e\u4e86 mybatis \u626b\u63cf\uff0c\u90a3\u4e48\u5728\u65b0\u7684\u6846\u67b6\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 MapperScan \u6ce8\u89e3\u4ee3\u66ff,\u5982\uff1a @SpringBootApplication @MapperScan(basePackages = {\"com.gat.admin.dao\"}) public class Application { public static void main(String[] args) { new SpringApplicationBuilder(Application.class) .run(args); } } **\u5982\u679c Dao \u6216\u8005 Mapper \u7c7b\u4e0a\uff0c\u5df2\u7ecf\u52a0\u4e86 @Repository \u6216\u8005 @Component \u7b49\u6807\u6ce8 Spring Bean \u7684\u6ce8\u89e3\uff0c\u90a3\u4e48\u65e0\u987b\u518d\u914d\u7f6e @MapperScan \u3002\u5426\u5219\uff0c\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u573a\u666f\u4f1a\u89e6\u53d1\u4e00\u4e2a BUG\u3002**\u6240\u4ee5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528 MapperScan\u3002 \u5355\u5143\u6d4b\u8bd5 \u00b6 \u5982\u679c\u539f\u5148\u4f7f\u7528\u4e86\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u505a\u5355\u5143\u6d4b\u8bd5\uff0c\u914d\u7f6e\u91cc\u6709 DatabaseIdProvider\uff0c\u90a3\u4e48\u65b0\u7684\u5199\u6cd5\u5982\u4e0b\uff1a\u3001 \u914d\u7f6e\u7c7b\u4e2d\u6ce8\u5165databaseIdProvider\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f7f\u7528 @Bean public DatabaseIdProvider databaseIdProvider() { VendorDatabaseIdProvider databaseIdProvider = new VendorDatabaseIdProvider(); Properties properties = new Properties(); properties.put(\"MySQL\", \"mysql\"); properties.put(\"Apache Derby\", \"derby\"); databaseIdProvider.setProperties(properties); return databaseIdProvider; } \u672c\u5730\u6570\u636e\u6e90\uff1a @EnableTransactionManagement @SpringBootApplication public class ApplicationTest {//\u5355\u5143\u6d4b\u8bd5\u7684\u542f\u52a8\u7c7b public static void main(String[] args) { SpringApplication.run(ApplicationTest.class, args); } //\u6ce8\u5165\u672c\u5730\u6570\u636e\u6e90masterDataSource @Bean(name = {\"dataSource\", \"masterDataSource\"}) @Primary public DataSource masterDataSource() { return TestDataSourceFactory.createDataSource(\"org.apache.derby.jdbc.EmbeddedDriver\", \"jdbc:derby:memory:myDB;create=true;\"); } //\u6ce8\u5165\u672c\u5730\u6570\u636e\u6e90slaveDataSource @Bean public DataSource slaveDataSource() { return TestDataSourceFactory.createDataSource(\"org.apache.derby.jdbc.EmbeddedDriver\", \"jdbc:derby:memory:myDB;create=true;\"); } }","title":"\u6570\u636e\u6a21\u5757"},{"location":"grus/data/#_1","text":"","title":"\u6570\u636e\u6a21\u5757"},{"location":"grus/data/#mysql-driver","text":"mysql \u9a71\u52a8\u5347\u7ea7\u4e3a 8.x\u3002\u65f6\u533a\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u6846\u67b6\u5df2\u7ecf\u9488\u5bf9\u65f6\u533a\u505a\u4e86\u517c\u5bb9\u6027\u5904\u7406\uff0c\u4f1a\u5728 JDBC \u8fde\u63a5\u4e2d\uff0c\u81ea\u52a8\u6dfb\u52a0 serverTimezone=GMT%2B8","title":"mysql driver"},{"location":"grus/data/#data","text":"\u4f1a\u6839\u636e\u914d\u7f6e\uff0c\u81ea\u52a8\u521b\u5efa\u6570\u636e\u6e90\u3002 \u5982\u679c\u9700\u8981\u8bfb\u5199\u5206\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7 DbProperties \u6765\u914d\u7f6e\uff0c\u5982\uff1a grus.db.read-write-separation=true DbProperties \u8fd8\u652f\u6301 jdbc \u548c\u8fde\u63a5\u6c60\u7684\u6269\u5c55\u914d\u7f6e\uff0c\u5982\uff1a grus.db.jdbcParams.useAffectedRows=true grus.db.dataSourceExtParams.connectionTimeout=30000 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u914d\u7f6e\u4f1a\u8986\u76d6 datasource.json \u91cc\u7684\u914d\u7f6e\u3002 \u81ea\u52a8\u521b\u5efa\u6570\u636e\u6e90\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e APP_NAME \u53bb gconf \u91cc\u8bfb\u53d6 datasource.json \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u662f\u7531 frigate \u6570\u636e\u6e90\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u5199\u5165 gconf \u4e2d\u7684\u3002\u65e0\u9700\u5927\u5bb6\u624b\u52a8\u7ef4\u62a4\u3002 \u6570\u636e\u6e90\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u7684\u52a8\u6001\u914d\u7f6e\uff0c\u65e0\u987b\u91cd\u542f\u5e94\u7528\uff1a maximumPoolSize minimumIdle connectionTimeout idleTimeout maxLifetime validationTimeout leakDetectionThreshold \u6846\u67b6\u5728\u6570\u636e\u6e90\u4e0d\u540c\u914d\u7f6e\u4e0b\u751f\u6210\u7684 bean \u7c7b \u5bf9\u8c61\u540d \u4e0d\u542f\u52a8\u8bfb\u5199\u5206\u79bb \u542f\u7528\u8bfb\u5199\u5206\u79bb DataSource dataSource y\uff0c\u7b49\u540c\u4e8e masterDataSource y\uff0c\u7b49\u540c\u4e8e masterDataSource DataSource masterDataSource y y DataSource slaveDataSource n y SqlSessionFactory sqlSessionFactory y\uff0c\u7b49\u540c\u4e8e writeSqlSessionFactory y\uff0c\u7b49\u540c\u4e8e writeSqlSessionFactory SqlSessionFactory writeSqlSessionFactory y y SqlSessionFactory readSqlSessionFactory n y SqlSessionTemplate sqlSessionTemplate y\uff0c\u7b49\u540c\u4e8e writeSqlSessionTemplate y\uff0c\u7b49\u540c\u4e8e writeSqlSessionTemplate SqlSessionTemplate writeSqlSessionTemplate y y SqlSessionTemplate readSqlSessionTemplate n y \u5927\u5bb6\u5728\u8fc1\u79fb\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c24\u5176\u9700\u8981\u6ce8\u610f SqlSessionTemplate \u7684\u547d\u540d\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u4e2d\u9700\u8981\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff0c\u90a3\u4e48\u9700\u8981\u8c03\u7528 com.ciicgat.sdk.data.datasource.DataSourceFactory.createMasterDataSource(String dbName) \uff0c\u4f20\u5165\u81ea\u5df1\u7684 dbName\u3002\u914d\u5957\u7684\uff0cSqlSessionFactory \u548c SqlSessionTemplate \u4e5f\u9700\u8981\u521b\u5efa\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 SQL \u8bed\u53e5\u4e2d\uff0c\u6307\u5b9a\u6570\u636e\u7684 schema\u3002 \u8bfb\u5199\u5206\u79bb\u4e0b\uff0cSqlSessionTemplate \u7684\u4e24\u4e2a\u81ea\u52a8\u6ce8\u5165\u7684\u5bf9\u8c61\u4e3a writeSqlSessionTemplate \u548c readSqlSessionTemplate","title":"data"},{"location":"grus/data/#mybatis","text":"mybatis \u7248\u672c\u5347\u7ea7\u4e3a 3.5.1 mybatis-3.5.0-Release-Notes mybatis-3.5.1-Release-Notes mybatis \u4e2d\uff0c\u5bf9\u4e8e\u53ef\u80fd\u4e3a Null \u7684\u8fd4\u56de\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Optional \u505a\u4e3a\u8fd4\u56de \u4f7f\u7528 @Insert \u6ce8\u89e3\u65f6\uff0c\u4e0d\u518d\u652f\u6301\u8fd4\u56de\u503c\u4e3a\u81ea\u589e\u52a0 id\u3002 mybatis \u7684\u914d\u7f6e\uff0c\u901a\u8fc7 MybatisProperties \u6765\u914d\u7f6e\u3002\u6bd4\u5982\uff1a mybatis.mapperLocations=classpath*:mapper/*.xml mybatis.typeAliasesPackage=com.ciicgat.app.domain.entity \u4f7f\u7528 mybatis \u7684 xml \u65b9\u5f0f\u65f6\uff0c\u9700\u8981\u5728 applicaton.properties \u6587\u4ef6\u4e2d\u914d\u7f6e mybatis.mapperLocations \u548c mybatis.typeAliasesPackage \u6846\u67b6\u4f1a\u81ea\u52a8\u52a0\u8f7d SQLLineInterceptor \uff0c\u5927\u5bb6\u65e0\u9700\u518d\u624b\u52a8\u8bbe\u7f6e \u5982\u679c\u5927\u5bb6\u9700\u8981\u5f15\u5165\u81ea\u5b9a\u4e49\u7684 Interceptor \uff0c\u53ea\u9700\u8981\u6ce8\u5165\u5b83\u7684 bean \u5373\u53ef\uff1a @Configuration public class DependencyService { @Bean public Interceptor interceptor() { return new MybatisPageInterceptor(); } } \u539f\u7406\u5728\u4e8e\uff1a public class GrusMybatisAutoConfiguration implements InitializingBean { public GrusMybatisAutoConfiguration(DbProperties dbProperties, MybatisProperties properties, ObjectProvider<Interceptor[]> interceptorsProvider, ResourceLoader resourceLoader, ObjectProvider<DatabaseIdProvider> databaseIdProvider, ObjectProvider<List<ConfigurationCustomizer>> configurationCustomizersProvider) { this.dbProperties = dbProperties; this.properties = properties; this.interceptors = appendSystemInterceptor(interceptorsProvider.getIfAvailable()); this.resourceLoader = resourceLoader; this.databaseIdProvider = databaseIdProvider.getIfAvailable(); this.configurationCustomizers = configurationCustomizersProvider.getIfAvailable(); } } GrusMybatisAutoConfiguration \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6709\u4e00\u4e2a ObjectProvider<Interceptor[]> \u7684\u53c2\u6570\uff0cspring \u6846\u67b6\u4f1a\u81ea\u52a8 IOC \u5bb9\u5668\u4e2d\u7684 Interceptor \u90fd\u6ce8\u5165\u8fc7\u6765\u3002 \u5982\u679c\u5e94\u7528\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u9700\u8981\u628a\u6570\u636e\u5e93\u8fde\u63a5\u548c mybatis \u8bbe\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u5168\u90e8\u5220\u9664\u3002\u91c7\u7528 grus \u7684 data starter\u3002\u540c\u65f6\u53bb\u53eb\u8fd0\u7ef4\u914d\u7f6e\u4f60\u7684\u5e94\u7528\u7684\u6570\u636e\u5e93\u8fde\u63a5\u3002\u5b8c\u6210\u540e\uff0c\u5728\u5e94\u7528\u7684 gconf \u4e0b\u4f1a\u6709 datasource.json \u914d\u7f6e\u6587\u4ef6\u3002\u5bf9\u4e8e\u672a\u4e0a\u7ebf\u7684\u65b0\u5e94\u7528\uff0c\u5927\u5bb6\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u5df2\u6709\u5e94\u7528\u7684 datasource.json \u6587\u4ef6\uff0c\u7136\u540e\u628a\u76f8\u5173\u914d\u7f6e\u6539\u4e0b\uff0c\u5176\u4e2d encryptedPassword \u9700\u8981\u6539\u6210 password\uff0c\u503c\u4f7f\u7528\u660e\u6587\u3002\u5982\u4e0b\uff1a { \"dbName\": \"ciicgatcard\", \"password\": \"1qazxsw@\", \"groupName\": \"GSDEV-NORMAL-MYSQL\", \"maxUserConnections\": 50, \"mysqlServers\": [ { \"domain\": \"mdb.servers.dev.ofc\", \"groupName\": \"GSDEV-NORMAL-MYSQL\", \"ip\": \"10.101.11.106\", \"name\": \"GSDEV-NORMAL-MYSQL-01\", \"port\": \"3306\", \"proxyIp\": \"\", \"proxyPort\": \"\", \"role\": \"master\", \"version\": \"\" } ], \"params\": { \"minimumIdle\": \"1\", \"validationTimeout\": \"5000\", \"idleTimeout\": \"30000\", \"maximumPoolSize\": \"30\", \"connectionTimeout\": \"3000\", \"maxLifetime\": \"300000\", \"leakDetectionThreshold\": \"60000\" }, \"username\": \"amy\" } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684 datasource.json\uff0c\u662f\u53ea\u8bfb\u7684\uff0c\u4f60\u65e0\u6cd5\u4fee\u6539\u3002 \u539f\u5148 SpringFramework \u9879\u76ee(\u975e Springboot)\uff0c\u5982\u679c\u5728 aplicationcontext.xml \u914d\u7f6e\u4e86 mybatis \u626b\u63cf\uff0c\u90a3\u4e48\u5728\u65b0\u7684\u6846\u67b6\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 MapperScan \u6ce8\u89e3\u4ee3\u66ff,\u5982\uff1a @SpringBootApplication @MapperScan(basePackages = {\"com.gat.admin.dao\"}) public class Application { public static void main(String[] args) { new SpringApplicationBuilder(Application.class) .run(args); } } **\u5982\u679c Dao \u6216\u8005 Mapper \u7c7b\u4e0a\uff0c\u5df2\u7ecf\u52a0\u4e86 @Repository \u6216\u8005 @Component \u7b49\u6807\u6ce8 Spring Bean \u7684\u6ce8\u89e3\uff0c\u90a3\u4e48\u65e0\u987b\u518d\u914d\u7f6e @MapperScan \u3002\u5426\u5219\uff0c\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u573a\u666f\u4f1a\u89e6\u53d1\u4e00\u4e2a BUG\u3002**\u6240\u4ee5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u63a8\u8350\u4f7f\u7528 MapperScan\u3002","title":"mybatis"},{"location":"grus/data/#_2","text":"\u5982\u679c\u539f\u5148\u4f7f\u7528\u4e86\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u505a\u5355\u5143\u6d4b\u8bd5\uff0c\u914d\u7f6e\u91cc\u6709 DatabaseIdProvider\uff0c\u90a3\u4e48\u65b0\u7684\u5199\u6cd5\u5982\u4e0b\uff1a\u3001 \u914d\u7f6e\u7c7b\u4e2d\u6ce8\u5165databaseIdProvider\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f7f\u7528 @Bean public DatabaseIdProvider databaseIdProvider() { VendorDatabaseIdProvider databaseIdProvider = new VendorDatabaseIdProvider(); Properties properties = new Properties(); properties.put(\"MySQL\", \"mysql\"); properties.put(\"Apache Derby\", \"derby\"); databaseIdProvider.setProperties(properties); return databaseIdProvider; } \u672c\u5730\u6570\u636e\u6e90\uff1a @EnableTransactionManagement @SpringBootApplication public class ApplicationTest {//\u5355\u5143\u6d4b\u8bd5\u7684\u542f\u52a8\u7c7b public static void main(String[] args) { SpringApplication.run(ApplicationTest.class, args); } //\u6ce8\u5165\u672c\u5730\u6570\u636e\u6e90masterDataSource @Bean(name = {\"dataSource\", \"masterDataSource\"}) @Primary public DataSource masterDataSource() { return TestDataSourceFactory.createDataSource(\"org.apache.derby.jdbc.EmbeddedDriver\", \"jdbc:derby:memory:myDB;create=true;\"); } //\u6ce8\u5165\u672c\u5730\u6570\u636e\u6e90slaveDataSource @Bean public DataSource slaveDataSource() { return TestDataSourceFactory.createDataSource(\"org.apache.derby.jdbc.EmbeddedDriver\", \"jdbc:derby:memory:myDB;create=true;\"); } }","title":"\u5355\u5143\u6d4b\u8bd5"},{"location":"grus/data/mybatis-enhance/","text":"Mybatis \u589e\u5f3a \u00b6 grus-2021.1.0 \u5f00\u59cb\u652f\u6301 code-generator \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u5728\u4e0d\u4fb5\u5165\u6846\u67b6\u5e95\u5c42\u7684\u524d\u63d0\u4e0b\uff0c\u8fbe\u5230\u7b80\u5316\u5f00\u53d1\u3001\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u7684\u76ee\u7684\u3002 \u6b64\u9879\u76ee\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u7b2c\u4e00\u4e2a\u90e8\u5206\u4e3a**\u901a\u7528 Mapper \u548c Service \u63d0\u4f9b CRUD \u57fa\u672c\u64cd\u4f5c\u7684\u652f\u6301**\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f**\u4ee3\u7801\u751f\u6210**\u529f\u80fd\uff0c\u4e3a\u8868\u7ed3\u6784\u53d8\u52a8\u65f6\u63d0\u4f9b\u9ad8\u6548\u5feb\u901f\u751f\u6210\u5bf9\u5e94\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002 \u6b64\u9879\u76ee\u53c2\u8003\u4e86 mybatis-generator \u548c mybatis-plus , \u53d6\u5176\u7cbe\u534e\u5e76\u4e0e grus \u6846\u67b6\u878d\u5408\u3002mybatis-generator \u4f1a\u751f\u6210\u5f88\u591a\u5197\u4f59\u4ee3\u7801\uff0c\u800c mybatis-plus \u5219\u4e0d\u7528\u751f\u6210\u5197\u4f59\u4ee3\u7801\uff0c\u529f\u80fd\u4e5f\u5f88\u5f3a\u5927\uff0c\u4f46\u662f\u5176\u5bf9\u5e95\u5c42\u4fb5\u5165\u592a\u6df1\uff0c\u5bf9 mybatis \u7684 SqlSessionFactory \u8fdb\u884c\u4e86\u91cd\u5199\uff0c\u4e0d\u80fd\u76f4\u63a5\u96c6\u6210\u5230\u6211\u53f8\u9879\u76ee\u4e2d\u4f7f\u7528\uff1b\u53c2\u8003\u4e24\u8005\u4f18\u79c0\u4e4b\u5904 code-generator \u8bde\u751f\u4e86\uff0c\u65e2\u4e0d\u9700\u8981\u751f\u6210\u5197\u4f59\u4ee3\u7801\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u5e95\u5c42\u4fb5\u5165\uff0c\u4f7f\u7528\u65b9\u4fbf\u96c6\u6210\u5feb\u901f\uff0c\u9002\u5408\u5feb\u901f\u5f00\u53d1\uff0c\u5c06\u66f4\u591a\u7684\u65f6\u95f4\u7528\u5728\u4e1a\u52a1\u903b\u8f91\u4e0a\u3002 \u7279\u6027 \u00b6 \u65e0\u4fb5\u5165 \uff1a\u53ea\u505a\u589e\u5f3a\u4e0d\u505a\u6539\u53d8\uff0c\u5f15\u5165\u5b83\u4e0d\u4f1a\u5bf9\u73b0\u6709\u5de5\u7a0b\u4ea7\u751f\u5f71\u54cd \u65e0\u635f\u8017 \uff1a\u542f\u52a8\u5373\u4f1a\u81ea\u52a8\u6ce8\u5165\u57fa\u672c\u589e\u5220\u6539\u67e5\u529f\u80fd\uff0c\u6027\u80fd\u65e0\u635f\u8017\uff0c\u76f4\u63a5\u9762\u5411\u5bf9\u8c61\u64cd\u4f5c CRUD \u64cd\u4f5c \uff1a\u5185\u7f6e\u901a\u7528 Mapper\u3001\u901a\u7528 Service\uff0c\u4ec5\u4ec5\u901a\u8fc7\u5c11\u91cf\u914d\u7f6e\u5373\u53ef\u5b9e\u73b0\u5355\u8868\u5927\u90e8\u5206 CRUD \u64cd\u4f5c\uff0c\u66f4\u6709\u5f3a\u5927\u7684\u6761\u4ef6\u6784\u9020\u5668\uff0c\u6ee1\u8db3\u5404\u7c7b\u4f7f\u7528\u9700\u6c42 \u652f\u6301 Lambda \u5f62\u5f0f\u8c03\u7528 \uff1a\u901a\u8fc7 Lambda \u8868\u8fbe\u5f0f\uff0c\u65b9\u4fbf\u7684\u7f16\u5199\u5404\u7c7b\u67e5\u8be2\u6761\u4ef6\uff0c\u65e0\u9700\u518d\u62c5\u5fc3\u5b57\u6bb5\u5199\u9519 \u4ee3\u7801\u751f\u6210\u5668 \uff1a\u53ef\u5feb\u901f\u751f\u6210 Entity\u3001Mapper\u3001Service\u3001Controller \u5c42\u4ee3\u7801\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6a21\u677f \u5206\u9875 \uff1a\u57fa\u4e8e MyBatis \u7269\u7406\u5206\u9875\uff0c\u76f4\u63a5\u8fd4\u56de grus \u6846\u67b6\u5c01\u88c5\u7684\u5206\u9875\u5bf9\u8c61, \u540c\u65f6\u652f\u6301 pagehelper \u5206\u9875\u63d2\u4ef6 \u5feb\u901f\u5f00\u59cb \u00b6 \u8fd9\u91cc\u4ee5\u4e00\u4e2a\u7a7a\u7684\u5de5\u7a0b\u6765\u793a\u4f8b \u6dfb\u52a0\u4f9d\u8d56 \u5f15\u5165 Grus Boot Starter \u7236\u5de5\u7a0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> 2021.1.0 </version> </parent> \u5f15\u5165\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u4f9d\u8d56 <dependency> <artifactId> grus-boot-starter-server-general </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u5f15\u5165\u6570\u636e\u4f9d\u8d56 <dependency> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-data </artifactId> </dependency> \u5f15\u5165\u6d4b\u8bd5\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> </dependency> \u914d\u7f6e \u5728 application.properties \u4e2d\u914d\u7f6e\u57fa\u672c\u4fe1\u606f spring.application.name = grus-demo server.port = 8088 server.tomcat.uri-encoding = UTF-8 logging.level.com.ciicgat.grusgenerator.codegenerator.example.mapper = debug spring.jackson.date-format = yyyy-MM-dd HH:mm:ss spring.jackson.time-zone = GMT+8 grus.feign.log-req = true grus.feign.log-resp = true mybatis.mapper-locations = classpath*:mapper/*.xml \u6dfb\u52a0\u542f\u52a8\u7c7b Application.java @SpringBootApplication @MapperScan ( \"com.ciicgat.grusgenerator.codegenerator.example.mapper\" ) public class Application { public static void main ( String [] args ) { SpringApplication . run ( Application . class , args ); } } \u7f16\u7801 \u7f16\u5199\u5b9e\u4f53\u7c7b ShopTip.java @TableName ( \"ShopTip\" ) public class ShopTip { @TableId private Long id ; @TableField ( ignoreSaving = true ) private Date timeCreated ; @TableField ( ignoreSaving = true ) private Date timeModified ; private Long ecappId ; private Integer type ; private String title ; private String content ; private Integer enable ; // \u6b64\u5904\u5ffd\u7565 getter setter \u65b9\u6cd5 } \u7f16\u5199 Mapper \u7c7b ShopTipMapper.java public interface ShopTipMapper extends BaseMapper < ShopTip > { // \u5982\u6709\u5176\u4ed6\u65b9\u6cd5\u76f4\u63a5\u4e66\u5199\u5176\u4e2d\u5373\u53ef // ShopTip selectOne(Long id); } \u540c\u65f6\u4e5f\u652f\u6301 @Mapper \u6ce8\u89e3 \u5f00\u59cb\u4f7f\u7528 \u6dfb\u52a0\u6d4b\u8bd5\u7c7b @RunWith ( SpringRunner . class ) @SpringBootTest public class SampleTest { @Resource private ShopTipMapper shopTipMapper ; @Test public void testList () { Example < ShopTip > example = new ConditionExample <> (); List < ShopTip > list = shopTipMapper . list ( example ); Assert . assertTrue ( list . size () > 0 ); list . forEach ( System . out :: println ); } } CRUD \u63a5\u53e3 \u00b6 Mapper \u00b6 \u901a\u7528 Mapper \u63a5\u53e3\uff1a com.ciicgat.sdk.data.mybatis.generator.template.BaseMapper.java \u26a0\ufe0f \u7279\u522b\u63d0\u9192\uff1aMapper \u548c xml \u4e2d\u4e0d\u80fd\u91cd\u8f7d BaseMapper \u4e2d\u7684\u65b9\u6cd5 \u63d2\u5165 Insert // \u9009\u62e9\u6027\u63d2\u5165\uff08\u4ec5\u63d2\u5165\u975enull\u5b57\u6bb5\uff09 int insert ( T entity ); // \u5168\u5b57\u6bb5\u63d2\u5165\uff08\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u63d2\u5165\uff09 int insertAll ( T entity ); // \u6279\u91cf\u5168\u5b57\u6bb5\u63d2\u5165\uff08\u6ce8\uff1a\u5982\u8868\u65b0\u52a0\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u65f6\u63d2\u5165\u5bf9\u8c61\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09 int batchInsert ( List < T > list ); \u5220\u9664 Delete // \u6839\u636eID\u5220\u9664 int delete ( Long id ); // \u6279\u91cfID\u5220\u9664 int batchDelete ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u5220\u9664 int deleteByExample ( Example < T > example ); \u66f4\u65b0 Update // \u6839\u636eID\u9009\u62e9\u6027\u66f4\u65b0 int update ( T entity ); // \u6839\u636eID\u5168\u5b57\u6bb5\u66f4\u65b0 (\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u66f4\u65b0) int updateAll ( T entity ); // \u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u66f4\u65b0 int updateByExample ( T entity , Example < T > example ); // \u6839\u636e\u6761\u4ef6\u5168\u5b57\u6bb5\u66f4\u65b0 int updateByExampleAll ( T entity , Example < T > example ); \u83b7\u53d6 Get // \u6839\u636eID\u83b7\u53d6\u5b9e\u4f53 T get ( Long id ); // \u6279\u91cf\u83b7\u53d6\u5b9e\u4f53 List < T > batchGet ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u83b7\u53d6\u5b9e\u4f53 T getByExample ( Example < T > example ); \u67e5\u8be2\u6570\u91cf Count // \u6839\u636e\u6761\u4ef6\u6570\u91cf\u67e5\u8be2 int count ( Example < T > example ); \u67e5\u8be2\u5217\u8868 List // \u6839\u636e\u6761\u4ef6\u5217\u8868\u67e5\u8be2 List < T > list ( Example < T > example ); \u6ce8\uff1a Example \u548c Query \u90fd\u7ee7\u627f\u4e8e Conditional , \u5728\u4e0d\u540c\u5c42\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u63a5\u53e3\uff1a mapper \u5c42: Example -> ConditionExample service \u5c42: Query -> QueryExample , PageQueryExample \u793a\u4f8b // mapper: Example Example < ShopTip > example = new ConditionExample <> (); userMapper . getByExample ( example ); // service: Query Query < ShopTip > query = new QueryExample <> (); userService . getByExample ( query ); Query < ShopTip > query1 = new PageQueryExample <> (); userService . page ( query1 ); Service \u00b6 \u901a\u7528 Service \u63a5\u53e3\uff1a com.ciicgat.sdk.data.mybatis.generator.template.BaseService.java \u26a0\ufe0f \u7279\u522b\u63d0\u9192\uff1a\u7ee7\u627f BaseService \u524d\u63d0\u9700\u8981\u5bf9\u5e94\u7684 Mapper \u7ee7\u627f BaseMapper \u63d2\u5165 Insert // \u9009\u62e9\u6027\u63d2\u5165\uff08\u4ec5\u63d2\u5165\u975enull\u5b57\u6bb5\uff09 int insert ( T entity ); // \u5168\u5b57\u6bb5\u63d2\u5165\uff08\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u63d2\u5165\uff09 int insertAll ( T entity ); // \u6279\u91cf\u5168\u5b57\u6bb5\u63d2\u5165\uff08\u6ce8\uff1a\u5982\u8868\u65b0\u52a0\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u65f6\u63d2\u5165\u5bf9\u8c61\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09 int batchInsert ( List < T > list ); \u5220\u9664 Delete // \u6839\u636eID\u5220\u9664 int delete ( Long id ); // \u6279\u91cfID\u5220\u9664 int batchDelete ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u5220\u9664 int deleteByExample ( Query < T > query ); \u66f4\u65b0 Update // \u6839\u636eID\u9009\u62e9\u6027\u66f4\u65b0 int update ( T entity ); // \u6839\u636eID\u5168\u5b57\u6bb5\u66f4\u65b0 (\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u66f4\u65b0) int updateAll ( T entity ); // \u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u66f4\u65b0 int updateByExample ( T entity , Query < T > query ); // \u6839\u636e\u6761\u4ef6\u5168\u5b57\u6bb5\u66f4\u65b0 int updateByExampleAll ( T entity , Query < T > query ); \u4fdd\u5b58 Save entity.id == null -> \u63d2\u5165 entity.id != null -> \u66f4\u65b0 // \u9009\u62e9\u6027\u4fdd\u5b58 int save ( T entity ); // \u5168\u5b57\u6bb5\u4fdd\u5b58 int saveAll ( T entity ); \u83b7\u53d6 Get // \u6839\u636eID\u83b7\u53d6\u5b9e\u4f53 T get ( Long id ); // \u6279\u91cf\u83b7\u53d6\u5b9e\u4f53 List < T > batchGet ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u83b7\u53d6\u5b9e\u4f53 T getByExample ( Query < T > query ); \u67e5\u8be2\u6570\u91cf Count // \u6839\u636e\u6761\u4ef6\u6570\u91cf\u67e5\u8be2 int count ( Query < T > query ); \u67e5\u8be2\u5217\u8868 List // \u6839\u636e\u6761\u4ef6\u5217\u8868\u67e5\u8be2 List < T > list ( Query < T > query ); \u67e5\u8be2\u5206\u9875 Page // \u6839\u636e\u6761\u4ef6\u67e5\u8be2\u5206\u9875 Pagination < T > page ( PageQueryExample < T > query ); \u6761\u4ef6\u6784\u9020\u5668 \u00b6 \u4e0d\u5efa\u8bae\u5c06\u5e26\u6761\u4ef6\u6784\u9020\u5668\u7684\u63a5\u53e3\u76f4\u63a5\u66b4\u9732\u51fa\u53bb\uff0c\u5e94\u5199\u4e00\u4e2a DTO \u8fdb\u884c\u4f20\u8f93 \u4ee5\u4e0b\u65b9\u6cd5\u5165\u53c2\u4e2d\u7684 R column \u5747\u8868\u793a\u6570\u636e\u5e93\u5b57\u6bb5 Conditional \u6761\u4ef6\u6784\u9020\u5668 \u00b6 \u521b\u5efa\u5e76\u4e14\u6761\u4ef6 // \u521b\u5efa\u6761\u4ef6: \u5982\u679c\u6761\u4ef6\u5217\u8868\u4e3a\u7a7a\u5219\u9ed8\u8ba4\u653e\u5165, \u5426\u5219\u4e0d\u653e\u5165 Criteria < T > createCriteria (); // \u521b\u5efaLambda\u6761\u4ef6: \u5982\u679c\u6761\u4ef6\u5217\u8868\u4e3a\u7a7a\u5219\u9ed8\u8ba4\u653e\u5165, \u5426\u5219\u4e0d\u653e\u5165 LambdaCriteria < T > createLambdaCriteria (); \u521b\u5efa\u6216\u8005\u6761\u4ef6 // \u8bbe\u7f6e\u6216\u8005\u6761\u4ef6 void or ( GeneratedCriteria criteria ); // \u521b\u5efa\u6216\u8005\u6761\u4ef6, \u5e76\u653e\u5165\u6761\u4ef6\u5217\u8868 Criteria < T > or (); \u5176\u4ed6\u63a5\u53e3 // \u6e05\u9664\u6761\u4ef6\u548c\u8bbe\u7f6e\u503c void clear (); // \u8bbe\u7f6e\u662f\u5426\u53bb\u91cd void setDistinct ( boolean distinct ); // \u8bbe\u7f6eoffset: limit ${offset}, ${limit} void setLimitStart ( int limitStart ); // \u8bbe\u7f6elimit: limit ${offset}, ${limit} void setLimitEnd ( int limitEnd ); // \u6dfb\u52a0\u6392\u5e8f\uff0c\u5982\u672a\u6dfb\u52a0\u6392\u5e8f\uff0c\u5219\u9ed8\u8ba4\u6392\u5e8f\u662fid DESC void addOrderBy ( String columnName , boolean isAsc ); Query \u6761\u4ef6\u6784\u9020\u5668 \u00b6 \u7ee7\u627f\u4e8e Conditional \u8bbe\u7f6e\u67e5\u8be2\u5b9e\u4f53 // \u8bbe\u7f6e\u5b9e\u4f53: \u5c06\u6240\u6709\u975e\u7a7a\u5b57\u6bb5\u52a0\u5165eq\u6761\u4ef6\u5217\u8868 void setEntity ( T entity ); // \u6b64\u65b9\u6cd5\u53ef\u4e0eCriteria\u6761\u4ef6\u53e0\u52a0\u4f7f\u7528 Criteria \u6761\u4ef6 eq eq ( R column , Object val ) \u7b49\u4e8e = \u4f8b: eq(\"name\", \"\u8001\u738b\") ---> name = '\u8001\u738b' ne ne ( R column , Object val ) \u4e0d\u7b49\u4e8e <> \u4f8b: ne(\"name\", \"\u8001\u738b\") ---> name <> '\u8001\u738b' gt gt ( R column , Object val ) \u5927\u4e8e > \u4f8b: gt(\"age\", 18) ---> age > 18 ge ge ( R column , Object val ) \u5927\u4e8e\u7b49\u4e8e >= \u4f8b: ge(\"age\", 18) ---> age >= 18 lt lt ( R column , Object val ) \u5c0f\u4e8e < \u4f8b: lt(\"age\", 18) ---> age < 18 le le ( R column , Object val ) \u5c0f\u4e8e\u7b49\u4e8e <= \u4f8b: le(\"age\", 18) ---> age <= 18 between between ( R column , Object val1 , Object val2 ) BETWEEN \u503c 1 AND \u503c 2 \u4f8b: between(\"age\", 18, 30) ---> age between 18 and 30 notBetween notBetween ( R column , Object val1 , Object val2 ) NOT BETWEEN \u503c 1 AND \u503c 2 \u4f8b: notBetween(\"age\", 18, 30) ---> age not between 18 and 30 like like ( R column , Object val ) LIKE '%\u503c%' \u4f8b: like(\"name\", \"\u738b\") ---> name like '%\u738b%' notLike notLike ( R column , Object val ) NOT LIKE '%\u503c%' \u4f8b: notLike(\"name\", \"\u738b\") ---> name not like '%\u738b%' likeLeft likeLeft ( R column , Object val ) LIKE '%\u503c' \u4f8b: likeLeft(\"name\", \"\u738b\") ---> name like '%\u738b' likeRight likeRight ( R column , Object val ) LIKE '\u503c%' \u4f8b: likeRight(\"name\", \"\u738b\") ---> name like '\u738b%' isNull isNull ( R column ) \u5b57\u6bb5 IS NULL \u4f8b: isNull(\"name\") ---> name is null isNotNull isNotNull ( R column ) \u5b57\u6bb5 IS NOT NULL \u4f8b: isNotNull(\"name\") ---> name is not null in in ( R column , Collection <?> value ) \u5b57\u6bb5 IN (value.get(0), value.get(1), ...) \u4f8b: in(\"age\",{1,2,3}) ---> age in (1,2,3) in ( R column , Object ... values ) \u5b57\u6bb5 IN (v0, v1, ...) \u4f8b: in(\"age\", 1, 2, 3) ---> age in (1,2,3) notIn notIn ( R column , Collection <?> value ) \u5b57\u6bb5 NOT IN (value.get(0), value.get(1), ...) \u4f8b: notIn(\"age\",{1,2,3}) ---> age not in (1,2,3) notIn ( R column , Object ... values ) \u5b57\u6bb5 NOT IN (v0, v1, ...) \u4f8b: notIn(\"age\", 1, 2, 3) ---> age not in (1,2,3) \u793a\u4f8b \u00b6 // \u521b\u5efa\u6761\u4ef6\u6784\u9020\u5668 Example < ShopTip > example = new ConditionExample <> (); // \u521b\u5efa\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff1aid in (1,2,3) and type is not null example . createCriteria (). in ( \"id\" , 1 , 2 , 3 ). isNotNull ( \"type\" ); // \u521b\u5efa\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1a \u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u8d77\u4e0d\u4f1a\u9ed8\u8ba4\u653e\u5165\u6761\u4ef6\u5217\u8868, title like %\u5173\u7231\u901a% LambdaCriteria < ShopTip > criteria = example . createLambdaCriteria (). like ( ShopTip :: getTitle , \"\u5173\u7231\u901a\" ); // \u5c06\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u8bbe\u7f6e\u4e3a\u6216\u8005\u6761\u4ef6 example . or ( criteria ); // \u521b\u5efa\u7b2c\u4e09\u4e2a\u6216\u8005\u6761\u4ef6\uff1atimeCreated between '2020-09-11' and '2020-11-11' example . orLambdaCriteria (). between ( ShopTip :: getTimeCreated , \"2020-09-11\" , \"2020-11-11\" ); // \u8bbe\u7f6e\u53bb\u91cd example . setDistinct ( true ); // \u6dfb\u52a0\u6392\u5e8f example . addOrderBy ( \"title\" , true ); example . addOrderBy ( \"id\" , false ); List < ShopTip > list = shopTipMapper . list ( example ); // \u4ee5\u4e0a\u6761\u4ef6\u6784\u9020\u7684SQL\u8bed\u53e5\u4e3a\uff1a /* SELECT DISTINCT `id`,`timeCreated`,`timeModified`,`ecappId`,`type`,`title`,`content`,`enable` FROM `ShopTip` WHERE ( `id` IN ( 1 , 2 , 3 ) and `type` IS NOT NULL ) OR ( `title` LIKE CONCAT('%','\u5173\u7231\u901a','%') ) OR ( `timeCreated` BETWEEN '2020-09-11' and '2020-11-11' ) ORDER BY `title` ASC, `id` DESC; */ \u4ee3\u7801\u751f\u6210\u5668 \u00b6 \u5feb\u901f\u751f\u6210 Entity\u3001Mapper\u3001Mapper XML\u3001Service\u3001Controller \u7b49\u5404\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\uff0c\u6781\u5927\u7684\u63d0\u5347\u4e86\u5f00\u53d1\u6548\u7387 \u5173\u4e8e\u8986\u76d6: Entity \u6587\u4ef6: Entity \u662f\u4e0e\u6570\u636e\u5e93\u8868\u7ed3\u6784\u4fdd\u6301\u4e00\u81f4\u7684, \u5c3d\u91cf\u4e0d\u8981\u53bb\u4fee\u6539, \u5982\u9700\u6269\u5c55\u8bf7\u6dfb\u52a0 Bean \u53bb\u7ee7\u627f\u5b83, \u6240\u4ee5\u6bcf\u6b21\u751f\u6210\u90fd\u4f1a\u8986\u76d6 Entity \u5176\u4ed6\u6587\u4ef6: \u5176\u4ed6\u6587\u4ef6\u4e00\u6b21\u751f\u6210\u4e4b\u540e\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u65b9\u6cd5, \u6240\u4ee5\u6bcf\u6b21\u751f\u6210\u4e0d\u4f1a\u8986\u76d6 \u5feb\u901f\u5f00\u59cb \u00b6 \u5728\u524d\u9762\u90a3\u4e2a\u9879\u76ee\u4e0a\u6dfb\u52a0\u4ee3\u7801\u751f\u6210\u5668 \u6dfb\u52a0\u4f9d\u8d56 \u5f15\u5165\u4ee3\u7801\u751f\u6210\u5668\uff0c scope \u8bbe\u7f6e\u4e3a test <dependency> <groupId> com.ciicgat.grusgenerator </groupId> <artifactId> grus-generator </artifactId> <version> ${latest.version} </version> <scope> test </scope> </dependency> \u914d\u7f6e \u6dfb\u52a0\u751f\u6210\u914d\u7f6e\u6587\u4ef6 code-generator.xml , \u5efa\u8bae\u653e\u5230\u6d4b\u8bd5\u8d44\u6e90\u76ee\u5f55 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE code-generator PUBLIC \"-//guanaitong.com//DTD CodeGenerator 1.0//EN\" \"https://e.guanaitong.com/manual/code-generator.dtd\"> <code-generator> <!--\u57fa\u7840\u914d\u7f6e--> <baseConfig> <property name= \"enableSwagger\" > true </property> <property name= \"enableValidation\" > true </property> </baseConfig> <!--\u6570\u636e\u5e93\u8fde\u63a5--> <jdbcConnection driverClass= \"com.mysql.cj.jdbc.Driver\" host= \"mdb.servers.dev.ofc\" database= \"robin_example\" username= \"amy\" password= \"1qazxsw@\" /> <!-- \u751f\u6210\u5b9e\u4f53\u6587\u4ef6 --> <javaModelGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.bean.entity\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Mapper\u7684\u6620\u5c04XML\u6587\u4ef6 --> <sqlMapGenerator targetPackage= \"mapper\" codePath= \"src/main/resources\" /> <!-- \u751f\u6210Mapper\u7684\u7c7b\u6587\u4ef6 --> <javaClientGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.mapper\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Service\u6587\u4ef6 --> <serviceGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.service\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Controller\u6587\u4ef6 --> <controllerGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.controller\" codePath= \"src/main/java\" /> <!-- \u751f\u6210DTO\u6587\u4ef6 --> <dtoGenerator targetPackage= \"com.ciicgat.grusgenerator.test.cg.generated.dto\" codePath= \"src/test/java\" suffix= \"VO\" /> <!--\u9700\u8981\u751f\u6210\u7684\u8868--> <tables entityObjectSuffix= \"DO\" > <table tableName= \"User\" /> </tables> </code-generator> \u914d\u7f6e\u7684\u8be6\u7ec6\u8bf4\u660e\u89c1\u4e0b\u6587 - \u914d\u7f6e\u6587\u6863 \u5f00\u59cb\u4f7f\u7528 \u521b\u5efa\u751f\u6210\u6d4b\u8bd5\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6 CodeGeneratorTest.java public class CodeGeneratorTest { @Test public void generate () { CodeGenerator . builder (). build (). generate (); } } \u6ce8\uff1a\u914d\u7f6e\u6587\u4ef6\u540d\u4e3a code-generator.xml \u65f6\u65e0\u9700\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5426\u5219\u9700\u8981\u6307\u5b9a configFilePath \u8bfb\u5199\u5206\u79bb \u00b6 \u76ee\u524d\u8bfb\u5199\u5206\u79bb\u5173\u7231\u901a\u7684\u8bfb\u5199\u5206\u79bb\u662f\u57fa\u4e8e\u4e3b\u4ece\u5e93\u7684 SqlSessionTemplate \u6765\u5b9e\u73b0\u7684\uff0c\u76ee\u524d\u9879\u76ee\u4e2d\u7528\u8bfb\u5199\u5206\u79bb\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a BaseDao \u5176\u4e2d\u6ce8\u5165 readSqlSessionTemplate \u548c writeSqlSessionTemplate , \u5199 Mapper \u7684\u5b9e\u73b0\u7c7b\uff0c\u5728\u5176\u4e2d\u4f7f\u7528\u5bf9\u5e94\u7684 SqlSessionTemplate \u6267\u884c Statment\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8bfb\u5199\u5206\u79bb\u64cd\u4f5c\u7684\u7075\u6d3b\u6027\uff0ccode-generator \u4e5f\u6cbf\u7528\u6b64\u4f7f\u7528\u4e60\u60ef\uff0c\u4f7f\u7528 ReadWriteSeparationMapperImpl \u4e2d\u7684\u589e\u5220\u6539\u67e5\u65b9\u6cd5\u662f\u8bfb\u5199\u5206\u79bb\u7684\u3002 \u4f7f\u7528 \u914d\u7f6e\u6587\u4ef6 application.properties \u6dfb\u52a0\u8bfb\u5199\u5206\u79bb\u7684\u914d\u7f6e grus.db.read-write-separation = true \u521b\u5efa Mapper \u5b9e\u73b0\u7c7b\uff0c\u7ee7\u627f ReadWriteSeparationMapperImpl \uff0c\u6dfb\u52a0\u6ce8\u89e3 @Repository , @Primary @Repository @Primary // \u8bf4\u660e\u2460 public class TemplateMapperImpl extends ReadWriteSeparationMapperImpl < Template > implements TemplateMapper { @Override public Template getById ( Long id ) { // \u8bf4\u660e\u2461 // return readSqlSessionTemplate.selectOne(\"com.ciicgat.grusgenerator.codegenerator.example.mapper.TemplateMapper.getById\", id); return readSqlSessionTemplate . selectOne ( this . getStatement ( \"getById\" ), id ); } } Mapper.xml \u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49 SQL <select id= \"getById\" resultType= \"com.ciicgat.grusgenerator.cg.example.bean.entity.Template\" > select * from Template where id=#{id} </select> \u8c03\u7528\u5904 @Service public class TemplateServiceImpl extends BaseServiceImpl < Template > implements TemplateService { // \u8bf4\u660e\u2462 // @Resource(name = \"templateMapperImpl\") @Autowired private TemplateMapper templateMapper ; @Override public Template getById ( Long id ) { return templateMapper . getById ( id ); } } \u8bf4\u660e\uff1a \u2460 \u7531\u4e8e\u5b58\u5728\u9ed8\u8ba4\u5b9e\u73b0\u7684 BaseServiceImpl \u4e2d\u4f1a\u81ea\u52a8\u6ce8\u5165\u4e00\u4e2a TemplateMapper \u7684\u4ee3\u7406\u5b9e\u4f8b\uff0c\u6240\u4ee5\u589e\u52a0 TemplateMapper \u7684\u5b9e\u73b0\u7c7b\u65f6\u9700\u8981\u7528 @Primary \u6807\u6ce8\u5176\u4e3a\u4e3b\u8981\u7684\uff0c\u5426\u5219\u542f\u52a8\u65f6 spring \u4f1a\u62a5\u9519\u65e0\u6cd5\u786e\u8ba4\u54ea\u4e2a\u5b9e\u73b0\u7c7b\u6765\u6ce8\u5165 \u2461 \u7531\u4e8e\u751f\u6210\u7684 Mapper.xml \u4e2d\u7684 namespace \u662f\u5b8c\u6574 Mapper \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u8fd9\u8fb9\u5199 statement \u65f6\u4e5f\u9700\u8981\u5199\u5b8c\u6574\u8def\u5f84\u624d\u80fd\u627e\u5230\uff0c\u4e3a\u4e86\u7b80\u4fbf\u5c01\u88c5\u4e86 getStatement \u65b9\u6cd5\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u5b83\u5373\u53ef\u7b80\u5316\u8c03\u7528 \u2462 \u7531\u4e8e @Autowired \u9ed8\u8ba4\u662f\u6309\u7c7b\u578b\u7c7b\u81ea\u52a8\u88c5\u8f7d\uff0c\u800c @Resource \u9ed8\u8ba4\u662f\u6309\u540d\u79f0\u6765\u6ce8\u5165\uff0c\u800c\u6b64\u65f6 TemplateMapper \u5b58\u5728 2 \u4e2a\u5b9e\u4f8b\uff0c\u5982\u679c\u4f7f\u7528 @Resource \u65f6\u9700\u8981\u6307\u5b9a\u540d\u79f0\uff0c\u56e0\u4e3a @Primary \u4ec5\u5bf9 @Autowired \u6709\u6548 \u4ee3\u7801\u751f\u6210 \u751f\u6210\u914d\u7f6e\u6587\u4ef6( code-generator.xml )\u7684\u57fa\u7840\u914d\u7f6e( baseConfig )\u4e2d\u542f\u7528\u8bfb\u5199\u5206\u79bb <property name= \"enableReadWriteSeparation\" > true </property> \u6dfb\u52a0\u4ee5\u4e0a\u914d\u7f6e\u540e\u751f\u6210\u7684\u4ee3\u7801\u5305\u542b\u8bfb\u5199\u5206\u79bb Mapper \u5b9e\u73b0\u7c7b\uff0c\u4ee3\u7801\u4f4d\u7f6e\u5728 mapper.impl \u5305\u4e0b \u914d\u7f6e\u6587\u6863 \u00b6 code-generator \u4f5c\u4e3a\u6839\u5143\u7d20\uff0c\u914d\u7f6e\u4ece\u6b64\u5143\u7d20\u5f00\u59cb\uff0c\u4ee5\u4e0b\u8bf4\u660e\u4e0b\u5404\u4e2a\u5143\u7d20\u7684\u542b\u4e49\u4e0e\u53c2\u6570\u3002 baseConfig \u00b6 property \u5c5e\u6027 enableSwagger \u542f\u7528 Swagger\uff0c\u5728\u751f\u6210\u7684 DTO \u548c Controller \u4e2d\u4f7f\u7528 Swagger \u6ce8\u89e3 enableValidation \u542f\u7528\u9a8c\u8bc1\uff0c\u5728\u751f\u6210\u7684 DTO \u548c Controller \u4e2d\u4f7f\u7528\u9a8c\u8bc1\u6ce8\u89e3\uff0c\u6839\u636e\u6570\u636e\u5e93\u8868\u5b57\u6bb5\u6dfb\u52a0 @NotNull , @Length \u6ce8\u89e3 enableReadWriteSeparation \u542f\u7528\u8bfb\u5199\u5206\u79bb\uff0c\u751f\u6210\u8bfb\u5199\u5206\u79bb\u5bf9\u5e94\u7684\u4ee3\u7801 disableUpdatingMapperXml \u7981\u7528\u66f4\u65b0 MapperXml \u6587\u4ef6\uff0c\u6bcf\u6b21\u751f\u6210\u4f1a\u540c\u6b65\u66f4\u65b0 mapper \u4e2d id=BaseColumnList \u548c id=BaseResultMap \u5185\u5bb9\uff0c\u5982\u679c\u4e0d\u9700\u8981\u66f4\u65b0\u6b64\u9879\u8bbe\u7f6e\u4e3a true \u7981\u7528\u66f4\u65b0 enableMapperAnnotation \u5728\u751f\u6210\u7684 Mapper.java \u4e2d\u6dfb\u52a0 @Mapper \u6ce8\u89e3\uff0c\u9ed8\u8ba4\u4e0d\u542f\u7528 jdbcConnection \u00b6 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 driverClass \u9a71\u52a8\u7c7b \u662f jdbc \u9a71\u52a8\u7c7b\u5168\u8def\u5f84 host \u4e3b\u673a\u5730\u5740 \u662f \u6570\u636e\u5e93\u4e3b\u673a\u5730\u5740,\u5982\u975e\u9ed8\u8ba4\u7aef\u53e3 3306 \u9700\u5e26\u4e0a\u7aef\u53e3\u53f7 database \u6570\u636e\u5e93 \u662f \u6570\u636e\u5e93\u540d\u79f0 username \u7528\u6237\u540d \u662f \u6570\u636e\u5e93\u7528\u6237\u540d password \u5bc6\u7801 \u662f \u7528\u6237\u540d\u5bc6\u7801 tinyInt1isBit tinyint \u8f6c\u6362 \u5426 \u9ed8\u8ba4\u4e3a true, tinyint(1)\u7c7b\u578b\u8f6c Boolean; \u4e3a false \u65f6\uff0ctinyint(1)\u7c7b\u578b\u8f6c\u4e3a Integer javaModelGenerator \u00b6 \u5b9e\u4f53\u5bf9\u8c61\u751f\u6210\u5668 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 targetPackage \u5305\u8def\u5f84 \u662f \u6587\u4ef6\u6240\u5728\u7684\u5305\u5168\u8def\u5f84(\u5c0f\u6570\u70b9\u5206\u9694\u7684\u5305\u540d) codePath \u4ee3\u7801\u5730\u5740 \u662f \u6587\u4ef6\u6240\u5728\u76f8\u5bf9\u9879\u76ee\u6839\u76ee\u5f55\u7684\u8def\u5f84 disabled \u662f\u5426\u7981\u7528 \u5426 \u7981\u7528\u65f6\uff0c\u5c06\u8df3\u8fc7\u6b64\u6a21\u5757\u751f\u6210 templatePath \u81ea\u5b9a\u4e49\u6a21\u677f\u8def\u5f84 \u5426 \u6a21\u677f\u8def\u5f84\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u9700\u653e\u4e8e resources \u4e0b\uff0c\u540c\u540d\u5373\u8986\u76d6\uff0c\u4e0d\u540c\u540d\u9700\u6307\u5b9a\u8def\u5f84 suffix \u81ea\u5b9a\u4e49\u540e\u7f00 \u5426 \u4e3a\u751f\u6210\u7684\u6a21\u5757\u6307\u5b9a\u56fa\u5b9a\u540e\u7f00\uff0c\u6b64\u5c5e\u6027\u5bf9 Entity \u4e0d\u751f\u6548\uff0cEntity \u81ea\u5b9a\u4e49\u540e\u7f00\u53c2\u8003 table \u6807\u7b7e \u6ce8\uff1a\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u4ee3\u7801\u6a21\u677f\uff0c\u9700\u8981\u4ece\u9ed8\u8ba4\u6a21\u677f\u590d\u5236\u4e00\u4efd\u5230\u672c\u5730\u9879\u76ee\u8fdb\u884c\u4fee\u6539\uff0c\u590d\u5236\u540e\u9009\u62e9**\u65e0\u683c\u5f0f\u7c98\u8d34**\uff0c\u5426\u5219\u683c\u5f0f\u4f1a\u6df7\u4e71 \u9ed8\u8ba4\u6a21\u677f\u6587\u4ef6\u8def\u5f84 entity templates/entity.java.ftl mapperXml templates/mapper.xml.ftl mapperJava templates/mapper.java.ftl service templates/service.java.ftl serviceImpl templates/serviceimpl.java.ftl controller templates/controller.java.ftl dto templates/dto.java.ftl sqlMapGenerator \u00b6 XMLMapper \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Mapper javaClientGenerator \u00b6 JavaMapper \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Mapper serviceGenerator \u00b6 Service \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Service controllerGenerator \u00b6 Controller \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Controller dtoGenerator \u00b6 controller \u5165\u53c2 dto \u7684\u751f\u6210\u5668\uff0c\u7528\u4e8e\u5bf9\u8c61\u8f6c\u6362\uff0c\u914d\u7f6e\u540c\u4e0a\u3002\u8be5\u5143\u7d20\u4f9d\u9644\u4e8e controllerGenerator\uff0c\u82e5\u751f\u6210 controller \u9700\u8981\u914d\u7f6e\u6b64\u9879\uff0c\u9ed8\u8ba4\u540e\u7f00 DTO \u3002 tables \u00b6 \u8981\u751f\u6210\u7684\u8868\u96c6\u5408 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 all \u662f\u5426\u6240\u6709\u8868 \u5426 \u4e3a true \u65f6\uff0c\u5c06\u8bfb\u53d6\u6570\u636e\u5e93\u6240\u6709\u8868, \u5c06\u5ffd\u7565\u5176\u6240\u6709 table \u5b50\u5143\u7d20 ignoreColumns \u5ffd\u7565\u7684\u5217 \u5426 \u6240\u6709\u8868\u9700\u8981\u5ffd\u7565\u7684\u5217 createTimeColumn \u521b\u5efa\u65f6\u95f4\u5b57\u6bb5 \u5426 \u9ed8\u8ba4\u4e3a timeCreated updateTimeColumn \u66f4\u65b0\u65f6\u95f4\u5b57\u6bb5 \u5426 \u9ed8\u8ba4\u4e3a timeModified entityObjectSuffix \u5b9e\u4f53\u540e\u7f00 \u5426 \u7ed9\u751f\u6210\u7684\u5b9e\u4f53\u52a0\u4e0a\u7edf\u4e00\u540e\u7f00, \u5982 DO -> UserDO table \u8981\u751f\u6210\u7684\u8868 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 tableName \u8868\u540d \u662f \u8868\u540d entityObjectName \u5b9e\u4f53\u5bf9\u8c61\u540d \u5426 \u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4ee5\u8868\u540d\u5927\u5199\u9a7c\u5cf0\u4f5c\u4e3a\u5b9e\u4f53\u5bf9\u8c61\u540d ignoreColumns \u5ffd\u7565\u7684\u5217 \u5426 \u6b64\u8868\u9700\u8981\u5ffd\u7565\u7684\u5217 \u6ce8\uff1a \u5ffd\u7565\u7684\u5217\u5c06\u4e0d\u5728\u751f\u6210\u7684 Entity \u4e2d\u5c55\u793a\uff0c\u4e00\u822c\u4e3a\u4e0d\u9700\u8981\u64cd\u4f5c\u7684\u53ef\u7a7a\u5217\uff0c table \u7684 ignoreColumns \u5c5e\u6027\u4f1a\u7ee7\u627f tables \u7684 entityObjectSuffix \u548c entityObjectName \u90fd\u5b58\u5728\u65f6\uff0c\u751f\u6210\u7684\u5b9e\u4f53\u540d\u4e3a ${entityObjectName}${entityObjectSuffix} \u5e38\u89c1\u95ee\u9898 \u00b6 TINYINT(1)\u7c7b\u578b \u00b6 1 \u4e2a\u957f\u5ea6\u7684 tinyint \u4e3a\u4ec0\u4e48\u8f6c\u4e3a Boolean \u7c7b\u578b\u800c\u4e0d\u662f Integer\uff1f Mysql \u5b98\u65b9\u53c2\u8003\u6587\u6863\u5173\u4e8e\u5e03\u5c14\u7c7b\u578b\u7684\u8bf4\u660e\uff1aBOO, BOOLEAN These types are synonyms(\u540c\u4e49\u8bcd) for TINYINT(1). A value of zero is considered(\u8ba4\u4e3a\u662f) false. Nonzero(\u4e0d\u4e3a 0) values are considered true. \u89e3\u51b3\u65b9\u6cd5\uff1a \u5982\u679c\u9700\u8981\u5c06 tinyint(1)\u8f6c\u4e3a Integer \u7c7b\u578b\u9700\u8981\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d jdbcConnection \u7684 tinyInt1isBit \u5c5e\u6027\u663e\u5f0f\u8bbe\u7f6e\u4e3a false \u5c06\u6570\u636e\u8868 tinyint(1)\u6539\u4e3a tinyint(2) \u6ce8\uff1atinyint(1) \u5982\u679c\u52a0\u4e86 unsigned \u5219 jdbc \u8bfb\u53d6\u5230\u7684\u957f\u5ea6\u662f 3\uff0c\u5bf9\u5e94\u8f6c\u6362\u4e3a Integer \u7c7b\u578b \u5e38\u89c1\u5f02\u5e38 \u00b6 Mapped Statements collection already contains value for java . lang . IllegalArgumentException : Mapped Statements collection already contains value for xxx . XxMapper . xxMethod \u539f\u56e0\uff1a Mapper \u7ee7\u627f\u4e86 BaseMapper \u4e4b\u540e\uff0c\u5982\u679c\u5728 Mapper \u4e2d\u91cd\u8f7d\u4e86 BaseMapper \u4e2d\u7684\u65b9\u6cd5\uff0c\u5728\u5e94\u7528\u542f\u52a8\u65f6\u4f1a\u51fa\u73b0\u5982\u4e0a\u5f02\u5e38\uff1b Xml Mapper \u4e2d\u5b9a\u4e49\u4e86\u4e0e BaseMapper \u540c\u540d sql \u7684 id \u89e3\u51b3\uff1a\u91cd\u547d\u540d\u8be5\u65b9\u6cd5 No qualifying bean of type NoSuchBeanDefinitionException : No qualifying bean of type ' com . ciicgat . sdk . data . mybatis . generator . template . BaseMapper < xxx . Xxx > ' available : expected at least 1 bean which qualifies as autowire candidate . Dependency annotations : { @org.springframework.beans.factory.annotation.Autowired ( required = true ) \u539f\u56e0\uff1aMapper \u6240\u5728\u7684\u5305\u672a\u88ab\u626b\u63cf\u5230 \u89e3\u51b3\uff1a\u5c06\u5176\u914d\u7f6e\u5230 Application.java \u7684 @MapperScan \u4e2d Invalid bound statement (not found) org . apache . ibatis . binding . BindingException : Invalid bound statement ( not found ): xx . XxxService . xxMethod \u539f\u56e0\uff1a Mapper Xml \u6587\u4ef6\u672a\u88ab\u626b\u63cf Mapper Xml \u4e2d\u65e0\u5bf9\u5e94\u65b9\u6cd5 Mapper Xml \u4e0e Mapper \u7684 ResultType \u4e0d\u4e00\u81f4 MapperScan \u672a\u76f4\u63a5\u914d\u7f6e Mapper \u7684\u5305\uff0c\u53ef\u80fd\u53ea\u914d\u7f6e\u4e86 Mapper \u7684\u7236\u5305 \u89e3\u51b3\uff1a application.properties \u4e2d\u914d\u7f6e xml \u8def\u5f84 \u5982: mybatis.mapper-locations=classpath*:mapper/*.xml \u68c0\u67e5\u5e76\u52a0\u5165\u5bf9\u5e94\u65b9\u6cd5 \u68c0\u67e5\u5e76\u4f7f\u5176\u4e00\u81f4 \u914d\u7f6e @MapperScan \u5230\u5177\u4f53\u7684 Mapper \u6240\u5728\u7684\u5305\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a mapper \u5305\u53ef\u8003\u8651\u4f7f\u7528\u901a\u914d\u7b26 BaseMapper could not be found Field baseMapper in com . ciicgat . sdk . data . mybatis . generator . template . BaseServiceImpl required a bean of type ' com . ciicgat . sdk . data . mybatis . generator . template . BaseMapper ' that could not be found . \u539f\u56e0\uff1a\u53ea\u7ee7\u627f\u4e86 BaseService \u6ca1\u6709\u7ee7\u627f BaseMapper \u89e3\u51b3\uff1a\u5bf9\u5e94\u7684 Mapper \u9700\u7ee7\u627f BaseMapper","title":"Mybatis\u589e\u52a0"},{"location":"grus/data/mybatis-enhance/#mybatis","text":"grus-2021.1.0 \u5f00\u59cb\u652f\u6301 code-generator \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u5728\u4e0d\u4fb5\u5165\u6846\u67b6\u5e95\u5c42\u7684\u524d\u63d0\u4e0b\uff0c\u8fbe\u5230\u7b80\u5316\u5f00\u53d1\u3001\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u7684\u76ee\u7684\u3002 \u6b64\u9879\u76ee\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u7b2c\u4e00\u4e2a\u90e8\u5206\u4e3a**\u901a\u7528 Mapper \u548c Service \u63d0\u4f9b CRUD \u57fa\u672c\u64cd\u4f5c\u7684\u652f\u6301**\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f**\u4ee3\u7801\u751f\u6210**\u529f\u80fd\uff0c\u4e3a\u8868\u7ed3\u6784\u53d8\u52a8\u65f6\u63d0\u4f9b\u9ad8\u6548\u5feb\u901f\u751f\u6210\u5bf9\u5e94\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002 \u6b64\u9879\u76ee\u53c2\u8003\u4e86 mybatis-generator \u548c mybatis-plus , \u53d6\u5176\u7cbe\u534e\u5e76\u4e0e grus \u6846\u67b6\u878d\u5408\u3002mybatis-generator \u4f1a\u751f\u6210\u5f88\u591a\u5197\u4f59\u4ee3\u7801\uff0c\u800c mybatis-plus \u5219\u4e0d\u7528\u751f\u6210\u5197\u4f59\u4ee3\u7801\uff0c\u529f\u80fd\u4e5f\u5f88\u5f3a\u5927\uff0c\u4f46\u662f\u5176\u5bf9\u5e95\u5c42\u4fb5\u5165\u592a\u6df1\uff0c\u5bf9 mybatis \u7684 SqlSessionFactory \u8fdb\u884c\u4e86\u91cd\u5199\uff0c\u4e0d\u80fd\u76f4\u63a5\u96c6\u6210\u5230\u6211\u53f8\u9879\u76ee\u4e2d\u4f7f\u7528\uff1b\u53c2\u8003\u4e24\u8005\u4f18\u79c0\u4e4b\u5904 code-generator \u8bde\u751f\u4e86\uff0c\u65e2\u4e0d\u9700\u8981\u751f\u6210\u5197\u4f59\u4ee3\u7801\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u5e95\u5c42\u4fb5\u5165\uff0c\u4f7f\u7528\u65b9\u4fbf\u96c6\u6210\u5feb\u901f\uff0c\u9002\u5408\u5feb\u901f\u5f00\u53d1\uff0c\u5c06\u66f4\u591a\u7684\u65f6\u95f4\u7528\u5728\u4e1a\u52a1\u903b\u8f91\u4e0a\u3002","title":"Mybatis \u589e\u5f3a"},{"location":"grus/data/mybatis-enhance/#_1","text":"\u65e0\u4fb5\u5165 \uff1a\u53ea\u505a\u589e\u5f3a\u4e0d\u505a\u6539\u53d8\uff0c\u5f15\u5165\u5b83\u4e0d\u4f1a\u5bf9\u73b0\u6709\u5de5\u7a0b\u4ea7\u751f\u5f71\u54cd \u65e0\u635f\u8017 \uff1a\u542f\u52a8\u5373\u4f1a\u81ea\u52a8\u6ce8\u5165\u57fa\u672c\u589e\u5220\u6539\u67e5\u529f\u80fd\uff0c\u6027\u80fd\u65e0\u635f\u8017\uff0c\u76f4\u63a5\u9762\u5411\u5bf9\u8c61\u64cd\u4f5c CRUD \u64cd\u4f5c \uff1a\u5185\u7f6e\u901a\u7528 Mapper\u3001\u901a\u7528 Service\uff0c\u4ec5\u4ec5\u901a\u8fc7\u5c11\u91cf\u914d\u7f6e\u5373\u53ef\u5b9e\u73b0\u5355\u8868\u5927\u90e8\u5206 CRUD \u64cd\u4f5c\uff0c\u66f4\u6709\u5f3a\u5927\u7684\u6761\u4ef6\u6784\u9020\u5668\uff0c\u6ee1\u8db3\u5404\u7c7b\u4f7f\u7528\u9700\u6c42 \u652f\u6301 Lambda \u5f62\u5f0f\u8c03\u7528 \uff1a\u901a\u8fc7 Lambda \u8868\u8fbe\u5f0f\uff0c\u65b9\u4fbf\u7684\u7f16\u5199\u5404\u7c7b\u67e5\u8be2\u6761\u4ef6\uff0c\u65e0\u9700\u518d\u62c5\u5fc3\u5b57\u6bb5\u5199\u9519 \u4ee3\u7801\u751f\u6210\u5668 \uff1a\u53ef\u5feb\u901f\u751f\u6210 Entity\u3001Mapper\u3001Service\u3001Controller \u5c42\u4ee3\u7801\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6a21\u677f \u5206\u9875 \uff1a\u57fa\u4e8e MyBatis \u7269\u7406\u5206\u9875\uff0c\u76f4\u63a5\u8fd4\u56de grus \u6846\u67b6\u5c01\u88c5\u7684\u5206\u9875\u5bf9\u8c61, \u540c\u65f6\u652f\u6301 pagehelper \u5206\u9875\u63d2\u4ef6","title":"\u7279\u6027"},{"location":"grus/data/mybatis-enhance/#_2","text":"\u8fd9\u91cc\u4ee5\u4e00\u4e2a\u7a7a\u7684\u5de5\u7a0b\u6765\u793a\u4f8b \u6dfb\u52a0\u4f9d\u8d56 \u5f15\u5165 Grus Boot Starter \u7236\u5de5\u7a0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> 2021.1.0 </version> </parent> \u5f15\u5165\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u4f9d\u8d56 <dependency> <artifactId> grus-boot-starter-server-general </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u5f15\u5165\u6570\u636e\u4f9d\u8d56 <dependency> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-data </artifactId> </dependency> \u5f15\u5165\u6d4b\u8bd5\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> </dependency> \u914d\u7f6e \u5728 application.properties \u4e2d\u914d\u7f6e\u57fa\u672c\u4fe1\u606f spring.application.name = grus-demo server.port = 8088 server.tomcat.uri-encoding = UTF-8 logging.level.com.ciicgat.grusgenerator.codegenerator.example.mapper = debug spring.jackson.date-format = yyyy-MM-dd HH:mm:ss spring.jackson.time-zone = GMT+8 grus.feign.log-req = true grus.feign.log-resp = true mybatis.mapper-locations = classpath*:mapper/*.xml \u6dfb\u52a0\u542f\u52a8\u7c7b Application.java @SpringBootApplication @MapperScan ( \"com.ciicgat.grusgenerator.codegenerator.example.mapper\" ) public class Application { public static void main ( String [] args ) { SpringApplication . run ( Application . class , args ); } } \u7f16\u7801 \u7f16\u5199\u5b9e\u4f53\u7c7b ShopTip.java @TableName ( \"ShopTip\" ) public class ShopTip { @TableId private Long id ; @TableField ( ignoreSaving = true ) private Date timeCreated ; @TableField ( ignoreSaving = true ) private Date timeModified ; private Long ecappId ; private Integer type ; private String title ; private String content ; private Integer enable ; // \u6b64\u5904\u5ffd\u7565 getter setter \u65b9\u6cd5 } \u7f16\u5199 Mapper \u7c7b ShopTipMapper.java public interface ShopTipMapper extends BaseMapper < ShopTip > { // \u5982\u6709\u5176\u4ed6\u65b9\u6cd5\u76f4\u63a5\u4e66\u5199\u5176\u4e2d\u5373\u53ef // ShopTip selectOne(Long id); } \u540c\u65f6\u4e5f\u652f\u6301 @Mapper \u6ce8\u89e3 \u5f00\u59cb\u4f7f\u7528 \u6dfb\u52a0\u6d4b\u8bd5\u7c7b @RunWith ( SpringRunner . class ) @SpringBootTest public class SampleTest { @Resource private ShopTipMapper shopTipMapper ; @Test public void testList () { Example < ShopTip > example = new ConditionExample <> (); List < ShopTip > list = shopTipMapper . list ( example ); Assert . assertTrue ( list . size () > 0 ); list . forEach ( System . out :: println ); } }","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"grus/data/mybatis-enhance/#crud","text":"","title":"CRUD \u63a5\u53e3"},{"location":"grus/data/mybatis-enhance/#mapper","text":"\u901a\u7528 Mapper \u63a5\u53e3\uff1a com.ciicgat.sdk.data.mybatis.generator.template.BaseMapper.java \u26a0\ufe0f \u7279\u522b\u63d0\u9192\uff1aMapper \u548c xml \u4e2d\u4e0d\u80fd\u91cd\u8f7d BaseMapper \u4e2d\u7684\u65b9\u6cd5 \u63d2\u5165 Insert // \u9009\u62e9\u6027\u63d2\u5165\uff08\u4ec5\u63d2\u5165\u975enull\u5b57\u6bb5\uff09 int insert ( T entity ); // \u5168\u5b57\u6bb5\u63d2\u5165\uff08\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u63d2\u5165\uff09 int insertAll ( T entity ); // \u6279\u91cf\u5168\u5b57\u6bb5\u63d2\u5165\uff08\u6ce8\uff1a\u5982\u8868\u65b0\u52a0\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u65f6\u63d2\u5165\u5bf9\u8c61\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09 int batchInsert ( List < T > list ); \u5220\u9664 Delete // \u6839\u636eID\u5220\u9664 int delete ( Long id ); // \u6279\u91cfID\u5220\u9664 int batchDelete ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u5220\u9664 int deleteByExample ( Example < T > example ); \u66f4\u65b0 Update // \u6839\u636eID\u9009\u62e9\u6027\u66f4\u65b0 int update ( T entity ); // \u6839\u636eID\u5168\u5b57\u6bb5\u66f4\u65b0 (\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u66f4\u65b0) int updateAll ( T entity ); // \u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u66f4\u65b0 int updateByExample ( T entity , Example < T > example ); // \u6839\u636e\u6761\u4ef6\u5168\u5b57\u6bb5\u66f4\u65b0 int updateByExampleAll ( T entity , Example < T > example ); \u83b7\u53d6 Get // \u6839\u636eID\u83b7\u53d6\u5b9e\u4f53 T get ( Long id ); // \u6279\u91cf\u83b7\u53d6\u5b9e\u4f53 List < T > batchGet ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u83b7\u53d6\u5b9e\u4f53 T getByExample ( Example < T > example ); \u67e5\u8be2\u6570\u91cf Count // \u6839\u636e\u6761\u4ef6\u6570\u91cf\u67e5\u8be2 int count ( Example < T > example ); \u67e5\u8be2\u5217\u8868 List // \u6839\u636e\u6761\u4ef6\u5217\u8868\u67e5\u8be2 List < T > list ( Example < T > example ); \u6ce8\uff1a Example \u548c Query \u90fd\u7ee7\u627f\u4e8e Conditional , \u5728\u4e0d\u540c\u5c42\u9762\u4f7f\u7528\u4e0d\u540c\u7684\u63a5\u53e3\uff1a mapper \u5c42: Example -> ConditionExample service \u5c42: Query -> QueryExample , PageQueryExample \u793a\u4f8b // mapper: Example Example < ShopTip > example = new ConditionExample <> (); userMapper . getByExample ( example ); // service: Query Query < ShopTip > query = new QueryExample <> (); userService . getByExample ( query ); Query < ShopTip > query1 = new PageQueryExample <> (); userService . page ( query1 );","title":"Mapper"},{"location":"grus/data/mybatis-enhance/#service","text":"\u901a\u7528 Service \u63a5\u53e3\uff1a com.ciicgat.sdk.data.mybatis.generator.template.BaseService.java \u26a0\ufe0f \u7279\u522b\u63d0\u9192\uff1a\u7ee7\u627f BaseService \u524d\u63d0\u9700\u8981\u5bf9\u5e94\u7684 Mapper \u7ee7\u627f BaseMapper \u63d2\u5165 Insert // \u9009\u62e9\u6027\u63d2\u5165\uff08\u4ec5\u63d2\u5165\u975enull\u5b57\u6bb5\uff09 int insert ( T entity ); // \u5168\u5b57\u6bb5\u63d2\u5165\uff08\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u63d2\u5165\uff09 int insertAll ( T entity ); // \u6279\u91cf\u5168\u5b57\u6bb5\u63d2\u5165\uff08\u6ce8\uff1a\u5982\u8868\u65b0\u52a0\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u65f6\u63d2\u5165\u5bf9\u8c61\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff09 int batchInsert ( List < T > list ); \u5220\u9664 Delete // \u6839\u636eID\u5220\u9664 int delete ( Long id ); // \u6279\u91cfID\u5220\u9664 int batchDelete ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u5220\u9664 int deleteByExample ( Query < T > query ); \u66f4\u65b0 Update // \u6839\u636eID\u9009\u62e9\u6027\u66f4\u65b0 int update ( T entity ); // \u6839\u636eID\u5168\u5b57\u6bb5\u66f4\u65b0 (\u65e0\u8bba\u662f\u5426\u4e3anull\u5747\u8fdb\u884c\u66f4\u65b0) int updateAll ( T entity ); // \u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u66f4\u65b0 int updateByExample ( T entity , Query < T > query ); // \u6839\u636e\u6761\u4ef6\u5168\u5b57\u6bb5\u66f4\u65b0 int updateByExampleAll ( T entity , Query < T > query ); \u4fdd\u5b58 Save entity.id == null -> \u63d2\u5165 entity.id != null -> \u66f4\u65b0 // \u9009\u62e9\u6027\u4fdd\u5b58 int save ( T entity ); // \u5168\u5b57\u6bb5\u4fdd\u5b58 int saveAll ( T entity ); \u83b7\u53d6 Get // \u6839\u636eID\u83b7\u53d6\u5b9e\u4f53 T get ( Long id ); // \u6279\u91cf\u83b7\u53d6\u5b9e\u4f53 List < T > batchGet ( List < Long > ids ); // \u6839\u636e\u6761\u4ef6\u83b7\u53d6\u5b9e\u4f53 T getByExample ( Query < T > query ); \u67e5\u8be2\u6570\u91cf Count // \u6839\u636e\u6761\u4ef6\u6570\u91cf\u67e5\u8be2 int count ( Query < T > query ); \u67e5\u8be2\u5217\u8868 List // \u6839\u636e\u6761\u4ef6\u5217\u8868\u67e5\u8be2 List < T > list ( Query < T > query ); \u67e5\u8be2\u5206\u9875 Page // \u6839\u636e\u6761\u4ef6\u67e5\u8be2\u5206\u9875 Pagination < T > page ( PageQueryExample < T > query );","title":"Service"},{"location":"grus/data/mybatis-enhance/#_3","text":"\u4e0d\u5efa\u8bae\u5c06\u5e26\u6761\u4ef6\u6784\u9020\u5668\u7684\u63a5\u53e3\u76f4\u63a5\u66b4\u9732\u51fa\u53bb\uff0c\u5e94\u5199\u4e00\u4e2a DTO \u8fdb\u884c\u4f20\u8f93 \u4ee5\u4e0b\u65b9\u6cd5\u5165\u53c2\u4e2d\u7684 R column \u5747\u8868\u793a\u6570\u636e\u5e93\u5b57\u6bb5","title":"\u6761\u4ef6\u6784\u9020\u5668"},{"location":"grus/data/mybatis-enhance/#conditional","text":"\u521b\u5efa\u5e76\u4e14\u6761\u4ef6 // \u521b\u5efa\u6761\u4ef6: \u5982\u679c\u6761\u4ef6\u5217\u8868\u4e3a\u7a7a\u5219\u9ed8\u8ba4\u653e\u5165, \u5426\u5219\u4e0d\u653e\u5165 Criteria < T > createCriteria (); // \u521b\u5efaLambda\u6761\u4ef6: \u5982\u679c\u6761\u4ef6\u5217\u8868\u4e3a\u7a7a\u5219\u9ed8\u8ba4\u653e\u5165, \u5426\u5219\u4e0d\u653e\u5165 LambdaCriteria < T > createLambdaCriteria (); \u521b\u5efa\u6216\u8005\u6761\u4ef6 // \u8bbe\u7f6e\u6216\u8005\u6761\u4ef6 void or ( GeneratedCriteria criteria ); // \u521b\u5efa\u6216\u8005\u6761\u4ef6, \u5e76\u653e\u5165\u6761\u4ef6\u5217\u8868 Criteria < T > or (); \u5176\u4ed6\u63a5\u53e3 // \u6e05\u9664\u6761\u4ef6\u548c\u8bbe\u7f6e\u503c void clear (); // \u8bbe\u7f6e\u662f\u5426\u53bb\u91cd void setDistinct ( boolean distinct ); // \u8bbe\u7f6eoffset: limit ${offset}, ${limit} void setLimitStart ( int limitStart ); // \u8bbe\u7f6elimit: limit ${offset}, ${limit} void setLimitEnd ( int limitEnd ); // \u6dfb\u52a0\u6392\u5e8f\uff0c\u5982\u672a\u6dfb\u52a0\u6392\u5e8f\uff0c\u5219\u9ed8\u8ba4\u6392\u5e8f\u662fid DESC void addOrderBy ( String columnName , boolean isAsc );","title":"Conditional \u6761\u4ef6\u6784\u9020\u5668"},{"location":"grus/data/mybatis-enhance/#query","text":"\u7ee7\u627f\u4e8e Conditional \u8bbe\u7f6e\u67e5\u8be2\u5b9e\u4f53 // \u8bbe\u7f6e\u5b9e\u4f53: \u5c06\u6240\u6709\u975e\u7a7a\u5b57\u6bb5\u52a0\u5165eq\u6761\u4ef6\u5217\u8868 void setEntity ( T entity ); // \u6b64\u65b9\u6cd5\u53ef\u4e0eCriteria\u6761\u4ef6\u53e0\u52a0\u4f7f\u7528 Criteria \u6761\u4ef6 eq eq ( R column , Object val ) \u7b49\u4e8e = \u4f8b: eq(\"name\", \"\u8001\u738b\") ---> name = '\u8001\u738b' ne ne ( R column , Object val ) \u4e0d\u7b49\u4e8e <> \u4f8b: ne(\"name\", \"\u8001\u738b\") ---> name <> '\u8001\u738b' gt gt ( R column , Object val ) \u5927\u4e8e > \u4f8b: gt(\"age\", 18) ---> age > 18 ge ge ( R column , Object val ) \u5927\u4e8e\u7b49\u4e8e >= \u4f8b: ge(\"age\", 18) ---> age >= 18 lt lt ( R column , Object val ) \u5c0f\u4e8e < \u4f8b: lt(\"age\", 18) ---> age < 18 le le ( R column , Object val ) \u5c0f\u4e8e\u7b49\u4e8e <= \u4f8b: le(\"age\", 18) ---> age <= 18 between between ( R column , Object val1 , Object val2 ) BETWEEN \u503c 1 AND \u503c 2 \u4f8b: between(\"age\", 18, 30) ---> age between 18 and 30 notBetween notBetween ( R column , Object val1 , Object val2 ) NOT BETWEEN \u503c 1 AND \u503c 2 \u4f8b: notBetween(\"age\", 18, 30) ---> age not between 18 and 30 like like ( R column , Object val ) LIKE '%\u503c%' \u4f8b: like(\"name\", \"\u738b\") ---> name like '%\u738b%' notLike notLike ( R column , Object val ) NOT LIKE '%\u503c%' \u4f8b: notLike(\"name\", \"\u738b\") ---> name not like '%\u738b%' likeLeft likeLeft ( R column , Object val ) LIKE '%\u503c' \u4f8b: likeLeft(\"name\", \"\u738b\") ---> name like '%\u738b' likeRight likeRight ( R column , Object val ) LIKE '\u503c%' \u4f8b: likeRight(\"name\", \"\u738b\") ---> name like '\u738b%' isNull isNull ( R column ) \u5b57\u6bb5 IS NULL \u4f8b: isNull(\"name\") ---> name is null isNotNull isNotNull ( R column ) \u5b57\u6bb5 IS NOT NULL \u4f8b: isNotNull(\"name\") ---> name is not null in in ( R column , Collection <?> value ) \u5b57\u6bb5 IN (value.get(0), value.get(1), ...) \u4f8b: in(\"age\",{1,2,3}) ---> age in (1,2,3) in ( R column , Object ... values ) \u5b57\u6bb5 IN (v0, v1, ...) \u4f8b: in(\"age\", 1, 2, 3) ---> age in (1,2,3) notIn notIn ( R column , Collection <?> value ) \u5b57\u6bb5 NOT IN (value.get(0), value.get(1), ...) \u4f8b: notIn(\"age\",{1,2,3}) ---> age not in (1,2,3) notIn ( R column , Object ... values ) \u5b57\u6bb5 NOT IN (v0, v1, ...) \u4f8b: notIn(\"age\", 1, 2, 3) ---> age not in (1,2,3)","title":"Query \u6761\u4ef6\u6784\u9020\u5668"},{"location":"grus/data/mybatis-enhance/#_4","text":"// \u521b\u5efa\u6761\u4ef6\u6784\u9020\u5668 Example < ShopTip > example = new ConditionExample <> (); // \u521b\u5efa\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff1aid in (1,2,3) and type is not null example . createCriteria (). in ( \"id\" , 1 , 2 , 3 ). isNotNull ( \"type\" ); // \u521b\u5efa\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1a \u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u8d77\u4e0d\u4f1a\u9ed8\u8ba4\u653e\u5165\u6761\u4ef6\u5217\u8868, title like %\u5173\u7231\u901a% LambdaCriteria < ShopTip > criteria = example . createLambdaCriteria (). like ( ShopTip :: getTitle , \"\u5173\u7231\u901a\" ); // \u5c06\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u8bbe\u7f6e\u4e3a\u6216\u8005\u6761\u4ef6 example . or ( criteria ); // \u521b\u5efa\u7b2c\u4e09\u4e2a\u6216\u8005\u6761\u4ef6\uff1atimeCreated between '2020-09-11' and '2020-11-11' example . orLambdaCriteria (). between ( ShopTip :: getTimeCreated , \"2020-09-11\" , \"2020-11-11\" ); // \u8bbe\u7f6e\u53bb\u91cd example . setDistinct ( true ); // \u6dfb\u52a0\u6392\u5e8f example . addOrderBy ( \"title\" , true ); example . addOrderBy ( \"id\" , false ); List < ShopTip > list = shopTipMapper . list ( example ); // \u4ee5\u4e0a\u6761\u4ef6\u6784\u9020\u7684SQL\u8bed\u53e5\u4e3a\uff1a /* SELECT DISTINCT `id`,`timeCreated`,`timeModified`,`ecappId`,`type`,`title`,`content`,`enable` FROM `ShopTip` WHERE ( `id` IN ( 1 , 2 , 3 ) and `type` IS NOT NULL ) OR ( `title` LIKE CONCAT('%','\u5173\u7231\u901a','%') ) OR ( `timeCreated` BETWEEN '2020-09-11' and '2020-11-11' ) ORDER BY `title` ASC, `id` DESC; */","title":"\u793a\u4f8b"},{"location":"grus/data/mybatis-enhance/#_5","text":"\u5feb\u901f\u751f\u6210 Entity\u3001Mapper\u3001Mapper XML\u3001Service\u3001Controller \u7b49\u5404\u4e2a\u6a21\u5757\u7684\u4ee3\u7801\uff0c\u6781\u5927\u7684\u63d0\u5347\u4e86\u5f00\u53d1\u6548\u7387 \u5173\u4e8e\u8986\u76d6: Entity \u6587\u4ef6: Entity \u662f\u4e0e\u6570\u636e\u5e93\u8868\u7ed3\u6784\u4fdd\u6301\u4e00\u81f4\u7684, \u5c3d\u91cf\u4e0d\u8981\u53bb\u4fee\u6539, \u5982\u9700\u6269\u5c55\u8bf7\u6dfb\u52a0 Bean \u53bb\u7ee7\u627f\u5b83, \u6240\u4ee5\u6bcf\u6b21\u751f\u6210\u90fd\u4f1a\u8986\u76d6 Entity \u5176\u4ed6\u6587\u4ef6: \u5176\u4ed6\u6587\u4ef6\u4e00\u6b21\u751f\u6210\u4e4b\u540e\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u65b9\u6cd5, \u6240\u4ee5\u6bcf\u6b21\u751f\u6210\u4e0d\u4f1a\u8986\u76d6","title":"\u4ee3\u7801\u751f\u6210\u5668"},{"location":"grus/data/mybatis-enhance/#_6","text":"\u5728\u524d\u9762\u90a3\u4e2a\u9879\u76ee\u4e0a\u6dfb\u52a0\u4ee3\u7801\u751f\u6210\u5668 \u6dfb\u52a0\u4f9d\u8d56 \u5f15\u5165\u4ee3\u7801\u751f\u6210\u5668\uff0c scope \u8bbe\u7f6e\u4e3a test <dependency> <groupId> com.ciicgat.grusgenerator </groupId> <artifactId> grus-generator </artifactId> <version> ${latest.version} </version> <scope> test </scope> </dependency> \u914d\u7f6e \u6dfb\u52a0\u751f\u6210\u914d\u7f6e\u6587\u4ef6 code-generator.xml , \u5efa\u8bae\u653e\u5230\u6d4b\u8bd5\u8d44\u6e90\u76ee\u5f55 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE code-generator PUBLIC \"-//guanaitong.com//DTD CodeGenerator 1.0//EN\" \"https://e.guanaitong.com/manual/code-generator.dtd\"> <code-generator> <!--\u57fa\u7840\u914d\u7f6e--> <baseConfig> <property name= \"enableSwagger\" > true </property> <property name= \"enableValidation\" > true </property> </baseConfig> <!--\u6570\u636e\u5e93\u8fde\u63a5--> <jdbcConnection driverClass= \"com.mysql.cj.jdbc.Driver\" host= \"mdb.servers.dev.ofc\" database= \"robin_example\" username= \"amy\" password= \"1qazxsw@\" /> <!-- \u751f\u6210\u5b9e\u4f53\u6587\u4ef6 --> <javaModelGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.bean.entity\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Mapper\u7684\u6620\u5c04XML\u6587\u4ef6 --> <sqlMapGenerator targetPackage= \"mapper\" codePath= \"src/main/resources\" /> <!-- \u751f\u6210Mapper\u7684\u7c7b\u6587\u4ef6 --> <javaClientGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.mapper\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Service\u6587\u4ef6 --> <serviceGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.service\" codePath= \"src/main/java\" /> <!-- \u751f\u6210Controller\u6587\u4ef6 --> <controllerGenerator targetPackage= \"com.ciicgat.grusgenerator.cg.example.controller\" codePath= \"src/main/java\" /> <!-- \u751f\u6210DTO\u6587\u4ef6 --> <dtoGenerator targetPackage= \"com.ciicgat.grusgenerator.test.cg.generated.dto\" codePath= \"src/test/java\" suffix= \"VO\" /> <!--\u9700\u8981\u751f\u6210\u7684\u8868--> <tables entityObjectSuffix= \"DO\" > <table tableName= \"User\" /> </tables> </code-generator> \u914d\u7f6e\u7684\u8be6\u7ec6\u8bf4\u660e\u89c1\u4e0b\u6587 - \u914d\u7f6e\u6587\u6863 \u5f00\u59cb\u4f7f\u7528 \u521b\u5efa\u751f\u6210\u6d4b\u8bd5\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6 CodeGeneratorTest.java public class CodeGeneratorTest { @Test public void generate () { CodeGenerator . builder (). build (). generate (); } } \u6ce8\uff1a\u914d\u7f6e\u6587\u4ef6\u540d\u4e3a code-generator.xml \u65f6\u65e0\u9700\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5426\u5219\u9700\u8981\u6307\u5b9a configFilePath","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"grus/data/mybatis-enhance/#_7","text":"\u76ee\u524d\u8bfb\u5199\u5206\u79bb\u5173\u7231\u901a\u7684\u8bfb\u5199\u5206\u79bb\u662f\u57fa\u4e8e\u4e3b\u4ece\u5e93\u7684 SqlSessionTemplate \u6765\u5b9e\u73b0\u7684\uff0c\u76ee\u524d\u9879\u76ee\u4e2d\u7528\u8bfb\u5199\u5206\u79bb\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a BaseDao \u5176\u4e2d\u6ce8\u5165 readSqlSessionTemplate \u548c writeSqlSessionTemplate , \u5199 Mapper \u7684\u5b9e\u73b0\u7c7b\uff0c\u5728\u5176\u4e2d\u4f7f\u7528\u5bf9\u5e94\u7684 SqlSessionTemplate \u6267\u884c Statment\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8bfb\u5199\u5206\u79bb\u64cd\u4f5c\u7684\u7075\u6d3b\u6027\uff0ccode-generator \u4e5f\u6cbf\u7528\u6b64\u4f7f\u7528\u4e60\u60ef\uff0c\u4f7f\u7528 ReadWriteSeparationMapperImpl \u4e2d\u7684\u589e\u5220\u6539\u67e5\u65b9\u6cd5\u662f\u8bfb\u5199\u5206\u79bb\u7684\u3002 \u4f7f\u7528 \u914d\u7f6e\u6587\u4ef6 application.properties \u6dfb\u52a0\u8bfb\u5199\u5206\u79bb\u7684\u914d\u7f6e grus.db.read-write-separation = true \u521b\u5efa Mapper \u5b9e\u73b0\u7c7b\uff0c\u7ee7\u627f ReadWriteSeparationMapperImpl \uff0c\u6dfb\u52a0\u6ce8\u89e3 @Repository , @Primary @Repository @Primary // \u8bf4\u660e\u2460 public class TemplateMapperImpl extends ReadWriteSeparationMapperImpl < Template > implements TemplateMapper { @Override public Template getById ( Long id ) { // \u8bf4\u660e\u2461 // return readSqlSessionTemplate.selectOne(\"com.ciicgat.grusgenerator.codegenerator.example.mapper.TemplateMapper.getById\", id); return readSqlSessionTemplate . selectOne ( this . getStatement ( \"getById\" ), id ); } } Mapper.xml \u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49 SQL <select id= \"getById\" resultType= \"com.ciicgat.grusgenerator.cg.example.bean.entity.Template\" > select * from Template where id=#{id} </select> \u8c03\u7528\u5904 @Service public class TemplateServiceImpl extends BaseServiceImpl < Template > implements TemplateService { // \u8bf4\u660e\u2462 // @Resource(name = \"templateMapperImpl\") @Autowired private TemplateMapper templateMapper ; @Override public Template getById ( Long id ) { return templateMapper . getById ( id ); } } \u8bf4\u660e\uff1a \u2460 \u7531\u4e8e\u5b58\u5728\u9ed8\u8ba4\u5b9e\u73b0\u7684 BaseServiceImpl \u4e2d\u4f1a\u81ea\u52a8\u6ce8\u5165\u4e00\u4e2a TemplateMapper \u7684\u4ee3\u7406\u5b9e\u4f8b\uff0c\u6240\u4ee5\u589e\u52a0 TemplateMapper \u7684\u5b9e\u73b0\u7c7b\u65f6\u9700\u8981\u7528 @Primary \u6807\u6ce8\u5176\u4e3a\u4e3b\u8981\u7684\uff0c\u5426\u5219\u542f\u52a8\u65f6 spring \u4f1a\u62a5\u9519\u65e0\u6cd5\u786e\u8ba4\u54ea\u4e2a\u5b9e\u73b0\u7c7b\u6765\u6ce8\u5165 \u2461 \u7531\u4e8e\u751f\u6210\u7684 Mapper.xml \u4e2d\u7684 namespace \u662f\u5b8c\u6574 Mapper \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u8fd9\u8fb9\u5199 statement \u65f6\u4e5f\u9700\u8981\u5199\u5b8c\u6574\u8def\u5f84\u624d\u80fd\u627e\u5230\uff0c\u4e3a\u4e86\u7b80\u4fbf\u5c01\u88c5\u4e86 getStatement \u65b9\u6cd5\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u5b83\u5373\u53ef\u7b80\u5316\u8c03\u7528 \u2462 \u7531\u4e8e @Autowired \u9ed8\u8ba4\u662f\u6309\u7c7b\u578b\u7c7b\u81ea\u52a8\u88c5\u8f7d\uff0c\u800c @Resource \u9ed8\u8ba4\u662f\u6309\u540d\u79f0\u6765\u6ce8\u5165\uff0c\u800c\u6b64\u65f6 TemplateMapper \u5b58\u5728 2 \u4e2a\u5b9e\u4f8b\uff0c\u5982\u679c\u4f7f\u7528 @Resource \u65f6\u9700\u8981\u6307\u5b9a\u540d\u79f0\uff0c\u56e0\u4e3a @Primary \u4ec5\u5bf9 @Autowired \u6709\u6548 \u4ee3\u7801\u751f\u6210 \u751f\u6210\u914d\u7f6e\u6587\u4ef6( code-generator.xml )\u7684\u57fa\u7840\u914d\u7f6e( baseConfig )\u4e2d\u542f\u7528\u8bfb\u5199\u5206\u79bb <property name= \"enableReadWriteSeparation\" > true </property> \u6dfb\u52a0\u4ee5\u4e0a\u914d\u7f6e\u540e\u751f\u6210\u7684\u4ee3\u7801\u5305\u542b\u8bfb\u5199\u5206\u79bb Mapper \u5b9e\u73b0\u7c7b\uff0c\u4ee3\u7801\u4f4d\u7f6e\u5728 mapper.impl \u5305\u4e0b","title":"\u8bfb\u5199\u5206\u79bb"},{"location":"grus/data/mybatis-enhance/#_8","text":"code-generator \u4f5c\u4e3a\u6839\u5143\u7d20\uff0c\u914d\u7f6e\u4ece\u6b64\u5143\u7d20\u5f00\u59cb\uff0c\u4ee5\u4e0b\u8bf4\u660e\u4e0b\u5404\u4e2a\u5143\u7d20\u7684\u542b\u4e49\u4e0e\u53c2\u6570\u3002","title":"\u914d\u7f6e\u6587\u6863"},{"location":"grus/data/mybatis-enhance/#baseconfig","text":"property \u5c5e\u6027 enableSwagger \u542f\u7528 Swagger\uff0c\u5728\u751f\u6210\u7684 DTO \u548c Controller \u4e2d\u4f7f\u7528 Swagger \u6ce8\u89e3 enableValidation \u542f\u7528\u9a8c\u8bc1\uff0c\u5728\u751f\u6210\u7684 DTO \u548c Controller \u4e2d\u4f7f\u7528\u9a8c\u8bc1\u6ce8\u89e3\uff0c\u6839\u636e\u6570\u636e\u5e93\u8868\u5b57\u6bb5\u6dfb\u52a0 @NotNull , @Length \u6ce8\u89e3 enableReadWriteSeparation \u542f\u7528\u8bfb\u5199\u5206\u79bb\uff0c\u751f\u6210\u8bfb\u5199\u5206\u79bb\u5bf9\u5e94\u7684\u4ee3\u7801 disableUpdatingMapperXml \u7981\u7528\u66f4\u65b0 MapperXml \u6587\u4ef6\uff0c\u6bcf\u6b21\u751f\u6210\u4f1a\u540c\u6b65\u66f4\u65b0 mapper \u4e2d id=BaseColumnList \u548c id=BaseResultMap \u5185\u5bb9\uff0c\u5982\u679c\u4e0d\u9700\u8981\u66f4\u65b0\u6b64\u9879\u8bbe\u7f6e\u4e3a true \u7981\u7528\u66f4\u65b0 enableMapperAnnotation \u5728\u751f\u6210\u7684 Mapper.java \u4e2d\u6dfb\u52a0 @Mapper \u6ce8\u89e3\uff0c\u9ed8\u8ba4\u4e0d\u542f\u7528","title":"baseConfig"},{"location":"grus/data/mybatis-enhance/#jdbcconnection","text":"\u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 driverClass \u9a71\u52a8\u7c7b \u662f jdbc \u9a71\u52a8\u7c7b\u5168\u8def\u5f84 host \u4e3b\u673a\u5730\u5740 \u662f \u6570\u636e\u5e93\u4e3b\u673a\u5730\u5740,\u5982\u975e\u9ed8\u8ba4\u7aef\u53e3 3306 \u9700\u5e26\u4e0a\u7aef\u53e3\u53f7 database \u6570\u636e\u5e93 \u662f \u6570\u636e\u5e93\u540d\u79f0 username \u7528\u6237\u540d \u662f \u6570\u636e\u5e93\u7528\u6237\u540d password \u5bc6\u7801 \u662f \u7528\u6237\u540d\u5bc6\u7801 tinyInt1isBit tinyint \u8f6c\u6362 \u5426 \u9ed8\u8ba4\u4e3a true, tinyint(1)\u7c7b\u578b\u8f6c Boolean; \u4e3a false \u65f6\uff0ctinyint(1)\u7c7b\u578b\u8f6c\u4e3a Integer","title":"jdbcConnection"},{"location":"grus/data/mybatis-enhance/#javamodelgenerator","text":"\u5b9e\u4f53\u5bf9\u8c61\u751f\u6210\u5668 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 targetPackage \u5305\u8def\u5f84 \u662f \u6587\u4ef6\u6240\u5728\u7684\u5305\u5168\u8def\u5f84(\u5c0f\u6570\u70b9\u5206\u9694\u7684\u5305\u540d) codePath \u4ee3\u7801\u5730\u5740 \u662f \u6587\u4ef6\u6240\u5728\u76f8\u5bf9\u9879\u76ee\u6839\u76ee\u5f55\u7684\u8def\u5f84 disabled \u662f\u5426\u7981\u7528 \u5426 \u7981\u7528\u65f6\uff0c\u5c06\u8df3\u8fc7\u6b64\u6a21\u5757\u751f\u6210 templatePath \u81ea\u5b9a\u4e49\u6a21\u677f\u8def\u5f84 \u5426 \u6a21\u677f\u8def\u5f84\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u9700\u653e\u4e8e resources \u4e0b\uff0c\u540c\u540d\u5373\u8986\u76d6\uff0c\u4e0d\u540c\u540d\u9700\u6307\u5b9a\u8def\u5f84 suffix \u81ea\u5b9a\u4e49\u540e\u7f00 \u5426 \u4e3a\u751f\u6210\u7684\u6a21\u5757\u6307\u5b9a\u56fa\u5b9a\u540e\u7f00\uff0c\u6b64\u5c5e\u6027\u5bf9 Entity \u4e0d\u751f\u6548\uff0cEntity \u81ea\u5b9a\u4e49\u540e\u7f00\u53c2\u8003 table \u6807\u7b7e \u6ce8\uff1a\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u4ee3\u7801\u6a21\u677f\uff0c\u9700\u8981\u4ece\u9ed8\u8ba4\u6a21\u677f\u590d\u5236\u4e00\u4efd\u5230\u672c\u5730\u9879\u76ee\u8fdb\u884c\u4fee\u6539\uff0c\u590d\u5236\u540e\u9009\u62e9**\u65e0\u683c\u5f0f\u7c98\u8d34**\uff0c\u5426\u5219\u683c\u5f0f\u4f1a\u6df7\u4e71 \u9ed8\u8ba4\u6a21\u677f\u6587\u4ef6\u8def\u5f84 entity templates/entity.java.ftl mapperXml templates/mapper.xml.ftl mapperJava templates/mapper.java.ftl service templates/service.java.ftl serviceImpl templates/serviceimpl.java.ftl controller templates/controller.java.ftl dto templates/dto.java.ftl","title":"javaModelGenerator"},{"location":"grus/data/mybatis-enhance/#sqlmapgenerator","text":"XMLMapper \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Mapper","title":"sqlMapGenerator"},{"location":"grus/data/mybatis-enhance/#javaclientgenerator","text":"JavaMapper \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Mapper","title":"javaClientGenerator"},{"location":"grus/data/mybatis-enhance/#servicegenerator","text":"Service \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Service","title":"serviceGenerator"},{"location":"grus/data/mybatis-enhance/#controllergenerator","text":"Controller \u751f\u6210\u5668\uff0c\u914d\u7f6e\u540c\u4e0a\uff0c\u9ed8\u8ba4\u540e\u7f00 Controller","title":"controllerGenerator"},{"location":"grus/data/mybatis-enhance/#dtogenerator","text":"controller \u5165\u53c2 dto \u7684\u751f\u6210\u5668\uff0c\u7528\u4e8e\u5bf9\u8c61\u8f6c\u6362\uff0c\u914d\u7f6e\u540c\u4e0a\u3002\u8be5\u5143\u7d20\u4f9d\u9644\u4e8e controllerGenerator\uff0c\u82e5\u751f\u6210 controller \u9700\u8981\u914d\u7f6e\u6b64\u9879\uff0c\u9ed8\u8ba4\u540e\u7f00 DTO \u3002","title":"dtoGenerator"},{"location":"grus/data/mybatis-enhance/#tables","text":"\u8981\u751f\u6210\u7684\u8868\u96c6\u5408 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 all \u662f\u5426\u6240\u6709\u8868 \u5426 \u4e3a true \u65f6\uff0c\u5c06\u8bfb\u53d6\u6570\u636e\u5e93\u6240\u6709\u8868, \u5c06\u5ffd\u7565\u5176\u6240\u6709 table \u5b50\u5143\u7d20 ignoreColumns \u5ffd\u7565\u7684\u5217 \u5426 \u6240\u6709\u8868\u9700\u8981\u5ffd\u7565\u7684\u5217 createTimeColumn \u521b\u5efa\u65f6\u95f4\u5b57\u6bb5 \u5426 \u9ed8\u8ba4\u4e3a timeCreated updateTimeColumn \u66f4\u65b0\u65f6\u95f4\u5b57\u6bb5 \u5426 \u9ed8\u8ba4\u4e3a timeModified entityObjectSuffix \u5b9e\u4f53\u540e\u7f00 \u5426 \u7ed9\u751f\u6210\u7684\u5b9e\u4f53\u52a0\u4e0a\u7edf\u4e00\u540e\u7f00, \u5982 DO -> UserDO table \u8981\u751f\u6210\u7684\u8868 \u5c5e\u6027 \u540d\u79f0 \u662f\u5426\u5fc5\u586b \u63cf\u8ff0 tableName \u8868\u540d \u662f \u8868\u540d entityObjectName \u5b9e\u4f53\u5bf9\u8c61\u540d \u5426 \u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4ee5\u8868\u540d\u5927\u5199\u9a7c\u5cf0\u4f5c\u4e3a\u5b9e\u4f53\u5bf9\u8c61\u540d ignoreColumns \u5ffd\u7565\u7684\u5217 \u5426 \u6b64\u8868\u9700\u8981\u5ffd\u7565\u7684\u5217 \u6ce8\uff1a \u5ffd\u7565\u7684\u5217\u5c06\u4e0d\u5728\u751f\u6210\u7684 Entity \u4e2d\u5c55\u793a\uff0c\u4e00\u822c\u4e3a\u4e0d\u9700\u8981\u64cd\u4f5c\u7684\u53ef\u7a7a\u5217\uff0c table \u7684 ignoreColumns \u5c5e\u6027\u4f1a\u7ee7\u627f tables \u7684 entityObjectSuffix \u548c entityObjectName \u90fd\u5b58\u5728\u65f6\uff0c\u751f\u6210\u7684\u5b9e\u4f53\u540d\u4e3a ${entityObjectName}${entityObjectSuffix}","title":"tables"},{"location":"grus/data/mybatis-enhance/#_9","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"grus/data/mybatis-enhance/#tinyint1","text":"1 \u4e2a\u957f\u5ea6\u7684 tinyint \u4e3a\u4ec0\u4e48\u8f6c\u4e3a Boolean \u7c7b\u578b\u800c\u4e0d\u662f Integer\uff1f Mysql \u5b98\u65b9\u53c2\u8003\u6587\u6863\u5173\u4e8e\u5e03\u5c14\u7c7b\u578b\u7684\u8bf4\u660e\uff1aBOO, BOOLEAN These types are synonyms(\u540c\u4e49\u8bcd) for TINYINT(1). A value of zero is considered(\u8ba4\u4e3a\u662f) false. Nonzero(\u4e0d\u4e3a 0) values are considered true. \u89e3\u51b3\u65b9\u6cd5\uff1a \u5982\u679c\u9700\u8981\u5c06 tinyint(1)\u8f6c\u4e3a Integer \u7c7b\u578b\u9700\u8981\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d jdbcConnection \u7684 tinyInt1isBit \u5c5e\u6027\u663e\u5f0f\u8bbe\u7f6e\u4e3a false \u5c06\u6570\u636e\u8868 tinyint(1)\u6539\u4e3a tinyint(2) \u6ce8\uff1atinyint(1) \u5982\u679c\u52a0\u4e86 unsigned \u5219 jdbc \u8bfb\u53d6\u5230\u7684\u957f\u5ea6\u662f 3\uff0c\u5bf9\u5e94\u8f6c\u6362\u4e3a Integer \u7c7b\u578b","title":"TINYINT(1)\u7c7b\u578b"},{"location":"grus/data/mybatis-enhance/#_10","text":"Mapped Statements collection already contains value for java . lang . IllegalArgumentException : Mapped Statements collection already contains value for xxx . XxMapper . xxMethod \u539f\u56e0\uff1a Mapper \u7ee7\u627f\u4e86 BaseMapper \u4e4b\u540e\uff0c\u5982\u679c\u5728 Mapper \u4e2d\u91cd\u8f7d\u4e86 BaseMapper \u4e2d\u7684\u65b9\u6cd5\uff0c\u5728\u5e94\u7528\u542f\u52a8\u65f6\u4f1a\u51fa\u73b0\u5982\u4e0a\u5f02\u5e38\uff1b Xml Mapper \u4e2d\u5b9a\u4e49\u4e86\u4e0e BaseMapper \u540c\u540d sql \u7684 id \u89e3\u51b3\uff1a\u91cd\u547d\u540d\u8be5\u65b9\u6cd5 No qualifying bean of type NoSuchBeanDefinitionException : No qualifying bean of type ' com . ciicgat . sdk . data . mybatis . generator . template . BaseMapper < xxx . Xxx > ' available : expected at least 1 bean which qualifies as autowire candidate . Dependency annotations : { @org.springframework.beans.factory.annotation.Autowired ( required = true ) \u539f\u56e0\uff1aMapper \u6240\u5728\u7684\u5305\u672a\u88ab\u626b\u63cf\u5230 \u89e3\u51b3\uff1a\u5c06\u5176\u914d\u7f6e\u5230 Application.java \u7684 @MapperScan \u4e2d Invalid bound statement (not found) org . apache . ibatis . binding . BindingException : Invalid bound statement ( not found ): xx . XxxService . xxMethod \u539f\u56e0\uff1a Mapper Xml \u6587\u4ef6\u672a\u88ab\u626b\u63cf Mapper Xml \u4e2d\u65e0\u5bf9\u5e94\u65b9\u6cd5 Mapper Xml \u4e0e Mapper \u7684 ResultType \u4e0d\u4e00\u81f4 MapperScan \u672a\u76f4\u63a5\u914d\u7f6e Mapper \u7684\u5305\uff0c\u53ef\u80fd\u53ea\u914d\u7f6e\u4e86 Mapper \u7684\u7236\u5305 \u89e3\u51b3\uff1a application.properties \u4e2d\u914d\u7f6e xml \u8def\u5f84 \u5982: mybatis.mapper-locations=classpath*:mapper/*.xml \u68c0\u67e5\u5e76\u52a0\u5165\u5bf9\u5e94\u65b9\u6cd5 \u68c0\u67e5\u5e76\u4f7f\u5176\u4e00\u81f4 \u914d\u7f6e @MapperScan \u5230\u5177\u4f53\u7684 Mapper \u6240\u5728\u7684\u5305\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a mapper \u5305\u53ef\u8003\u8651\u4f7f\u7528\u901a\u914d\u7b26 BaseMapper could not be found Field baseMapper in com . ciicgat . sdk . data . mybatis . generator . template . BaseServiceImpl required a bean of type ' com . ciicgat . sdk . data . mybatis . generator . template . BaseMapper ' that could not be found . \u539f\u56e0\uff1a\u53ea\u7ee7\u627f\u4e86 BaseService \u6ca1\u6709\u7ee7\u627f BaseMapper \u89e3\u51b3\uff1a\u5bf9\u5e94\u7684 Mapper \u9700\u7ee7\u627f BaseMapper","title":"\u5e38\u89c1\u5f02\u5e38"},{"location":"grus/data/mybatis-pagehelper/","text":"Mybatis \u5206\u9875\u63d2\u4ef6 \u00b6 \u76ee\u7684 \u00b6 grus \u6846\u67b6\u5bf9 mybatis \u5206\u9875\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u57fa\u4e8e PageHelper \uff0c GAV \u5982\u4e0b\uff0c\u9ed8\u8ba4**\u5f15\u5165\u5219\u542f\u7528**\u3002 <dependency> <artifactId> grus-boot-starter-pagehelper </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u5e38\u7528\u7684 grus-boot-starter-server-service \u5df2\u5f15\u5165\u4e0a\u9762\u7684 GAV \uff0c\u81ea\u52a8\u542f\u7528\uff0c\u65e0\u9700\u518d\u5f15\u5165\u3002 \u4f7f\u7528\u9700\u77e5 \u00b6 \u5206\u9875\u63d2\u4ef6 PageHelper \u4ecb\u7ecd \u4f20\u9001\u95e8 \u3002 PageHelper \u4f7f\u7528\u8bf4\u660e \u5982\u4f55\u4f7f\u7528 \u3002 PageHelper \u5b89\u5168\u8c03\u7528 \u4f20\u9001\u95e8 \u5982\u4f55\u7981\u7528 \u00b6 \u5982\u679c\u9879\u76ee\u4e2d\u5df2\u7ecf\u4f7f\u7528\u4e86 PageHelper \u63d2\u4ef6\uff0c\u4e0e GrusPageHelperAutoConfiguration \u4e2d\u81ea\u52a8\u6ce8\u5165\u7684 PageInterceptor \u51b2\u7a81\uff0c\u6216\u8005\u56e0 PageInterceptor \u63d2\u4ef6\u5f15\u5165\u5bfc\u81f4\u67d0\u4e9b\u6b63\u5e38\u67e5\u8be2\u62a5\u9519\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u5173\u95ed\uff0c\u5982\u4e0b\uff1a grus.pagehelper.enabled = false \u914d\u7f6e\u53c2\u6570\u5dee\u5f02\u5316\u5bf9\u6bd4 \u00b6 PageHelper \u63d2\u4ef6 \u53c2\u6570\u5168\u90e8\u76f8\u540c\uff0c\u524d\u7f00\u4e0d\u540c\uff0c\u4e2a\u522b\u53c2\u6570\u9ed8\u8ba4\u503c\u4e0d\u540c\u3002 PageHelper Grus-PageHelper \u53c2\u6570\u524d\u7f00 pagehelper grus.pagehelper helperDialect \u81ea\u52a8\u68c0\u6d4b mysql supportMethodsArguments false true autoRuntimeDialect false true helperDialect \u5206\u9875\u63d2\u4ef6\u4f1a\u81ea\u52a8\u68c0\u6d4b\u5f53\u524d\u7684\u6570\u636e\u5e93\u94fe\u63a5\uff0c\u9009\u62e9\u5408\u9002\u7684\u5206\u9875\u65b9\u5f0f\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u6307\u5b9a\u5206\u9875\u63d2\u4ef6\u4f7f\u7528\u54ea\u79cd\u65b9\u8a00\u3002\u914d\u7f6e\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u7f29\u5199\u503c\uff1a oracle , mysql , mariadb , sqlite , hsqldb , postgresql , db2 , sqlserver , informix , h2 , sqlserver2012 , derby supportMethodsArguments \u652f\u6301\u901a\u8fc7 Mapper \u63a5\u53e3\u53c2\u6570\u6765\u4f20\u9012\u5206\u9875\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c false \uff0c\u5206\u9875\u63d2\u4ef6\u4f1a\u4ece\u67e5\u8be2\u65b9\u6cd5\u7684\u53c2\u6570\u503c\u4e2d\uff0c\u81ea\u52a8\u6839\u636e params \uff08PageHelper \u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\uff09 \u53d6\u503c\uff0c\u67e5\u627e\u5230\u5408\u9002\u7684\u503c\u65f6\u5c31\u4f1a\u53c2\u4e0e\u5206\u9875\u3002\u53ef\u4ee5\u914d\u7f6e pageNum,pageSize,count,pageSizeZero,reasonable \uff0c\u9ed8\u8ba4\u503c\u4e3a pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero autoRuntimeDialect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6839\u636e\u591a\u6570\u636e\u6e90\u81ea\u52a8\u8bc6\u522b\u5bf9\u5e94\u65b9\u8a00\u7684\u5206\u9875 \uff08\u4e0d\u652f\u6301\u81ea\u52a8\u9009\u62e9 sqlserver2012 \uff0c\u53ea\u80fd\u4f7f\u7528 sqlserver \uff09 \u7b80\u5355\u4f7f\u7528\u793a\u4f8b \u00b6 Lambda \u5199\u6cd5\uff08\u63a8\u8350\uff09 \u00b6 \u8fd9\u91cc\u53ea\u8bb2\u89e3\u63a8\u8350\u7684\u5199\u6cd5\uff0c\u53e6\u5916\u7684\u65b9\u5f0f\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863 Page < User > page = PageHelper . startPage ( 1 , 10 ). doSelectPage (() -> userMapper . selectGroupBy ()); // \u603b\u6570\u91cf long totalCount = page . getTotal (); List < User > userList = page . getList (); // count \u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684 count \u6570\uff0c\u6ce8\u610f\u4e0d\u8981\u6709\u7275\u626f\u5230\u6570\u91cf\u7684 order by total = PageHelper . count (() -> userMapper . selectLike ( user )); // \u7d27\u8ddf\u5728 PageHelper.startPage \u65b9\u6cd5\u540e\u7684\u7b2c\u4e00\u4e2a Mybatis \u7684\u67e5\u8be2\uff08Select\uff09\u65b9\u6cd5\u4f1a\u88ab\u5206\u9875 // \u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u4ee5\uff0c\u4f46\u66f4\u63a8\u8350\u4e0a\u9762\u7684\u90a3\u79cd\uff0c\u4ece list \u83b7\u53d6\u5206\u9875\u5bf9\u8c61\u7684\u65b9\u5f0f\u89c1\u540e\u9762 PageHelper . startPage ( 1 , 10 ); List < User > list = userMapper . selectIf ( 1 ); count \u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684 count \u6570\uff0c\u6ce8\u610f\u4e0d\u8981\u6709\u7275\u626f\u5230\u6570\u91cf\u7684 order by\uff0cPageHelper \u4f1a\u81ea\u52a8\u8fc7\u6ee4\u6389 order by \u7684\u6761\u4ef6\uff0c\u8be6\u60c5\u89c1\u4e0b\u6587\u7684 \u624b\u5199 count \u67e5\u8be2 \u6b63\u5e38\u6211\u4eec\u7528\u4e0d\u5230 Page \u4e2d\u90a3\u4e48\u591a\u53c2\u6570\uff0c\u5efa\u8bae\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a PageSerializable < User > page = PageHelper . startPage ( 1 , 10 ). doSelectPageSerializable (() -> userMapper . selectGroupBy ()); long totalCount = page . getTotal (); List < User > userList = page . getList (); setOrderBy \u00b6 \u652f\u6301\u81ea\u52a8\u62fc\u63a5 order by\uff0c\u6b64\u65f6 sql.xml \u4e2d\u4e0d\u5e94\u8be5\u6709 order by \u5185\u5bb9\uff0c\u5199\u6cd5\u5982\u4e0b\uff1a PageSerializable < User > page = PageHelper . startPage ( 1 , 10 ). setOrderBy ( \"id desc\" ). doSelectPageSerializable (() -> userMapper . selectGroupBy ()); \u624b\u5199 count \u67e5\u8be2 \u00b6 PageHelper \u9ed8\u8ba4\u7684 count \u67e5\u8be2\uff0c\u4f1a\u5ffd\u7565\u6389 order by\uff0c\u9488\u5bf9\u67d0\u4e9b\u7279\u6b8a\u4e1a\u52a1\u7684\u7edf\u8ba1\uff0c\u6709\u53ef\u80fd\u4f1a\u4ea7\u751f\u95ee\u9898\u3002\u4f7f\u7528\u65f6\uff0c\u8bf7\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\uff01\uff01 \u67d0\u4e9b\u4e1a\u52a1\u573a\u666f\uff0c\u5206\u9875\u65f6\uff0c\u5e0c\u671b\u624b\u5199 count \u7684 sql\uff08\u63d0\u9ad8\u6027\u80fd\uff09 \u6216\u8005 sql \u4e2d\u6709\u5f71\u54cd\u884c\u6570\u7edf\u8ba1\u7684 order by\uff08PageHelper count \u67e5\u8be2\u65f6\u4f1a\u81ea\u52a8\u8fc7\u6ee4 order by \u67e5\u8be2\u6761\u4ef6\uff09\uff0c\u4f1a\u5f71\u54cd\u7edf\u8ba1\u7684\u603b\u884c\u6570\uff0cPageHelper \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u624b\u5199 count sql\uff08\u63a8\u8350\uff09 \u8fd9\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5728 sql.xml \u4e2d\u6dfb\u52a0\u8be5 msId \u5bf9\u5e94\u7684 count \u5199\u6cd5\u5373\u53ef\u3002\u5206\u9875\u63d2\u4ef6\u4f1a\u4f18\u5148\u901a\u8fc7\u5f53\u524d\u67e5\u8be2\u7684 msId + countSuffix \u67e5\u627e\u624b\u5199\u7684\u5206\u9875\u67e5\u8be2\u3002\uff08 countSuffix \u9ed8\u8ba4\u4e3a _COUNT \uff09\u793a\u4f8b\u5982\u4e0b\uff1a <select id= \"selectLeftjoin\" resultType= \"com.github.pagehelper.model.User\" > select a.id,b.name,a.py from user a left join user b on a.id = b.id order by a.id </select> <select id= \"selectLeftjoin_COUNT\" resultType= \"Long\" > select count(distinct a.id) from user a left join user b on a.id = b.id </select> sql \u6dfb\u52a0\u6807\u8bb0 select a . id , b . name , a . py from user a left join user b on a . id = b . id /*keep orderby*/ order by a . id \u5c06 /*keep orderby*/ \u52a0\u5728\u9700\u8981 orderby \u6761\u4ef6\u7684\u524d\u9762 Reasonable \u00b6 \u6709\u4e9b\u573a\u666f\u5e0c\u671b\u5206\u9875\u67e5\u8be2\u65f6\uff0c\u5e0c\u671b pageNum<=0 \u65f6\u4f1a\u67e5\u8be2\u7b2c\u4e00\u9875\uff0c pageNum>pages \uff08\u8d85\u8fc7\u603b\u6570\u65f6\uff09\uff0c\u4f1a\u9ed8\u8ba4\u67e5\u8be2\u6700\u540e\u4e00\u9875\u3002\u53ef\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\uff1a PageInfo < Object > pageInfo = PageHelper . startPage ( 1 , 10 ). setReasonable ( true ). doSelectPageInfo (() -> exchangeRecordMapper . findByEnterprise ( copy )); // \u5b9e\u9645\u9875\u7801 int pageNum = pageInfo . getPageNum (); // \u5b9e\u9645\u9875\u6570 int pages = pageInfo . getPages (); \u9664\u4e86\u6307\u5b9a\u67d0\u4e2a\u8bed\u53e5\u5916\uff0c\u4e5f\u652f\u6301\u7edf\u4e00\u914d\u7f6e\uff08\u4e0d\u63a8\u8350\uff09\uff1a grus.pagehelper.reasonable = true \u53c2\u6570\u65b9\u6cd5/\u5bf9\u8c61\u8c03\u7528 \u00b6 grus.pagehelper.supportMethodsArguments=true \u65f6\uff0c\u8be5\u5199\u6cd5\u624d\u53ef\u4ee5\u751f\u6548\uff08\u524d\u9762\u7684\u5199\u6cd5\u4e0d\u4f9d\u8d56\u6b64\u914d\u7f6e\uff09\u3002 \u5e76\u4e0d\u63a8\u8350\u8fd9\u79cd\u65b9\u5f0f\uff0c\u9664\u4e86\u9700\u8981\u66f4\u591a\u7684\u914d\u7f6e\u5916\uff0c\u8fd8\u5bb9\u6613\u4ea7\u751f\u4e00\u4e9b\u4f7f\u7528\u4e0d\u5f53\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u7f57\u5217\u4e0b\u6709\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7ed9\u4ecd\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u9879\u76ee\u63d0\u4f9b\u4e0b demo\u3002 \u53c2\u6570\u65b9\u6cd5\u8c03\u7528\uff0c\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 //\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 public interface CountryMapper { List < User > selectByPageNumSize ( @Param ( \"user\" ) User user , @Param ( \"pageNum\" ) int pageNum , @Param ( \"pageSize\" ) int pageSize ); } //\u914d\u7f6e supportMethodsArguments=true //\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u8c03\u7528\uff1a List < User > list = userMapper . selectByPageNumSize ( user , 1 , 10 ); \u53c2\u6570\u5bf9\u8c61\uff0c\u5982\u679c pageNum \u548c pageSize \u5b58\u5728\u4e8e \u67e5\u8be2\u53c2\u6570 \u5bf9\u8c61\u4e2d\uff0c\u53ea\u8981\u53c2\u6570\u6709\u503c\uff0c\u4e5f\u4f1a\u88ab\u5206\u9875 //\u5982\u679c pageNum \u548c pageSize \u5b58\u5728\u4e8e User \u5bf9\u8c61\u4e2d\uff0c\u53ea\u8981\u53c2\u6570\u6709\u503c\uff0c\u4e5f\u4f1a\u88ab\u5206\u9875 //\u6709\u5982\u4e0b User \u5bf9\u8c61 public class User { //\u5176\u4ed6fields //\u4e0b\u9762\u4e24\u4e2a\u53c2\u6570\u540d\u548c params \u914d\u7f6e\u7684\u540d\u5b57\u4e00\u81f4 private Integer pageNum ; private Integer pageSize ; } //\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 public interface CountryMapper { List < User > selectByPageNumSize ( User user ); } //\u5f53 user \u4e2d\u7684 pageNum!= null && pageSize!= null \u65f6\uff0c\u4f1a\u81ea\u52a8\u5206\u9875 List < User > list = userMapper . selectByPageNumSize ( user ); \u4ece list \u53d6\u5206\u9875\u5bf9\u8c61 //\u7528PageInfo\u5bf9\u7ed3\u679c\u8fdb\u884c\u5305\u88c5 PageInfo page = new PageInfo ( list ); //\u6d4b\u8bd5PageInfo\u5168\u90e8\u5c5e\u6027 //PageInfo\u5305\u542b\u4e86\u975e\u5e38\u5168\u9762\u7684\u5206\u9875\u5c5e\u6027 assertEquals ( 1 , page . getPageNum ()); assertEquals ( 10 , page . getPageSize ()); assertEquals ( 1 , page . getStartRow ()); assertEquals ( 10 , page . getEndRow ()); assertEquals ( 183 , page . getTotal ()); assertEquals ( 19 , page . getPages ()); assertEquals ( 1 , page . getFirstPage ()); assertEquals ( 8 , page . getLastPage ()); assertEquals ( true , page . isFirstPage ()); assertEquals ( false , page . isLastPage ()); assertEquals ( false , page . isHasPreviousPage ()); assertEquals ( true , page . isHasNextPage ()); @Param(\"pageNum\") int pageNum \u4e2d\u7684\u547d\u540d\u53ef\u4ee5\u6839\u636e grus.pagehelper.params \u914d\u7f6e\uff0c\u66f4\u591a\u4f7f\u7528\u65b9\u5f0f\u8bf7\u53c2\u7167 \u6587\u6863 \u3002 \u6ce8\u610f\u4e8b\u9879 \u00b6 PageHelper.startPage \u65b9\u6cd5\u91cd\u8981\u63d0\u793a \u53ea\u6709\u7d27\u8ddf\u5728 PageHelper.startPage \u65b9\u6cd5\u540e\u7684 \u7b2c\u4e00\u4e2a Mybatis \u7684 \u67e5\u8be2\uff08Select\uff09 \u65b9\u6cd5\u4f1a\u88ab\u5206\u9875\u3002 PageHelper \u9ed8\u8ba4\u7684 count \u4f1a\u53bb\u9664 order by PageHelper \u9ed8\u8ba4\u4f1a\u53bb\u9664\u81ea\u5df1\u5199\u7684 count \u8bed\u53e5\u4e2d\u7684 order by \u5b57\u6bb5\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u7edf\u8ba1\u7684\u603b\u6570\u4e0d\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7\u5728 sql \u8bed\u53e5\u4e2d\u6dfb\u52a0 /*keep orderby*/ \u6ce8\u91ca\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u6216\u8005\u901a\u8fc7\u624b\u5199 count \u89e3\u51b3\u3002 \u8bf7\u4e0d\u8981\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6 \u8bf7\u4e0d\u8981\u5728\u7cfb\u7edf\u4e2d\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6(\u4f7f\u7528 Spring \u65f6\uff0c mybatis-config.xml \u548c Spring<bean> \u914d\u7f6e\u65b9\u5f0f\uff0c\u8bf7\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\uff0c\u4e0d\u8981\u540c\u65f6\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6)\uff01 \u5206\u9875\u63d2\u4ef6\u4e0d\u652f\u6301\u5e26\u6709 for update \u8bed\u53e5\u7684\u5206\u9875 \u5bf9\u4e8e\u5e26\u6709 for update \u7684 sql\uff0c\u4f1a\u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684 sql \u5efa\u8bae\u624b\u52a8\u5206\u9875\uff0c\u6bd5\u7adf\u8fd9\u6837\u7684 sql \u9700\u8981\u91cd\u89c6\u3002 \u5206\u9875\u63d2\u4ef6\u4e0d\u652f\u6301\u5d4c\u5957\u7ed3\u679c\u6620\u5c04 \u7531\u4e8e\u5d4c\u5957\u7ed3\u679c\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u7ed3\u679c\u96c6\u88ab\u6298\u53e0\uff0c\u56e0\u6b64\u5206\u9875\u67e5\u8be2\u7684\u7ed3\u679c\u5728\u6298\u53e0\u540e\u603b\u6570\u4f1a\u51cf\u5c11\uff0c\u6240\u4ee5\u65e0\u6cd5\u4fdd\u8bc1\u5206\u9875\u7ed3\u679c\u6570\u91cf\u6b63\u786e\u3002 \u53c2\u6570\u8c03\u7528\u6ce8\u610f \u00b6 \u5bf9\u8c61\u8fd8\u6709\u6210\u5458\u53d8\u91cf orderBy \u5f53\u53c2\u6570\u5bf9\u8c61\u4e2d\u6709\u6210\u5458\u53d8\u91cf orderBy \uff0c PageInterceptor \u63d2\u4ef6\u4f1a\u5728\u62e6\u622a\u7684\u8fc7\u7a0b\u4e2d\u505a\u62fc\u63a5\u6392\u5e8f\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u6700\u7ec8\u6267\u884c\u7684 sql \u6700\u540e\u9762\u4f1a\u591a order by xxx \u3002\u8fd9\u662f PageInterceptor \u63d2\u4ef6\u63d0\u4f9b\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u53ef\u914d\u5408\u5206\u9875\u53c2\u6570\u4e00\u8d77\u4f7f\u7528\u3002 \u7531\u4e8e grus-boot-starter-server-service \u9ed8\u8ba4\u4f9d\u8d56 grus-boot-starter-pagehelper \uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u4f9d\u8d56 grus-boot-starter-server-service \u5c31\u9ed8\u8ba4\u96c6\u6210\u4e86\u5206\u9875\u529f\u80fd\uff0c\u5c31\u4f1a\u5bfc\u81f4\u53c2\u6570\u5bf9\u8c61\u5305\u542b orderBy \u6210\u5458\u53d8\u91cf\u7684\u67e5\u8be2\u65b9\u6cd5\u62a5\u9519\u3002\u5982\u679c\u51fa\u73b0\u6b64\u60c5\u51b5\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u89e3\u51b3\uff1a \u4f7f\u7528\u5206\u9875\u63d2\u4ef6\u529f\u80fd\uff0c\u4fee\u6539 xml \u91cc\u9762\u7684 sql \u914d\u7f6e grus.pagehelper.enabled=false \uff0c\u7981\u7528 PageInterceptor \u63d2\u4ef6 \u4fee\u6539 orderBy \u6210\u5458\u53d8\u91cf\u540d\u4e3a\u5176\u4ed6 \u914d\u7f6e\u53c2\u6570\u91cd\u8981\u63d0\u793a \u5f53 offsetAsPageNum=false \u7684\u65f6\u5019\uff0c\u7531\u4e8e PageNum \u95ee\u9898\uff0c RowBounds \u67e5\u8be2\u7684\u65f6\u5019 reasonable \u4f1a\u5f3a\u5236\u4e3a false \u3002\u4f7f\u7528 PageHelper.startPage \u65b9\u6cd5\u4e0d\u53d7\u5f71\u54cd\u3002","title":"Mybatis\u5206\u9875\u63d2\u4ef6"},{"location":"grus/data/mybatis-pagehelper/#mybatis","text":"","title":"Mybatis \u5206\u9875\u63d2\u4ef6"},{"location":"grus/data/mybatis-pagehelper/#_1","text":"grus \u6846\u67b6\u5bf9 mybatis \u5206\u9875\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u57fa\u4e8e PageHelper \uff0c GAV \u5982\u4e0b\uff0c\u9ed8\u8ba4**\u5f15\u5165\u5219\u542f\u7528**\u3002 <dependency> <artifactId> grus-boot-starter-pagehelper </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u5e38\u7528\u7684 grus-boot-starter-server-service \u5df2\u5f15\u5165\u4e0a\u9762\u7684 GAV \uff0c\u81ea\u52a8\u542f\u7528\uff0c\u65e0\u9700\u518d\u5f15\u5165\u3002","title":"\u76ee\u7684"},{"location":"grus/data/mybatis-pagehelper/#_2","text":"\u5206\u9875\u63d2\u4ef6 PageHelper \u4ecb\u7ecd \u4f20\u9001\u95e8 \u3002 PageHelper \u4f7f\u7528\u8bf4\u660e \u5982\u4f55\u4f7f\u7528 \u3002 PageHelper \u5b89\u5168\u8c03\u7528 \u4f20\u9001\u95e8","title":"\u4f7f\u7528\u9700\u77e5"},{"location":"grus/data/mybatis-pagehelper/#_3","text":"\u5982\u679c\u9879\u76ee\u4e2d\u5df2\u7ecf\u4f7f\u7528\u4e86 PageHelper \u63d2\u4ef6\uff0c\u4e0e GrusPageHelperAutoConfiguration \u4e2d\u81ea\u52a8\u6ce8\u5165\u7684 PageInterceptor \u51b2\u7a81\uff0c\u6216\u8005\u56e0 PageInterceptor \u63d2\u4ef6\u5f15\u5165\u5bfc\u81f4\u67d0\u4e9b\u6b63\u5e38\u67e5\u8be2\u62a5\u9519\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u5173\u95ed\uff0c\u5982\u4e0b\uff1a grus.pagehelper.enabled = false","title":"\u5982\u4f55\u7981\u7528"},{"location":"grus/data/mybatis-pagehelper/#_4","text":"PageHelper \u63d2\u4ef6 \u53c2\u6570\u5168\u90e8\u76f8\u540c\uff0c\u524d\u7f00\u4e0d\u540c\uff0c\u4e2a\u522b\u53c2\u6570\u9ed8\u8ba4\u503c\u4e0d\u540c\u3002 PageHelper Grus-PageHelper \u53c2\u6570\u524d\u7f00 pagehelper grus.pagehelper helperDialect \u81ea\u52a8\u68c0\u6d4b mysql supportMethodsArguments false true autoRuntimeDialect false true helperDialect \u5206\u9875\u63d2\u4ef6\u4f1a\u81ea\u52a8\u68c0\u6d4b\u5f53\u524d\u7684\u6570\u636e\u5e93\u94fe\u63a5\uff0c\u9009\u62e9\u5408\u9002\u7684\u5206\u9875\u65b9\u5f0f\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u6307\u5b9a\u5206\u9875\u63d2\u4ef6\u4f7f\u7528\u54ea\u79cd\u65b9\u8a00\u3002\u914d\u7f6e\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u7f29\u5199\u503c\uff1a oracle , mysql , mariadb , sqlite , hsqldb , postgresql , db2 , sqlserver , informix , h2 , sqlserver2012 , derby supportMethodsArguments \u652f\u6301\u901a\u8fc7 Mapper \u63a5\u53e3\u53c2\u6570\u6765\u4f20\u9012\u5206\u9875\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c false \uff0c\u5206\u9875\u63d2\u4ef6\u4f1a\u4ece\u67e5\u8be2\u65b9\u6cd5\u7684\u53c2\u6570\u503c\u4e2d\uff0c\u81ea\u52a8\u6839\u636e params \uff08PageHelper \u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\uff09 \u53d6\u503c\uff0c\u67e5\u627e\u5230\u5408\u9002\u7684\u503c\u65f6\u5c31\u4f1a\u53c2\u4e0e\u5206\u9875\u3002\u53ef\u4ee5\u914d\u7f6e pageNum,pageSize,count,pageSizeZero,reasonable \uff0c\u9ed8\u8ba4\u503c\u4e3a pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero autoRuntimeDialect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6839\u636e\u591a\u6570\u636e\u6e90\u81ea\u52a8\u8bc6\u522b\u5bf9\u5e94\u65b9\u8a00\u7684\u5206\u9875 \uff08\u4e0d\u652f\u6301\u81ea\u52a8\u9009\u62e9 sqlserver2012 \uff0c\u53ea\u80fd\u4f7f\u7528 sqlserver \uff09","title":"\u914d\u7f6e\u53c2\u6570\u5dee\u5f02\u5316\u5bf9\u6bd4"},{"location":"grus/data/mybatis-pagehelper/#_5","text":"","title":"\u7b80\u5355\u4f7f\u7528\u793a\u4f8b"},{"location":"grus/data/mybatis-pagehelper/#lambda","text":"\u8fd9\u91cc\u53ea\u8bb2\u89e3\u63a8\u8350\u7684\u5199\u6cd5\uff0c\u53e6\u5916\u7684\u65b9\u5f0f\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863 Page < User > page = PageHelper . startPage ( 1 , 10 ). doSelectPage (() -> userMapper . selectGroupBy ()); // \u603b\u6570\u91cf long totalCount = page . getTotal (); List < User > userList = page . getList (); // count \u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684 count \u6570\uff0c\u6ce8\u610f\u4e0d\u8981\u6709\u7275\u626f\u5230\u6570\u91cf\u7684 order by total = PageHelper . count (() -> userMapper . selectLike ( user )); // \u7d27\u8ddf\u5728 PageHelper.startPage \u65b9\u6cd5\u540e\u7684\u7b2c\u4e00\u4e2a Mybatis \u7684\u67e5\u8be2\uff08Select\uff09\u65b9\u6cd5\u4f1a\u88ab\u5206\u9875 // \u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u4ee5\uff0c\u4f46\u66f4\u63a8\u8350\u4e0a\u9762\u7684\u90a3\u79cd\uff0c\u4ece list \u83b7\u53d6\u5206\u9875\u5bf9\u8c61\u7684\u65b9\u5f0f\u89c1\u540e\u9762 PageHelper . startPage ( 1 , 10 ); List < User > list = userMapper . selectIf ( 1 ); count \u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684 count \u6570\uff0c\u6ce8\u610f\u4e0d\u8981\u6709\u7275\u626f\u5230\u6570\u91cf\u7684 order by\uff0cPageHelper \u4f1a\u81ea\u52a8\u8fc7\u6ee4\u6389 order by \u7684\u6761\u4ef6\uff0c\u8be6\u60c5\u89c1\u4e0b\u6587\u7684 \u624b\u5199 count \u67e5\u8be2 \u6b63\u5e38\u6211\u4eec\u7528\u4e0d\u5230 Page \u4e2d\u90a3\u4e48\u591a\u53c2\u6570\uff0c\u5efa\u8bae\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a PageSerializable < User > page = PageHelper . startPage ( 1 , 10 ). doSelectPageSerializable (() -> userMapper . selectGroupBy ()); long totalCount = page . getTotal (); List < User > userList = page . getList ();","title":"Lambda \u5199\u6cd5\uff08\u63a8\u8350\uff09"},{"location":"grus/data/mybatis-pagehelper/#setorderby","text":"\u652f\u6301\u81ea\u52a8\u62fc\u63a5 order by\uff0c\u6b64\u65f6 sql.xml \u4e2d\u4e0d\u5e94\u8be5\u6709 order by \u5185\u5bb9\uff0c\u5199\u6cd5\u5982\u4e0b\uff1a PageSerializable < User > page = PageHelper . startPage ( 1 , 10 ). setOrderBy ( \"id desc\" ). doSelectPageSerializable (() -> userMapper . selectGroupBy ());","title":"setOrderBy"},{"location":"grus/data/mybatis-pagehelper/#count","text":"PageHelper \u9ed8\u8ba4\u7684 count \u67e5\u8be2\uff0c\u4f1a\u5ffd\u7565\u6389 order by\uff0c\u9488\u5bf9\u67d0\u4e9b\u7279\u6b8a\u4e1a\u52a1\u7684\u7edf\u8ba1\uff0c\u6709\u53ef\u80fd\u4f1a\u4ea7\u751f\u95ee\u9898\u3002\u4f7f\u7528\u65f6\uff0c\u8bf7\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\uff01\uff01 \u67d0\u4e9b\u4e1a\u52a1\u573a\u666f\uff0c\u5206\u9875\u65f6\uff0c\u5e0c\u671b\u624b\u5199 count \u7684 sql\uff08\u63d0\u9ad8\u6027\u80fd\uff09 \u6216\u8005 sql \u4e2d\u6709\u5f71\u54cd\u884c\u6570\u7edf\u8ba1\u7684 order by\uff08PageHelper count \u67e5\u8be2\u65f6\u4f1a\u81ea\u52a8\u8fc7\u6ee4 order by \u67e5\u8be2\u6761\u4ef6\uff09\uff0c\u4f1a\u5f71\u54cd\u7edf\u8ba1\u7684\u603b\u884c\u6570\uff0cPageHelper \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u624b\u5199 count sql\uff08\u63a8\u8350\uff09 \u8fd9\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5728 sql.xml \u4e2d\u6dfb\u52a0\u8be5 msId \u5bf9\u5e94\u7684 count \u5199\u6cd5\u5373\u53ef\u3002\u5206\u9875\u63d2\u4ef6\u4f1a\u4f18\u5148\u901a\u8fc7\u5f53\u524d\u67e5\u8be2\u7684 msId + countSuffix \u67e5\u627e\u624b\u5199\u7684\u5206\u9875\u67e5\u8be2\u3002\uff08 countSuffix \u9ed8\u8ba4\u4e3a _COUNT \uff09\u793a\u4f8b\u5982\u4e0b\uff1a <select id= \"selectLeftjoin\" resultType= \"com.github.pagehelper.model.User\" > select a.id,b.name,a.py from user a left join user b on a.id = b.id order by a.id </select> <select id= \"selectLeftjoin_COUNT\" resultType= \"Long\" > select count(distinct a.id) from user a left join user b on a.id = b.id </select> sql \u6dfb\u52a0\u6807\u8bb0 select a . id , b . name , a . py from user a left join user b on a . id = b . id /*keep orderby*/ order by a . id \u5c06 /*keep orderby*/ \u52a0\u5728\u9700\u8981 orderby \u6761\u4ef6\u7684\u524d\u9762","title":"\u624b\u5199 count \u67e5\u8be2"},{"location":"grus/data/mybatis-pagehelper/#reasonable","text":"\u6709\u4e9b\u573a\u666f\u5e0c\u671b\u5206\u9875\u67e5\u8be2\u65f6\uff0c\u5e0c\u671b pageNum<=0 \u65f6\u4f1a\u67e5\u8be2\u7b2c\u4e00\u9875\uff0c pageNum>pages \uff08\u8d85\u8fc7\u603b\u6570\u65f6\uff09\uff0c\u4f1a\u9ed8\u8ba4\u67e5\u8be2\u6700\u540e\u4e00\u9875\u3002\u53ef\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\uff1a PageInfo < Object > pageInfo = PageHelper . startPage ( 1 , 10 ). setReasonable ( true ). doSelectPageInfo (() -> exchangeRecordMapper . findByEnterprise ( copy )); // \u5b9e\u9645\u9875\u7801 int pageNum = pageInfo . getPageNum (); // \u5b9e\u9645\u9875\u6570 int pages = pageInfo . getPages (); \u9664\u4e86\u6307\u5b9a\u67d0\u4e2a\u8bed\u53e5\u5916\uff0c\u4e5f\u652f\u6301\u7edf\u4e00\u914d\u7f6e\uff08\u4e0d\u63a8\u8350\uff09\uff1a grus.pagehelper.reasonable = true","title":"Reasonable"},{"location":"grus/data/mybatis-pagehelper/#_6","text":"grus.pagehelper.supportMethodsArguments=true \u65f6\uff0c\u8be5\u5199\u6cd5\u624d\u53ef\u4ee5\u751f\u6548\uff08\u524d\u9762\u7684\u5199\u6cd5\u4e0d\u4f9d\u8d56\u6b64\u914d\u7f6e\uff09\u3002 \u5e76\u4e0d\u63a8\u8350\u8fd9\u79cd\u65b9\u5f0f\uff0c\u9664\u4e86\u9700\u8981\u66f4\u591a\u7684\u914d\u7f6e\u5916\uff0c\u8fd8\u5bb9\u6613\u4ea7\u751f\u4e00\u4e9b\u4f7f\u7528\u4e0d\u5f53\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u7f57\u5217\u4e0b\u6709\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7ed9\u4ecd\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u9879\u76ee\u63d0\u4f9b\u4e0b demo\u3002 \u53c2\u6570\u65b9\u6cd5\u8c03\u7528\uff0c\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 //\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 public interface CountryMapper { List < User > selectByPageNumSize ( @Param ( \"user\" ) User user , @Param ( \"pageNum\" ) int pageNum , @Param ( \"pageSize\" ) int pageSize ); } //\u914d\u7f6e supportMethodsArguments=true //\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u8c03\u7528\uff1a List < User > list = userMapper . selectByPageNumSize ( user , 1 , 10 ); \u53c2\u6570\u5bf9\u8c61\uff0c\u5982\u679c pageNum \u548c pageSize \u5b58\u5728\u4e8e \u67e5\u8be2\u53c2\u6570 \u5bf9\u8c61\u4e2d\uff0c\u53ea\u8981\u53c2\u6570\u6709\u503c\uff0c\u4e5f\u4f1a\u88ab\u5206\u9875 //\u5982\u679c pageNum \u548c pageSize \u5b58\u5728\u4e8e User \u5bf9\u8c61\u4e2d\uff0c\u53ea\u8981\u53c2\u6570\u6709\u503c\uff0c\u4e5f\u4f1a\u88ab\u5206\u9875 //\u6709\u5982\u4e0b User \u5bf9\u8c61 public class User { //\u5176\u4ed6fields //\u4e0b\u9762\u4e24\u4e2a\u53c2\u6570\u540d\u548c params \u914d\u7f6e\u7684\u540d\u5b57\u4e00\u81f4 private Integer pageNum ; private Integer pageSize ; } //\u5b58\u5728\u4ee5\u4e0b Mapper \u63a5\u53e3\u65b9\u6cd5\uff0c\u4f60\u4e0d\u9700\u8981\u5728 xml \u5904\u7406\u540e\u4e24\u4e2a\u53c2\u6570 public interface CountryMapper { List < User > selectByPageNumSize ( User user ); } //\u5f53 user \u4e2d\u7684 pageNum!= null && pageSize!= null \u65f6\uff0c\u4f1a\u81ea\u52a8\u5206\u9875 List < User > list = userMapper . selectByPageNumSize ( user ); \u4ece list \u53d6\u5206\u9875\u5bf9\u8c61 //\u7528PageInfo\u5bf9\u7ed3\u679c\u8fdb\u884c\u5305\u88c5 PageInfo page = new PageInfo ( list ); //\u6d4b\u8bd5PageInfo\u5168\u90e8\u5c5e\u6027 //PageInfo\u5305\u542b\u4e86\u975e\u5e38\u5168\u9762\u7684\u5206\u9875\u5c5e\u6027 assertEquals ( 1 , page . getPageNum ()); assertEquals ( 10 , page . getPageSize ()); assertEquals ( 1 , page . getStartRow ()); assertEquals ( 10 , page . getEndRow ()); assertEquals ( 183 , page . getTotal ()); assertEquals ( 19 , page . getPages ()); assertEquals ( 1 , page . getFirstPage ()); assertEquals ( 8 , page . getLastPage ()); assertEquals ( true , page . isFirstPage ()); assertEquals ( false , page . isLastPage ()); assertEquals ( false , page . isHasPreviousPage ()); assertEquals ( true , page . isHasNextPage ()); @Param(\"pageNum\") int pageNum \u4e2d\u7684\u547d\u540d\u53ef\u4ee5\u6839\u636e grus.pagehelper.params \u914d\u7f6e\uff0c\u66f4\u591a\u4f7f\u7528\u65b9\u5f0f\u8bf7\u53c2\u7167 \u6587\u6863 \u3002","title":"\u53c2\u6570\u65b9\u6cd5/\u5bf9\u8c61\u8c03\u7528"},{"location":"grus/data/mybatis-pagehelper/#_7","text":"PageHelper.startPage \u65b9\u6cd5\u91cd\u8981\u63d0\u793a \u53ea\u6709\u7d27\u8ddf\u5728 PageHelper.startPage \u65b9\u6cd5\u540e\u7684 \u7b2c\u4e00\u4e2a Mybatis \u7684 \u67e5\u8be2\uff08Select\uff09 \u65b9\u6cd5\u4f1a\u88ab\u5206\u9875\u3002 PageHelper \u9ed8\u8ba4\u7684 count \u4f1a\u53bb\u9664 order by PageHelper \u9ed8\u8ba4\u4f1a\u53bb\u9664\u81ea\u5df1\u5199\u7684 count \u8bed\u53e5\u4e2d\u7684 order by \u5b57\u6bb5\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u7edf\u8ba1\u7684\u603b\u6570\u4e0d\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7\u5728 sql \u8bed\u53e5\u4e2d\u6dfb\u52a0 /*keep orderby*/ \u6ce8\u91ca\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u6216\u8005\u901a\u8fc7\u624b\u5199 count \u89e3\u51b3\u3002 \u8bf7\u4e0d\u8981\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6 \u8bf7\u4e0d\u8981\u5728\u7cfb\u7edf\u4e2d\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6(\u4f7f\u7528 Spring \u65f6\uff0c mybatis-config.xml \u548c Spring<bean> \u914d\u7f6e\u65b9\u5f0f\uff0c\u8bf7\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\uff0c\u4e0d\u8981\u540c\u65f6\u914d\u7f6e\u591a\u4e2a\u5206\u9875\u63d2\u4ef6)\uff01 \u5206\u9875\u63d2\u4ef6\u4e0d\u652f\u6301\u5e26\u6709 for update \u8bed\u53e5\u7684\u5206\u9875 \u5bf9\u4e8e\u5e26\u6709 for update \u7684 sql\uff0c\u4f1a\u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684 sql \u5efa\u8bae\u624b\u52a8\u5206\u9875\uff0c\u6bd5\u7adf\u8fd9\u6837\u7684 sql \u9700\u8981\u91cd\u89c6\u3002 \u5206\u9875\u63d2\u4ef6\u4e0d\u652f\u6301\u5d4c\u5957\u7ed3\u679c\u6620\u5c04 \u7531\u4e8e\u5d4c\u5957\u7ed3\u679c\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u7ed3\u679c\u96c6\u88ab\u6298\u53e0\uff0c\u56e0\u6b64\u5206\u9875\u67e5\u8be2\u7684\u7ed3\u679c\u5728\u6298\u53e0\u540e\u603b\u6570\u4f1a\u51cf\u5c11\uff0c\u6240\u4ee5\u65e0\u6cd5\u4fdd\u8bc1\u5206\u9875\u7ed3\u679c\u6570\u91cf\u6b63\u786e\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"grus/data/mybatis-pagehelper/#_8","text":"\u5bf9\u8c61\u8fd8\u6709\u6210\u5458\u53d8\u91cf orderBy \u5f53\u53c2\u6570\u5bf9\u8c61\u4e2d\u6709\u6210\u5458\u53d8\u91cf orderBy \uff0c PageInterceptor \u63d2\u4ef6\u4f1a\u5728\u62e6\u622a\u7684\u8fc7\u7a0b\u4e2d\u505a\u62fc\u63a5\u6392\u5e8f\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u6700\u7ec8\u6267\u884c\u7684 sql \u6700\u540e\u9762\u4f1a\u591a order by xxx \u3002\u8fd9\u662f PageInterceptor \u63d2\u4ef6\u63d0\u4f9b\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u53ef\u914d\u5408\u5206\u9875\u53c2\u6570\u4e00\u8d77\u4f7f\u7528\u3002 \u7531\u4e8e grus-boot-starter-server-service \u9ed8\u8ba4\u4f9d\u8d56 grus-boot-starter-pagehelper \uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u4f9d\u8d56 grus-boot-starter-server-service \u5c31\u9ed8\u8ba4\u96c6\u6210\u4e86\u5206\u9875\u529f\u80fd\uff0c\u5c31\u4f1a\u5bfc\u81f4\u53c2\u6570\u5bf9\u8c61\u5305\u542b orderBy \u6210\u5458\u53d8\u91cf\u7684\u67e5\u8be2\u65b9\u6cd5\u62a5\u9519\u3002\u5982\u679c\u51fa\u73b0\u6b64\u60c5\u51b5\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u89e3\u51b3\uff1a \u4f7f\u7528\u5206\u9875\u63d2\u4ef6\u529f\u80fd\uff0c\u4fee\u6539 xml \u91cc\u9762\u7684 sql \u914d\u7f6e grus.pagehelper.enabled=false \uff0c\u7981\u7528 PageInterceptor \u63d2\u4ef6 \u4fee\u6539 orderBy \u6210\u5458\u53d8\u91cf\u540d\u4e3a\u5176\u4ed6 \u914d\u7f6e\u53c2\u6570\u91cd\u8981\u63d0\u793a \u5f53 offsetAsPageNum=false \u7684\u65f6\u5019\uff0c\u7531\u4e8e PageNum \u95ee\u9898\uff0c RowBounds \u67e5\u8be2\u7684\u65f6\u5019 reasonable \u4f1a\u5f3a\u5236\u4e3a false \u3002\u4f7f\u7528 PageHelper.startPage \u65b9\u6cd5\u4e0d\u53d7\u5f71\u54cd\u3002","title":"\u53c2\u6570\u8c03\u7528\u6ce8\u610f"},{"location":"grus/frigate/","text":"Frigate \u6d88\u606f\u901a\u77e5 API \u4f7f\u7528\u8bf4\u660e \u00b6 \u65b9\u6cd5 \u00b6 \u5927\u5bb6\u4e00\u822c\u90fd\u901a\u8fc7 FrigateNotifier \u7c7b\u53d1\u9001\u6d88\u606f\uff0c\u5305\u62ec\u6846\u67b6\u3002 \u66b4\u9732\u7ed9\u5927\u5bb6\u7684\u65b9\u6cd5\uff0c\u4e00\u822c\u53ea\u9700\u8981\u6307\u5b9a receiver\u3001chanel\u3001content\u3001stack\u3002 \u4f46\u5176\u5b9e\uff0c\u6700\u7ec8\u9001\u5230\u7ed9 frigate \u6d88\u606f\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u51e0\u4e2a\u5b57\u6bb5\u3002\u5176\u4ed6\u7684\u5b57\u6bb5\uff0c\u90fd\u7531 api \u81ea\u52a8\u9644\u4e0a\u4e86\u503c\u3002 \u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 FrigateRawNotifier \u6765\u66f4\u9ad8\u7ea7\u7684\u5b9a\u5236\u4f60\u7684\u5185\u5bb9\u3002 \u6d88\u606f\u4f53 \u00b6 \u4ecb\u7ecd\u4e0b\u9001\u8fbe\u7ed9 frigate \u6d88\u606f\u7cfb\u7edf\u7684\u6d88\u606f\u4f53\uff1a public class FrigateMessage { /** * \u53d1\u9001\u6e20\u9053\uff0c\u9ed8\u8ba4\u901a\u8fc71\u4e3a\u4f01\u4e1a\u5fae\u4fe1\u901a\u77e5 */ private Integer channel = 1; /** * \u6d88\u606f\u6807\u9898 */ private String title = \"frigate \u6d88\u606f\u901a\u77e5\"; /** * \u6d88\u606f\u5185\u5bb9 */ private String content; /** * \u5f53\u6709\u5f02\u5e38\u5806\u6808\u65f6\uff0c\u5806\u6808\u5185\u5bb9 */ private String stack; /** * \u6a21\u5757 */ private String module; /** * \u6807\u7b7e */ private Map<String, String> tags; /** * ------------------\u4ee5\u4e0b\u5c5e\u4e8e\u7cfb\u7edf\u53d8\u91cf------------------------ **/ private String traceId; private String hostIp; private String appName; private String appInstance; private String workEnv; private String workIdc; /** * \u53d1\u9001\u65f6\u95f4 */ private long time; private boolean format = true; } \u5927\u5bb6\u770b\u5230\u7684\u6d88\u606f\u5185\u5bb9\u4f53\uff0c\u4e3b\u8981\u4f53\u73b0\u5728 content \u548c stack \u548c time \u4e09\u4e2a\u5b57\u6bb5\u3002 \u5176\u4ed6\u7684\u5b57\u6bb5\uff0c\u4e3b\u8981\u7528\u4e8e\u7edf\u8ba1\u5206\u6790\u548c\u5e2e\u52a9\u5b9a\u4f4d\u95ee\u9898\u4f7f\u7528\u3002 \u73b0\u5728\uff0c\u6846\u67b6\u53d1\u9001\u7684\u6d88\u606f\uff0c\u90fd\u4f1a\u533a\u5206 module \uff0c\u8be6\u7ec6\u89c1 com.ciicgat.grus.performance.Module \uff0c\u4e3b\u8981\u6709 redis \u3001 web-servlet \u3001 httpclient \u3001 feign \u3001 db \u3001 rabbitmq \u3002\u800c\u4e00\u822c\u7684\uff0c\u5f00\u53d1\u5728\u4e1a\u52a1\u4ee3\u7801\u91cc\u53d1\u9001\u7684\u6d88\u606f\u6ca1\u6709\u6307\u5b9a module \u5b57\u6bb5\u3002 \u5982\u679c\u60f3\u6307\u5b9a\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5 public abstract class FrigateNotifier implements FrigateMessageConstants { /** * \u6307\u5b9a\u6a21\u5757\u53d1\u9001\u6d88\u606f * @param channel * @param module \u6a21\u5757 * @param content * @param throwable */ public static void sendMessageByAppName(NotifyChannel channel, Module module, String content, Throwable throwable) { ..... } } \u5c4f\u853d\u6d88\u606f \u00b6 \u73b0\u5728\u6846\u67b6\u4f1a\u53d1\u9001\u5f88\u591a\u6d88\u606f\u7ed9\u5f00\u53d1\uff0c\u6709\u65f6\u5019\uff0c\u5927\u5bb6\u5e0c\u671b\u80fd\u591f\u5c4f\u853d\u67d0\u4e9b\u5df2\u77e5\u7684\u975e\u91cd\u8981\u6d88\u606f\u3002\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u672c\u6587\u7684\u4ecb\u7ecd\u505a\u3002 \u9996\u5148\u5c4f\u853d\u6d88\u606f\uff0c\u53ea\u662f\u4ee3\u8868\u5927\u5bb6\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u3001\u77ed\u4fe1\u3001\u90ae\u4ef6\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u6d88\u606f\u672c\u8eab\u4f1a\u8fd8\u662f\u4f1a\u8bb0\u5f55\u5230 elasticsearch \u4e4b\u4e2d\uff0c\u4f9b\u5927\u5bb6\u67e5\u8be2\u3002 \u5927\u5bb6\u5728\u81ea\u5df1\u5e94\u7528\u540d\u6240\u5bf9\u5e94\u7684 gconf app \u4e2d\uff08\u7edf\u4e00\u5728\u4e0a\u6d77 idc \u4e0b\u3001\u5373\u4f7f\u4f60\u5e94\u7528\u90e8\u7f72\u5728 ali \u751f\u4ea7\u4e5f\u5728\u4e0a\u6d77 idc \u4e0b\uff09\uff0c\u521b\u5efa message-exclude.properties \u7684\u914d\u7f6e\uff1a #excludeAll\u4e3atrue\u8868\u793a\u5c4f\u853d\u8be5\u5e94\u7528\u6240\u6709\u6d88\u606f excludeAll=false #\u524d\u7f000\u30011\u30012\u30013\u3002\u3002\u3002\u7528\u6765\u805a\u5408\u4e00\u7ec4\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u4efb\u610f\u6dfb\u52a0 #module\u8868\u793a\u5c4f\u853d\u7684\u6a21\u5757\uff0c\u4e3a\u7a7a\u65f6\u8868\u793a\u7a7a\u7684\u6a21\u5757\u3002\u4f18\u5148\u770b\u8fd9\u4e2a\u3002 #contentKey\u8868\u793a\u5185\u5bb9\u5173\u952e\u8bcd\uff0c\u53ea\u8981\u5305\u542b\u8be5\u503c\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001\u3002\u586b*\u8868\u793a\u6cdb\u5339\u914d\uff0c\u4e00\u5f8b\u4e0d\u53d1\u9001\u3002 #stackKey\u8868\u793a\u5806\u6808\u5f02\u5e38\u5173\u952e\u8bcd\uff0c\u53ea\u8981\u5305\u542b\u8be5\u503c\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001\u3002\u586b*\u8868\u793a\u6cdb\u5339\u914d\uff0c\u4e00\u5f8b\u4e0d\u53d1\u9001\u3002 #contentKey\u548cstackKey\u4e4b\u95f4\u662f\u6216\u5173\u7cfb\uff0c\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001 #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0credis\u6a21\u5757\u76f8\u5173\u7684\u6240\u6709\u6d88\u606f\u90fd\u5c4f\u853d 0.module=redis 0.contentKey=* 0.stackKey=* #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0cfeign\u6a21\u5757\u5305\u542bEnterpriseLimitService\u7684\u5185\u5bb9\u90fd\u5c4f\u853d 1.module=feign 1.contentKey=EnterpriseLimitService 1.stackKey= #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0c\u7a7a\u6a21\u5757\u5305\u542bClientAbortException\u5f02\u5e38\u7684\u90fd\u5c4f\u853d 3.module= 3.contentKey= 3.stackKey=ClientAbortException \u3002\u3002\u3002\u3002","title":"Frigate \u6d88\u606f\u901a\u77e5 API \u4f7f\u7528\u8bf4\u660e"},{"location":"grus/frigate/#frigate-api","text":"","title":"Frigate \u6d88\u606f\u901a\u77e5 API \u4f7f\u7528\u8bf4\u660e"},{"location":"grus/frigate/#_1","text":"\u5927\u5bb6\u4e00\u822c\u90fd\u901a\u8fc7 FrigateNotifier \u7c7b\u53d1\u9001\u6d88\u606f\uff0c\u5305\u62ec\u6846\u67b6\u3002 \u66b4\u9732\u7ed9\u5927\u5bb6\u7684\u65b9\u6cd5\uff0c\u4e00\u822c\u53ea\u9700\u8981\u6307\u5b9a receiver\u3001chanel\u3001content\u3001stack\u3002 \u4f46\u5176\u5b9e\uff0c\u6700\u7ec8\u9001\u5230\u7ed9 frigate \u6d88\u606f\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u51e0\u4e2a\u5b57\u6bb5\u3002\u5176\u4ed6\u7684\u5b57\u6bb5\uff0c\u90fd\u7531 api \u81ea\u52a8\u9644\u4e0a\u4e86\u503c\u3002 \u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 FrigateRawNotifier \u6765\u66f4\u9ad8\u7ea7\u7684\u5b9a\u5236\u4f60\u7684\u5185\u5bb9\u3002","title":"\u65b9\u6cd5"},{"location":"grus/frigate/#_2","text":"\u4ecb\u7ecd\u4e0b\u9001\u8fbe\u7ed9 frigate \u6d88\u606f\u7cfb\u7edf\u7684\u6d88\u606f\u4f53\uff1a public class FrigateMessage { /** * \u53d1\u9001\u6e20\u9053\uff0c\u9ed8\u8ba4\u901a\u8fc71\u4e3a\u4f01\u4e1a\u5fae\u4fe1\u901a\u77e5 */ private Integer channel = 1; /** * \u6d88\u606f\u6807\u9898 */ private String title = \"frigate \u6d88\u606f\u901a\u77e5\"; /** * \u6d88\u606f\u5185\u5bb9 */ private String content; /** * \u5f53\u6709\u5f02\u5e38\u5806\u6808\u65f6\uff0c\u5806\u6808\u5185\u5bb9 */ private String stack; /** * \u6a21\u5757 */ private String module; /** * \u6807\u7b7e */ private Map<String, String> tags; /** * ------------------\u4ee5\u4e0b\u5c5e\u4e8e\u7cfb\u7edf\u53d8\u91cf------------------------ **/ private String traceId; private String hostIp; private String appName; private String appInstance; private String workEnv; private String workIdc; /** * \u53d1\u9001\u65f6\u95f4 */ private long time; private boolean format = true; } \u5927\u5bb6\u770b\u5230\u7684\u6d88\u606f\u5185\u5bb9\u4f53\uff0c\u4e3b\u8981\u4f53\u73b0\u5728 content \u548c stack \u548c time \u4e09\u4e2a\u5b57\u6bb5\u3002 \u5176\u4ed6\u7684\u5b57\u6bb5\uff0c\u4e3b\u8981\u7528\u4e8e\u7edf\u8ba1\u5206\u6790\u548c\u5e2e\u52a9\u5b9a\u4f4d\u95ee\u9898\u4f7f\u7528\u3002 \u73b0\u5728\uff0c\u6846\u67b6\u53d1\u9001\u7684\u6d88\u606f\uff0c\u90fd\u4f1a\u533a\u5206 module \uff0c\u8be6\u7ec6\u89c1 com.ciicgat.grus.performance.Module \uff0c\u4e3b\u8981\u6709 redis \u3001 web-servlet \u3001 httpclient \u3001 feign \u3001 db \u3001 rabbitmq \u3002\u800c\u4e00\u822c\u7684\uff0c\u5f00\u53d1\u5728\u4e1a\u52a1\u4ee3\u7801\u91cc\u53d1\u9001\u7684\u6d88\u606f\u6ca1\u6709\u6307\u5b9a module \u5b57\u6bb5\u3002 \u5982\u679c\u60f3\u6307\u5b9a\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5 public abstract class FrigateNotifier implements FrigateMessageConstants { /** * \u6307\u5b9a\u6a21\u5757\u53d1\u9001\u6d88\u606f * @param channel * @param module \u6a21\u5757 * @param content * @param throwable */ public static void sendMessageByAppName(NotifyChannel channel, Module module, String content, Throwable throwable) { ..... } }","title":"\u6d88\u606f\u4f53"},{"location":"grus/frigate/#_3","text":"\u73b0\u5728\u6846\u67b6\u4f1a\u53d1\u9001\u5f88\u591a\u6d88\u606f\u7ed9\u5f00\u53d1\uff0c\u6709\u65f6\u5019\uff0c\u5927\u5bb6\u5e0c\u671b\u80fd\u591f\u5c4f\u853d\u67d0\u4e9b\u5df2\u77e5\u7684\u975e\u91cd\u8981\u6d88\u606f\u3002\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u672c\u6587\u7684\u4ecb\u7ecd\u505a\u3002 \u9996\u5148\u5c4f\u853d\u6d88\u606f\uff0c\u53ea\u662f\u4ee3\u8868\u5927\u5bb6\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u3001\u77ed\u4fe1\u3001\u90ae\u4ef6\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u6d88\u606f\u672c\u8eab\u4f1a\u8fd8\u662f\u4f1a\u8bb0\u5f55\u5230 elasticsearch \u4e4b\u4e2d\uff0c\u4f9b\u5927\u5bb6\u67e5\u8be2\u3002 \u5927\u5bb6\u5728\u81ea\u5df1\u5e94\u7528\u540d\u6240\u5bf9\u5e94\u7684 gconf app \u4e2d\uff08\u7edf\u4e00\u5728\u4e0a\u6d77 idc \u4e0b\u3001\u5373\u4f7f\u4f60\u5e94\u7528\u90e8\u7f72\u5728 ali \u751f\u4ea7\u4e5f\u5728\u4e0a\u6d77 idc \u4e0b\uff09\uff0c\u521b\u5efa message-exclude.properties \u7684\u914d\u7f6e\uff1a #excludeAll\u4e3atrue\u8868\u793a\u5c4f\u853d\u8be5\u5e94\u7528\u6240\u6709\u6d88\u606f excludeAll=false #\u524d\u7f000\u30011\u30012\u30013\u3002\u3002\u3002\u7528\u6765\u805a\u5408\u4e00\u7ec4\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u4efb\u610f\u6dfb\u52a0 #module\u8868\u793a\u5c4f\u853d\u7684\u6a21\u5757\uff0c\u4e3a\u7a7a\u65f6\u8868\u793a\u7a7a\u7684\u6a21\u5757\u3002\u4f18\u5148\u770b\u8fd9\u4e2a\u3002 #contentKey\u8868\u793a\u5185\u5bb9\u5173\u952e\u8bcd\uff0c\u53ea\u8981\u5305\u542b\u8be5\u503c\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001\u3002\u586b*\u8868\u793a\u6cdb\u5339\u914d\uff0c\u4e00\u5f8b\u4e0d\u53d1\u9001\u3002 #stackKey\u8868\u793a\u5806\u6808\u5f02\u5e38\u5173\u952e\u8bcd\uff0c\u53ea\u8981\u5305\u542b\u8be5\u503c\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001\u3002\u586b*\u8868\u793a\u6cdb\u5339\u914d\uff0c\u4e00\u5f8b\u4e0d\u53d1\u9001\u3002 #contentKey\u548cstackKey\u4e4b\u95f4\u662f\u6216\u5173\u7cfb\uff0c\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\uff0c\u6d88\u606f\u5c31\u4e0d\u53d1\u9001 #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0credis\u6a21\u5757\u76f8\u5173\u7684\u6240\u6709\u6d88\u606f\u90fd\u5c4f\u853d 0.module=redis 0.contentKey=* 0.stackKey=* #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0cfeign\u6a21\u5757\u5305\u542bEnterpriseLimitService\u7684\u5185\u5bb9\u90fd\u5c4f\u853d 1.module=feign 1.contentKey=EnterpriseLimitService 1.stackKey= #\u4ee5\u4e0b\u914d\u7f6e\u8868\u793a\uff0c\u5f53\u524d\u5e94\u7528\uff0c\u7a7a\u6a21\u5757\u5305\u542bClientAbortException\u5f02\u5e38\u7684\u90fd\u5c4f\u853d 3.module= 3.contentKey= 3.stackKey=ClientAbortException \u3002\u3002\u3002\u3002","title":"\u5c4f\u853d\u6d88\u606f"},{"location":"grus/frigate/grus-frigate-message-handle/","text":"\u6536\u655b frigate \u6d88\u606f \u00b6 \u73b0\u5728\u6846\u67b6\u57cb\u4e86\u5f88\u591a\u70b9\uff0c\u5f53\u9047\u5230\u4e00\u4e9b\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u9001 frigate \u6d88\u606f\u3002\u8fd9\u4e9b\u6d88\u606f\uff0c\u53ef\u80fd\u8bb8\u591a\u90fd\u662f\u6b63\u5e38\u7684\u6d88\u606f\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u64cd\u4f5c\uff0c\u964d\u4f4e\u8fd9\u4e9b\u9891\u7e41\u65e0\u7528\u7684\u6d88\u606f\u91cf\uff0c\u540c\u65f6\u4f7f frigate \u62a5\u8b66\u66f4\u52a0\u7cbe\u51c6\u5462\uff1f \u672c\u6587\u53eb\u5927\u5bb6\u5982\u4f55\u64cd\u4f5c\u3002 \u901a\u8fc7 ES \u5206\u6790\u6d88\u606f \u00b6 \u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 frigate \u9875\u9762\u53f3\u4e0a\u89d2\u7684\u6d88\u606f\u70b9\u8fdb\u53bb\u3002 \u4f18\u5148\u5904\u7406\u8bbe\u8ba1\u53d1\u9001\u6d88\u606f \u00b6 \u589e\u52a0**realSend:true**\u548c**workEnv:product**\u7684\u8fc7\u6ee4\u6761\u4ef6\uff08realSend \u8868\u793a\u5b9e\u9645\u53d1\u9001\u8fc7\uff09 \u4f18\u5148\u5904\u7406 top5 \u00b6 \u628a\u65f6\u95f4\u62c9\u5230\u6700\u8fd1 7 \u5929\uff0c\u7136\u540e\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684 appName\uff0c\u67e5\u770b top5 \u7684\u5e94\u7528\uff1a \u9009\u62e9\u4e00\u4e2a top5 \u5e94\u7528 \u00b6 \u672c\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9009\u53d6\u6d88\u606f\u91cf\u6700\u9ad8\u7684 biz-order\u3002\u4e5f\u5c31\u662f\uff0c\u589e\u52a0\u4e00\u4e2a appName:biz-order \u7684\u8fc7\u6ee4\u6761\u4ef6\u3002 \u901a\u8fc7 module\u3001content\u3001stack \u5b57\u6bb5\u505a\u5224\u65ad \u00b6 \u6211\u4eec\u70b9\u51fb module\uff1a \u4f1a\u53d1\u73b0\uff0cbiz-order \u8fd9\u4e2a\u5e94\u7528\uff0c\u5927\u90e8\u5206\u662f db \u8fd9\u4e2a\u6a21\u5757\u7684\u95ee\u9898\u5bfc\u81f4\u53d1\u9001\u51fa\u6d88\u606f\u7684\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u518d\u589e\u52a0 module:db \u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53d1\u73b0 content \u57fa\u672c\u90fd\u662f\u4ee5\u4e0b\uff1a \u6240\u4ee5\uff0c\u6211\u4eec\u627e\u51fa\u4e86 biz-order \u53d1\u9001\u6d88\u606f\u7684\u4e3b\u8981\u539f\u56e0\u5c31\u662f db \u6a21\u5757\u7684 rollback happened \u89e3\u51b3\u5e94\u7528\u7684\u9891\u7e41\u62a5\u8b66\u6d88\u606f \u00b6 \u4f18\u5148\u5206\u6790\u4ee3\u7801\uff0c\u770b\u903b\u8f91\u53ef\u4e0d\u53ef\u4ee5\u6539\u8fdb\u3002 \u5982\u679c\u89e3\u51b3\u4e0d\u4e86\uff0c\u4e14\u786e\u8ba4\u8fd9\u7c7b\u6d88\u606f\u57fa\u672c\u4e3a\u4e0d\u91cd\u8981\u7684\u6d88\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7 frigate \u5c4f\u853d\u6d88\u606f\u65b9\u6cd5 \uff0c\u628a\u5b83\u5c4f\u853d\u4e86\u3002 \u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u8ba4\u4e3a biz-order \u8fd9\u4e2a\u5e94\u7528\u6d88\u606f\u6cdb\u6ee5\u7684\u539f\u56e0\u5c31\u627e\u5230\u4e14\u89e3\u51b3\u4e86\u3002","title":"gfs-client\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/frigate/grus-frigate-message-handle/#frigate","text":"\u73b0\u5728\u6846\u67b6\u57cb\u4e86\u5f88\u591a\u70b9\uff0c\u5f53\u9047\u5230\u4e00\u4e9b\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u9001 frigate \u6d88\u606f\u3002\u8fd9\u4e9b\u6d88\u606f\uff0c\u53ef\u80fd\u8bb8\u591a\u90fd\u662f\u6b63\u5e38\u7684\u6d88\u606f\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u64cd\u4f5c\uff0c\u964d\u4f4e\u8fd9\u4e9b\u9891\u7e41\u65e0\u7528\u7684\u6d88\u606f\u91cf\uff0c\u540c\u65f6\u4f7f frigate \u62a5\u8b66\u66f4\u52a0\u7cbe\u51c6\u5462\uff1f \u672c\u6587\u53eb\u5927\u5bb6\u5982\u4f55\u64cd\u4f5c\u3002","title":"\u6536\u655b frigate \u6d88\u606f"},{"location":"grus/frigate/grus-frigate-message-handle/#es","text":"\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 frigate \u9875\u9762\u53f3\u4e0a\u89d2\u7684\u6d88\u606f\u70b9\u8fdb\u53bb\u3002","title":"\u901a\u8fc7 ES \u5206\u6790\u6d88\u606f"},{"location":"grus/frigate/grus-frigate-message-handle/#_1","text":"\u589e\u52a0**realSend:true**\u548c**workEnv:product**\u7684\u8fc7\u6ee4\u6761\u4ef6\uff08realSend \u8868\u793a\u5b9e\u9645\u53d1\u9001\u8fc7\uff09","title":"\u4f18\u5148\u5904\u7406\u8bbe\u8ba1\u53d1\u9001\u6d88\u606f"},{"location":"grus/frigate/grus-frigate-message-handle/#top5","text":"\u628a\u65f6\u95f4\u62c9\u5230\u6700\u8fd1 7 \u5929\uff0c\u7136\u540e\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684 appName\uff0c\u67e5\u770b top5 \u7684\u5e94\u7528\uff1a","title":"\u4f18\u5148\u5904\u7406 top5"},{"location":"grus/frigate/grus-frigate-message-handle/#top5_1","text":"\u672c\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9009\u53d6\u6d88\u606f\u91cf\u6700\u9ad8\u7684 biz-order\u3002\u4e5f\u5c31\u662f\uff0c\u589e\u52a0\u4e00\u4e2a appName:biz-order \u7684\u8fc7\u6ee4\u6761\u4ef6\u3002","title":"\u9009\u62e9\u4e00\u4e2a top5 \u5e94\u7528"},{"location":"grus/frigate/grus-frigate-message-handle/#modulecontentstack","text":"\u6211\u4eec\u70b9\u51fb module\uff1a \u4f1a\u53d1\u73b0\uff0cbiz-order \u8fd9\u4e2a\u5e94\u7528\uff0c\u5927\u90e8\u5206\u662f db \u8fd9\u4e2a\u6a21\u5757\u7684\u95ee\u9898\u5bfc\u81f4\u53d1\u9001\u51fa\u6d88\u606f\u7684\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u518d\u589e\u52a0 module:db \u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53d1\u73b0 content \u57fa\u672c\u90fd\u662f\u4ee5\u4e0b\uff1a \u6240\u4ee5\uff0c\u6211\u4eec\u627e\u51fa\u4e86 biz-order \u53d1\u9001\u6d88\u606f\u7684\u4e3b\u8981\u539f\u56e0\u5c31\u662f db \u6a21\u5757\u7684 rollback happened","title":"\u901a\u8fc7 module\u3001content\u3001stack \u5b57\u6bb5\u505a\u5224\u65ad"},{"location":"grus/frigate/grus-frigate-message-handle/#_2","text":"\u4f18\u5148\u5206\u6790\u4ee3\u7801\uff0c\u770b\u903b\u8f91\u53ef\u4e0d\u53ef\u4ee5\u6539\u8fdb\u3002 \u5982\u679c\u89e3\u51b3\u4e0d\u4e86\uff0c\u4e14\u786e\u8ba4\u8fd9\u7c7b\u6d88\u606f\u57fa\u672c\u4e3a\u4e0d\u91cd\u8981\u7684\u6d88\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7 frigate \u5c4f\u853d\u6d88\u606f\u65b9\u6cd5 \uff0c\u628a\u5b83\u5c4f\u853d\u4e86\u3002 \u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u8ba4\u4e3a biz-order \u8fd9\u4e2a\u5e94\u7528\u6d88\u606f\u6cdb\u6ee5\u7684\u539f\u56e0\u5c31\u627e\u5230\u4e14\u89e3\u51b3\u4e86\u3002","title":"\u89e3\u51b3\u5e94\u7528\u7684\u9891\u7e41\u62a5\u8b66\u6d88\u606f"},{"location":"grus/gconf/","text":"Gconf \u00b6 \u7b80\u8ff0 \u00b6 \u5bf9\u4e8e application.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u628a\u67d0\u6761 item \u653e\u5230 gconf \u7684\u67d0\u4e2a properties \u6587\u4ef6\u4e2d\uff0c\u8fd9\u662f\u80fd\u591f\u6b63\u5e38\u52a0\u8f7d\u3002 \u8fd9\u6761\u7279\u6027\u6700\u91cd\u8981 gconf \u4e0d\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u628a\u914d\u7f6e\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7136\u540e\u52a8\u6001\u52a0\u5165\u5230 classpath \u4e2d\u3002\u4e3b\u8981\u662f\u4e3a\u4e86\u4fe1\u606f\u5b89\u5168\u3002\u6240\u4ee5\uff1a @PropertySource(\"classpath:redis.properties\") \u8fd9\u79cd\u5199\u6cd5\uff0c\u5728\u6846\u67b6\u91cc\u4f1a\u62a5\u9519\u3002 gconf \u4f1a\u5728 SpringBoot \u542f\u52a8\u7684\u65f6\u5019\uff0c\u628a\u6240\u6709\u7684 properties \u5c5e\u6027\uff0c\u6ce8\u5165\u5230 ApplicationContext \u7684 Environment \u4e2d\u3002\u6240\u4ee5\uff0c @Value \u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u3002 \u89c4\u8303\u4e0a\uff0c\u5927\u5bb6\u4ee5\u540e\u7edf\u4e00\u4f7f\u7528 GConfBean \u6ce8\u89e3 ConfigCollection.getBean \u65b9\u6cd5\u539f\u5148\u4f1a\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u6b64\u5b9e\u73b0\u5728\u81ea\u52a8\u5237\u65b0\u65f6\uff0c\u6ca1\u6cd5\u66f4\u65b0\u5bf9\u8c61\u91cc\u7684\u503c\u3002\u5728\u5b57\u6bb5\u76f4\u63a5\u4e3a public \u7c7b\u578b\u4e14\u76f4\u63a5\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u505a\u5230\u81ea\u52a8\u66f4\u65b0\u3002\u65b0\u7248\u672c\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u88ab gconf \u6258\u7ba1\u7684 bean\u3002\u5728\u914d\u7f6e\u53d8\u66f4\u65f6\uff0cgconf \u4f1a\u66f4\u65b0\u5bf9\u8c61\u91cc\u7684\u5c5e\u6027\u3002\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4e00\u4e2a\u6258\u7ba1\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 ConfigCollection.getLatestBean \u65b9\u6cd5\u3002 \u670d\u52a1\u67b6\u6784 \u00b6 \u670d\u52a1\u67b6\u6784\u89c1\u8fd9\u91cc \u5ba2\u6237\u7aef\u67b6\u6784 \u00b6 \u8bf4\u660e\uff1a \u5bf9\u4e8e\u914d\u7f6e\u6570\u636e\uff0cclient \u4e2d\u6709\u4e00\u4efd\u5185\u5b58\u7f13\u5b58\u3002\u4e1a\u52a1\u4ee3\u7801\u83b7\u53d6\u914d\u7f6e\u6570\u636e\u65f6\uff0c\u5168\u90e8\u662f\u4ece\u7f13\u5b58\u4e2d\u53d6\u7684\u3002\u6240\u4ee5\u4e0d\u8981\u5f53\u5fc3\u5ba2\u6237\u7aef\u7684\u6027\u80fd\u3002 \u6709\u4e00\u4e2a\u5f02\u6b65\u7684\u7ebf\u7a0b\uff0c\u5b9a\u65f6\u4ece gconf-agent \u4e2d\u83b7\u53d6\u6700\u65b0\u7684\u6570\u636e\uff0c\u518d\u548c\u672c\u5730\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\uff0c\u6709\u66f4\u65b0\uff0c\u5219\u66ff\u6362\u3002\u540c\u6b65\u5468\u671f\u4e3a\u4e24\u5206\u949f\u3002 gconf \u7684\u914d\u7f6e\u81ea\u52a8\u66f4\u65b0\u80fd\u529b\uff0c\u5c31\u6765\u81ea\u4e8e\u5b9a\u65f6\u540c\u6b65\u3002\u6211\u4eec\u5bf9 api \u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u5927\u5bb6\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u65b9\u5f0f\u4f7f\u7528 gconf \u81ea\u52a8\u66f4\u65b0\u7684\u80fd\u529b\u3002 \u6570\u636e\u9664\u4e86\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4efd\uff0c\u8fd8\u4f1a\u5199\u5165\u5230\u672c\u5730\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\u3002key \u4e3a\u6587\u4ef6\u540d\uff0cvalue \u4e3a\u6587\u4ef6\u5185\u5bb9\u3002\u540c\u65f6\uff0c \u81ea\u52a8\u628a\u8be5\u6587\u4ef6\u52a0\u5165 classpath \u4e4b\u4e2d \u3002\u4e4b\u6240\u4ee5\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u5728\u4e8e\uff1a\u8bb8\u591a\u5f00\u6e90\u6846\u67b6\u901a\u8fc7 classpath \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6(\u4f7f\u7528 getResourceAsStream \u65b9\u6cd5)\uff0c\u8fd9\u4e9b\u6846\u67b6\u53c8\u4e0d\u53ef\u80fd\u548c gconf \u505a\u96c6\u6210\uff0c\u63d0\u4f9b\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5927\u5927\u589e\u52a0\u4e86 gconf \u7684\u9002\u7528\u6027\u548c\u517c\u5bb9\u6027\u3002 \u5ba2\u6237\u7aef\u542f\u52a8\u65f6\uff0c\u4f1a\u8bfb\u53d6 WORK_ENV \u548c WORK_IDC \u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\uff0c\u6765\u5224\u65ad\u5f53\u524d\u5728\u54ea\u4e2a idc\u3001\u54ea\u4e2a\u73af\u5883\uff0c\u624d\u4f1a\u77e5\u9053\u5f53\u524d\u7684 gconf \u57df\u540d\u662f\u4ec0\u4e48\u3002\u8fd9\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u4e00\u822c\u7531 Frigate \u53d1\u5e03\u7cfb\u7edf export \u7684\u3002\u5982\u679c\u90fd\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u5219\u4e3a\u5f00\u53d1\u73af\u5883\u3002 maven \u4f9d\u8d56 \u00b6 <dependency> <artifactId> grus-gconf </artifactId> <groupId> com.ciicgat.grus </groupId> <version> ${revision} </version> </dependency> java \u539f\u751f API \u7279\u6027\u8bf4\u660e\u548c\u793a\u4f8b\u4ee3\u7801 \u00b6 \u6839\u636e configAppId \u83b7\u53d6\u914d\u7f6e\u96c6\u5408 ConfigCollectionFactory configCollectionFactory = RemoteConfigCollectionFactoryBuilder . getInstance (); ConfigCollection configCollection = configCollectionFactory . getConfigCollection ( \"userdoor\" ); ConfigCollection.getConfig(String key) getConfig \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u503c\uff0c\u662f\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u3002 String redisConfig = configCollection . getConfig ( \"redis.properties\" ); String jdbcConfig = configCollection . getConfig ( \"jdbc.properties\" ); ConfigCollection.getProperties(String key) getProperties \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a Properties \u7684\u5bf9\u8c61\u3002 \u5fc5\u987b\u4fdd\u8bc1 key \u7684\u540e\u7f00\u662f .properties ,\u540c\u65f6 value \u7684\u683c\u5f0f\u4e5f\u662f Properties \u5f62\u5f0f\u3002 Properties redisProperties = configCollection . getProperties ( \"redis.properties\" ); ConfigCollection.getJSONObject(String key) getJSONObject \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a JSONObject \u7684\u5bf9\u8c61\u3002 \u5fc5\u987b value \u7684\u683c\u5f0f\u662f JSON \u5f62\u5f0f\u3002 Properties redisProperties = configCollection . getProperties ( \"redis.properties\" ); ConfigCollection.getBean(String key, Class<T> clazz) getBean \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a\u4e00\u4e2a clazz \u7684 Bean \u5bf9\u8c61\u3002 SessionProp bean = configCollection . getBean ( \"sessionProp.properties\" , SessionProp . class ); \u9700\u8981\u6ce8\u610f\u51e0\u4e0b\u51e0\u70b9 \uff1a 1. clazz\u53ef\u4ee5\u662f\u63a5\u53e3\u6216\u8005\u7c7b\u3002 2. \u5f53\u4e3a\u63a5\u53e3\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u6240\u6709get\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\uff0c\u662f\u5185\u5b58\u4e2d\u6700\u65b0\u503c\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u662f\u52a8\u6001\u5237\u65b0\u7684\u3002\u8fd9\u662f**gconf\u52a8\u6001\u5237\u65b0\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e4b\u4e00**\u3002 3. \u5f53\u4e3a\u7c7b\u65f6\uff0c\u5982\u679c\u5f53\u524d\u8fd0\u884c\u65f6\u652f\u6301`Spring cglib`\uff0c\u90a3\u4e48\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u7279\u6027\u548c\u4e3a\u63a5\u53e3\u65f6\u4e00\u81f4\u3002 4. value\u7684\u683c\u5f0f\uff0c\u53ea\u652f\u6301`Properties`\u548c`JSON`\u4e24\u4e2a\u683c\u5f0f 5. \u5f53`Properties`\u6216`JSON`\u67d0\u6761\u8bb0\u5f55\u8f6c\u5316\u4e3aBean\u7684\u67d0\u4e2a\u5b57\u6bb5\u65f6\uff0c\u9ed8\u8ba4\u652f\u6301\u9a7c\u5cf0\u3001\u4e0b\u5212\u7ebf\u548c\u5927\u5c0f\u81ea\u52a8\u8f6c\u6362\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528`@BeanFieldKey`\u6ce8\u89e3\u8f85\u52a9\u8f6c\u5316\u3002 ConfigCollection.getBean(String key, BeanLoader<T> beanLoader) \u5f53 value \u503c\uff0c\u4e0d\u4e3a Properties \u548c JSON \u4e24\u4e2a\u683c\u5f0f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\uff1a Set < String > result = configCollection . getBean ( \"ips\" , new BeanLoader < Set < String >> () { @Override public Set < String > load ( String content ) { try { return new HashSet <> ( IOUtils . readLines ( new StringReader ( content ))); } catch ( IOException e ) { e . printStackTrace (); } return new HashSet <> (); } }); \u53ef\u4ee5\u770b\u51fa\u8fd9\u4e2a\u4f8b\u5b50\u91cc \uff0c value\u4e3a\u6362\u884c\u7684\u6587\u672c \uff0c \u9700\u8981\u628avalue\u8f6c\u5316\u4e3aSet \u3002 \u6ce8\u610f \uff1a \u540c\u6837\u7684value \uff0c BeanLoader\u7684load\u65b9\u6cd5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 \u3002 \u53ea\u6709value\u53d8\u5316\u65f6 \uff0c \u624d\u4f1a\u7ee7\u7eed\u6267\u884c \u3002 \u6bcf\u6b21\u8c03\u7528\u6b64\u65b9\u6cd5 \uff0c \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u7f13\u5b58\u5bf9\u8c61 \u3002 \u6846\u67b6\u652f\u6301 \u00b6 \u9664\u4e86\u539f\u751f\u7684 API\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u591a\u79cd\u6269\u5c55\u65b9\u5f0f\u652f\u6301 Spring \u548c servlet \u5e94\u7528\u7a0b\u5e8f \u9996\u63a8\u65b9\u5f0f\uff1a\u6ce8\u89e3 @GConfBean \u00b6 \u6b64\u79cd\u65b9\u5f0f**\u652f\u6301\u52a8\u6001\u5237\u65b0** import com.ciicgat.sdk.gconf.annotation.BeanFieldKey ; import com.ciicgat.sdk.gconf.annotation.GConfBean ; /** * @Author: Jiaju.Wei * @Date: Created in 2018/6/21 * @Description: */ @GConfBean ( appId = \"session\" , key = \"redis.properties\" ) public class RedisPropClazz { @BeanFieldKey ( value = \"host\" ) String myHost ; @BeanFieldKey ( value = \"port\" ) int myPort ; @BeanFieldKey ( value = \"ok\" ) boolean ok ; public String getMyHost () { return myHost ; } public Integer getMyPort () { return myPort ; } public boolean isOk () { return ok ; } public Integer getNotBean () { return 1 ; } } // \u4f7f\u7528\u65f6\uff0c\u5c31\u50cf\u6b63\u5e38\u7684spring bean\u4e00\u6837\u6ce8\u5165\uff1a public class PersonService { @Autowired private RedisPropClazz redisPropClazz ; //.... } \u8fd9\u79cd\u65b9\u5f0f\uff0c\u662f\u6700\u7b80\u6d01\u7684\u65b9\u5f0f\u3002\u6bcf\u6b21\u8c03\u7528 getMyHost \u90fd\u662f\u6700\u65b0\u503c\u3002 SpringBoot \u00b6 \u4e0d\u652f\u6301\u52a8\u6001\u5237\u65b0 \u3002 new SpringApplicationBuilder(InvoiceApplication.class) .initializers(new GConfContextInitializer(\"xxxxAppId\")) .run(args); \u9700\u8981\u6ce8\u610f \uff1a \u4e0d\u8981\u628a application.properties \u6587\u4ef6\u653e\u5230 gconf \u91cc\u3002\u540c\u65f6\u4e1a\u52a1\u914d\u7f6e\u4fe1\u606f\u4e0d\u8981\u653e\u5230 application.properties \u91cc\uff0c application.properties \u91cc\u53ea\u653e\u7f6e SpringBoot \u672c\u8eab\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u4e0e\u73af\u5883\u65e0\u5173\u3002 \u81ea\u52a8\u5237\u65b0\u603b\u7ed3 \u00b6 gconf client \u63d0\u4f9b\u7684\u81ea\u52a8\u5237\u65b0\uff0c\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u4f7f\u7528\u65f6\uff0c\u6bcf\u6b21\u90fd\u53bb\u8c03\u7528\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u53ea\u662f\u521d\u59cb\u5316\u7684\u65f6\u5019\u7528\u5230\u67d0\u4e9b\u914d\u7f6e\uff0c\u6216\u8005\u6bcf\u6b21\u8bfb\u53d6\u914d\u7f6e\u65f6\uff0c\u90fd\u901a\u8fc7\u5355\u4e2a\u5b57\u6bb5\u7684\u5f15\u7528\uff0c\u90a3\u4e48\u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002 \u652f\u6301\u81ea\u52a8\u5237\u65b0\u7684\u51e0\u79cd\u65b9\u5f0f\uff1a \u6ce8\u89e3 @GConfBean \u652f\u6301 \u6bcf\u6b21\u90fd\u901a\u8fc7\u8c03\u7528 ConfigCollection.getXX \u65b9\u6cd5\u83b7\u53d6\u914d\u7f6e System.out.println(configCollection.getBean(\"redis.properties\", RedisConfig.class).getHost()) \u6bcf\u6b21\u8f93\u51fa\u6700\u65b0\u7684host\u503c \u652f\u6301 \u7ef4\u6301\u4e00\u4e2a ConfigCollection.getBean(String key, Class<T> clazz) \u8fd4\u56de\u503c\u7684\u5f15\u7528 private RedisConfig redisConfig = configCollection.getBean(\"redis.properties\", RedisConfig.class) public void printHost(){ System.out.println(redisConfig.getHost()) } \u5728RedisConfig\u4e3a\u63a5\u53e3\uff0c\u6216\u8005\u5f53\u524d\u8fd0\u884c\u65f6\u6709`Spring cglib`\u652f\u6301\u65f6\uff0c\u6bcf\u6b21\u8f93\u51fa\u6700\u65b0\u7684host\u503c \u67d0\u4e9b\u573a\u666f\u652f\u6301\uff1aclazz \u4e3a\u63a5\u53e3\uff0c\u6216\u8005\u5f53\u524d\u8fd0\u884c\u65f6\u6709 Spring cglib \u652f\u6301\u65f6 \u5176\u4ed6\u65b9\u5f0f\uff1a \u4e0d\u652f\u6301 \u6ce8\u518c\u53d8\u66f4\u76d1\u542c\u4e8b\u4ef6 \u00b6 \u53ef\u4ee5\u901a\u8fc7 ConfigCollection.addConfigChangeListener \u6ce8\u518c\u67d0\u4e2a key \u7684\u76d1\u542c\u4e8b\u4ef6\u3002\u8fd9\u4e2a\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u81ea\u5df1\u63a7\u5236\u914d\u7f6e\u53d8\u66f4\uff0c\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u66f4\u65b0\u914d\u7f6e\u3002\u5bf9\u53d8\u66f4\u62e5\u6709\u6700\u5927\u7684\u63a7\u5236\u529b\u5ea6\u3002 ConfigChangeListener \u4ee3\u7801\u5982\u4e0b\uff1a public interface ConfigChangeListener { /** * \u8be5\u65b9\u6cd5\u4f1a\u5728gconf\u540e\u53f0\u540c\u6b65\u6570\u636e\u7ebf\u7a0b\u91cc\u6267\u884c\uff0c\u8bf7\u4fdd\u8bc1\u8be5\u65b9\u6cd5\u4e0d\u8981\u6709\u963b\u585e\u3002\u4e0d\u7136\u4f1a\u5f71\u54cdgconf\u66f4\u65b0\u3002 * * @param key \u952e * @param oldValue \u8001\u7684\u503c,\u65b0\u589ekey\u65f6\uff0c\u8be5\u503c\u4e3anull * @param newValue \u65b0\u7684\u503c,\u5220\u9664key\u65f6\uff0c\u8be5\u503c\u4e3anull */ void valueChanged ( String key , String oldValue , String newValue ); } \u793a\u4f8b\u4ee3\u7801\uff1a configCollection . addConfigChangeListener ( \"ratio.properties\" , ( key , oldValue , newValue ) -> { Properties properties = PropertiesUtils . readFromText ( newValue ); Map < String , Integer > configs = new HashMap <> (); for ( Map . Entry < Object , Object > entry : properties . entrySet ()) { configs . put ( entry . getKey (). toString (), Integer . parseInt ( entry . getValue (). toString ())); } for ( Map . Entry < String , Integer > entry : configs . entrySet ()) { defaultNotifyAgent . setNotifyAgentRatio ( entry . getKey (), entry . getValue ()); } });","title":"\u6a21\u5757\u8bf4\u660e"},{"location":"grus/gconf/#gconf","text":"","title":"Gconf"},{"location":"grus/gconf/#_1","text":"\u5bf9\u4e8e application.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u628a\u67d0\u6761 item \u653e\u5230 gconf \u7684\u67d0\u4e2a properties \u6587\u4ef6\u4e2d\uff0c\u8fd9\u662f\u80fd\u591f\u6b63\u5e38\u52a0\u8f7d\u3002 \u8fd9\u6761\u7279\u6027\u6700\u91cd\u8981 gconf \u4e0d\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u628a\u914d\u7f6e\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7136\u540e\u52a8\u6001\u52a0\u5165\u5230 classpath \u4e2d\u3002\u4e3b\u8981\u662f\u4e3a\u4e86\u4fe1\u606f\u5b89\u5168\u3002\u6240\u4ee5\uff1a @PropertySource(\"classpath:redis.properties\") \u8fd9\u79cd\u5199\u6cd5\uff0c\u5728\u6846\u67b6\u91cc\u4f1a\u62a5\u9519\u3002 gconf \u4f1a\u5728 SpringBoot \u542f\u52a8\u7684\u65f6\u5019\uff0c\u628a\u6240\u6709\u7684 properties \u5c5e\u6027\uff0c\u6ce8\u5165\u5230 ApplicationContext \u7684 Environment \u4e2d\u3002\u6240\u4ee5\uff0c @Value \u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u3002 \u89c4\u8303\u4e0a\uff0c\u5927\u5bb6\u4ee5\u540e\u7edf\u4e00\u4f7f\u7528 GConfBean \u6ce8\u89e3 ConfigCollection.getBean \u65b9\u6cd5\u539f\u5148\u4f1a\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u6b64\u5b9e\u73b0\u5728\u81ea\u52a8\u5237\u65b0\u65f6\uff0c\u6ca1\u6cd5\u66f4\u65b0\u5bf9\u8c61\u91cc\u7684\u503c\u3002\u5728\u5b57\u6bb5\u76f4\u63a5\u4e3a public \u7c7b\u578b\u4e14\u76f4\u63a5\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u505a\u5230\u81ea\u52a8\u66f4\u65b0\u3002\u65b0\u7248\u672c\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u88ab gconf \u6258\u7ba1\u7684 bean\u3002\u5728\u914d\u7f6e\u53d8\u66f4\u65f6\uff0cgconf \u4f1a\u66f4\u65b0\u5bf9\u8c61\u91cc\u7684\u5c5e\u6027\u3002\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4e00\u4e2a\u6258\u7ba1\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 ConfigCollection.getLatestBean \u65b9\u6cd5\u3002","title":"\u7b80\u8ff0"},{"location":"grus/gconf/#_2","text":"\u670d\u52a1\u67b6\u6784\u89c1\u8fd9\u91cc","title":"\u670d\u52a1\u67b6\u6784"},{"location":"grus/gconf/#_3","text":"\u8bf4\u660e\uff1a \u5bf9\u4e8e\u914d\u7f6e\u6570\u636e\uff0cclient \u4e2d\u6709\u4e00\u4efd\u5185\u5b58\u7f13\u5b58\u3002\u4e1a\u52a1\u4ee3\u7801\u83b7\u53d6\u914d\u7f6e\u6570\u636e\u65f6\uff0c\u5168\u90e8\u662f\u4ece\u7f13\u5b58\u4e2d\u53d6\u7684\u3002\u6240\u4ee5\u4e0d\u8981\u5f53\u5fc3\u5ba2\u6237\u7aef\u7684\u6027\u80fd\u3002 \u6709\u4e00\u4e2a\u5f02\u6b65\u7684\u7ebf\u7a0b\uff0c\u5b9a\u65f6\u4ece gconf-agent \u4e2d\u83b7\u53d6\u6700\u65b0\u7684\u6570\u636e\uff0c\u518d\u548c\u672c\u5730\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\uff0c\u6709\u66f4\u65b0\uff0c\u5219\u66ff\u6362\u3002\u540c\u6b65\u5468\u671f\u4e3a\u4e24\u5206\u949f\u3002 gconf \u7684\u914d\u7f6e\u81ea\u52a8\u66f4\u65b0\u80fd\u529b\uff0c\u5c31\u6765\u81ea\u4e8e\u5b9a\u65f6\u540c\u6b65\u3002\u6211\u4eec\u5bf9 api \u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u5927\u5bb6\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u65b9\u5f0f\u4f7f\u7528 gconf \u81ea\u52a8\u66f4\u65b0\u7684\u80fd\u529b\u3002 \u6570\u636e\u9664\u4e86\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4efd\uff0c\u8fd8\u4f1a\u5199\u5165\u5230\u672c\u5730\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\u3002key \u4e3a\u6587\u4ef6\u540d\uff0cvalue \u4e3a\u6587\u4ef6\u5185\u5bb9\u3002\u540c\u65f6\uff0c \u81ea\u52a8\u628a\u8be5\u6587\u4ef6\u52a0\u5165 classpath \u4e4b\u4e2d \u3002\u4e4b\u6240\u4ee5\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u5728\u4e8e\uff1a\u8bb8\u591a\u5f00\u6e90\u6846\u67b6\u901a\u8fc7 classpath \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6(\u4f7f\u7528 getResourceAsStream \u65b9\u6cd5)\uff0c\u8fd9\u4e9b\u6846\u67b6\u53c8\u4e0d\u53ef\u80fd\u548c gconf \u505a\u96c6\u6210\uff0c\u63d0\u4f9b\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5927\u5927\u589e\u52a0\u4e86 gconf \u7684\u9002\u7528\u6027\u548c\u517c\u5bb9\u6027\u3002 \u5ba2\u6237\u7aef\u542f\u52a8\u65f6\uff0c\u4f1a\u8bfb\u53d6 WORK_ENV \u548c WORK_IDC \u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\uff0c\u6765\u5224\u65ad\u5f53\u524d\u5728\u54ea\u4e2a idc\u3001\u54ea\u4e2a\u73af\u5883\uff0c\u624d\u4f1a\u77e5\u9053\u5f53\u524d\u7684 gconf \u57df\u540d\u662f\u4ec0\u4e48\u3002\u8fd9\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u4e00\u822c\u7531 Frigate \u53d1\u5e03\u7cfb\u7edf export \u7684\u3002\u5982\u679c\u90fd\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u5219\u4e3a\u5f00\u53d1\u73af\u5883\u3002","title":"\u5ba2\u6237\u7aef\u67b6\u6784"},{"location":"grus/gconf/#maven","text":"<dependency> <artifactId> grus-gconf </artifactId> <groupId> com.ciicgat.grus </groupId> <version> ${revision} </version> </dependency>","title":"maven \u4f9d\u8d56"},{"location":"grus/gconf/#java-api","text":"\u6839\u636e configAppId \u83b7\u53d6\u914d\u7f6e\u96c6\u5408 ConfigCollectionFactory configCollectionFactory = RemoteConfigCollectionFactoryBuilder . getInstance (); ConfigCollection configCollection = configCollectionFactory . getConfigCollection ( \"userdoor\" ); ConfigCollection.getConfig(String key) getConfig \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u503c\uff0c\u662f\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u3002 String redisConfig = configCollection . getConfig ( \"redis.properties\" ); String jdbcConfig = configCollection . getConfig ( \"jdbc.properties\" ); ConfigCollection.getProperties(String key) getProperties \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a Properties \u7684\u5bf9\u8c61\u3002 \u5fc5\u987b\u4fdd\u8bc1 key \u7684\u540e\u7f00\u662f .properties ,\u540c\u65f6 value \u7684\u683c\u5f0f\u4e5f\u662f Properties \u5f62\u5f0f\u3002 Properties redisProperties = configCollection . getProperties ( \"redis.properties\" ); ConfigCollection.getJSONObject(String key) getJSONObject \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a JSONObject \u7684\u5bf9\u8c61\u3002 \u5fc5\u987b value \u7684\u683c\u5f0f\u662f JSON \u5f62\u5f0f\u3002 Properties redisProperties = configCollection . getProperties ( \"redis.properties\" ); ConfigCollection.getBean(String key, Class<T> clazz) getBean \u8fd4\u56de\u7f13\u5b58\u4e2d\uff0ckey \u5bf9\u5e94\u7684 value \u8f6c\u5316\u4e3a\u4e00\u4e2a clazz \u7684 Bean \u5bf9\u8c61\u3002 SessionProp bean = configCollection . getBean ( \"sessionProp.properties\" , SessionProp . class ); \u9700\u8981\u6ce8\u610f\u51e0\u4e0b\u51e0\u70b9 \uff1a 1. clazz\u53ef\u4ee5\u662f\u63a5\u53e3\u6216\u8005\u7c7b\u3002 2. \u5f53\u4e3a\u63a5\u53e3\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u6240\u6709get\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\uff0c\u662f\u5185\u5b58\u4e2d\u6700\u65b0\u503c\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u662f\u52a8\u6001\u5237\u65b0\u7684\u3002\u8fd9\u662f**gconf\u52a8\u6001\u5237\u65b0\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e4b\u4e00**\u3002 3. \u5f53\u4e3a\u7c7b\u65f6\uff0c\u5982\u679c\u5f53\u524d\u8fd0\u884c\u65f6\u652f\u6301`Spring cglib`\uff0c\u90a3\u4e48\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5bf9\u8c61\u3002\u7279\u6027\u548c\u4e3a\u63a5\u53e3\u65f6\u4e00\u81f4\u3002 4. value\u7684\u683c\u5f0f\uff0c\u53ea\u652f\u6301`Properties`\u548c`JSON`\u4e24\u4e2a\u683c\u5f0f 5. \u5f53`Properties`\u6216`JSON`\u67d0\u6761\u8bb0\u5f55\u8f6c\u5316\u4e3aBean\u7684\u67d0\u4e2a\u5b57\u6bb5\u65f6\uff0c\u9ed8\u8ba4\u652f\u6301\u9a7c\u5cf0\u3001\u4e0b\u5212\u7ebf\u548c\u5927\u5c0f\u81ea\u52a8\u8f6c\u6362\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528`@BeanFieldKey`\u6ce8\u89e3\u8f85\u52a9\u8f6c\u5316\u3002 ConfigCollection.getBean(String key, BeanLoader<T> beanLoader) \u5f53 value \u503c\uff0c\u4e0d\u4e3a Properties \u548c JSON \u4e24\u4e2a\u683c\u5f0f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\uff1a Set < String > result = configCollection . getBean ( \"ips\" , new BeanLoader < Set < String >> () { @Override public Set < String > load ( String content ) { try { return new HashSet <> ( IOUtils . readLines ( new StringReader ( content ))); } catch ( IOException e ) { e . printStackTrace (); } return new HashSet <> (); } }); \u53ef\u4ee5\u770b\u51fa\u8fd9\u4e2a\u4f8b\u5b50\u91cc \uff0c value\u4e3a\u6362\u884c\u7684\u6587\u672c \uff0c \u9700\u8981\u628avalue\u8f6c\u5316\u4e3aSet \u3002 \u6ce8\u610f \uff1a \u540c\u6837\u7684value \uff0c BeanLoader\u7684load\u65b9\u6cd5\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 \u3002 \u53ea\u6709value\u53d8\u5316\u65f6 \uff0c \u624d\u4f1a\u7ee7\u7eed\u6267\u884c \u3002 \u6bcf\u6b21\u8c03\u7528\u6b64\u65b9\u6cd5 \uff0c \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u7f13\u5b58\u5bf9\u8c61 \u3002","title":"java \u539f\u751f API \u7279\u6027\u8bf4\u660e\u548c\u793a\u4f8b\u4ee3\u7801"},{"location":"grus/gconf/#_4","text":"\u9664\u4e86\u539f\u751f\u7684 API\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u591a\u79cd\u6269\u5c55\u65b9\u5f0f\u652f\u6301 Spring \u548c servlet \u5e94\u7528\u7a0b\u5e8f","title":"\u6846\u67b6\u652f\u6301"},{"location":"grus/gconf/#gconfbean","text":"\u6b64\u79cd\u65b9\u5f0f**\u652f\u6301\u52a8\u6001\u5237\u65b0** import com.ciicgat.sdk.gconf.annotation.BeanFieldKey ; import com.ciicgat.sdk.gconf.annotation.GConfBean ; /** * @Author: Jiaju.Wei * @Date: Created in 2018/6/21 * @Description: */ @GConfBean ( appId = \"session\" , key = \"redis.properties\" ) public class RedisPropClazz { @BeanFieldKey ( value = \"host\" ) String myHost ; @BeanFieldKey ( value = \"port\" ) int myPort ; @BeanFieldKey ( value = \"ok\" ) boolean ok ; public String getMyHost () { return myHost ; } public Integer getMyPort () { return myPort ; } public boolean isOk () { return ok ; } public Integer getNotBean () { return 1 ; } } // \u4f7f\u7528\u65f6\uff0c\u5c31\u50cf\u6b63\u5e38\u7684spring bean\u4e00\u6837\u6ce8\u5165\uff1a public class PersonService { @Autowired private RedisPropClazz redisPropClazz ; //.... } \u8fd9\u79cd\u65b9\u5f0f\uff0c\u662f\u6700\u7b80\u6d01\u7684\u65b9\u5f0f\u3002\u6bcf\u6b21\u8c03\u7528 getMyHost \u90fd\u662f\u6700\u65b0\u503c\u3002","title":"\u9996\u63a8\u65b9\u5f0f\uff1a\u6ce8\u89e3@GConfBean"},{"location":"grus/gconf/#springboot","text":"\u4e0d\u652f\u6301\u52a8\u6001\u5237\u65b0 \u3002 new SpringApplicationBuilder(InvoiceApplication.class) .initializers(new GConfContextInitializer(\"xxxxAppId\")) .run(args); \u9700\u8981\u6ce8\u610f \uff1a \u4e0d\u8981\u628a application.properties \u6587\u4ef6\u653e\u5230 gconf \u91cc\u3002\u540c\u65f6\u4e1a\u52a1\u914d\u7f6e\u4fe1\u606f\u4e0d\u8981\u653e\u5230 application.properties \u91cc\uff0c application.properties \u91cc\u53ea\u653e\u7f6e SpringBoot \u672c\u8eab\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u4e0e\u73af\u5883\u65e0\u5173\u3002","title":"SpringBoot"},{"location":"grus/gconf/#_5","text":"gconf client \u63d0\u4f9b\u7684\u81ea\u52a8\u5237\u65b0\uff0c\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u4f7f\u7528\u65f6\uff0c\u6bcf\u6b21\u90fd\u53bb\u8c03\u7528\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u53ea\u662f\u521d\u59cb\u5316\u7684\u65f6\u5019\u7528\u5230\u67d0\u4e9b\u914d\u7f6e\uff0c\u6216\u8005\u6bcf\u6b21\u8bfb\u53d6\u914d\u7f6e\u65f6\uff0c\u90fd\u901a\u8fc7\u5355\u4e2a\u5b57\u6bb5\u7684\u5f15\u7528\uff0c\u90a3\u4e48\u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002 \u652f\u6301\u81ea\u52a8\u5237\u65b0\u7684\u51e0\u79cd\u65b9\u5f0f\uff1a \u6ce8\u89e3 @GConfBean \u652f\u6301 \u6bcf\u6b21\u90fd\u901a\u8fc7\u8c03\u7528 ConfigCollection.getXX \u65b9\u6cd5\u83b7\u53d6\u914d\u7f6e System.out.println(configCollection.getBean(\"redis.properties\", RedisConfig.class).getHost()) \u6bcf\u6b21\u8f93\u51fa\u6700\u65b0\u7684host\u503c \u652f\u6301 \u7ef4\u6301\u4e00\u4e2a ConfigCollection.getBean(String key, Class<T> clazz) \u8fd4\u56de\u503c\u7684\u5f15\u7528 private RedisConfig redisConfig = configCollection.getBean(\"redis.properties\", RedisConfig.class) public void printHost(){ System.out.println(redisConfig.getHost()) } \u5728RedisConfig\u4e3a\u63a5\u53e3\uff0c\u6216\u8005\u5f53\u524d\u8fd0\u884c\u65f6\u6709`Spring cglib`\u652f\u6301\u65f6\uff0c\u6bcf\u6b21\u8f93\u51fa\u6700\u65b0\u7684host\u503c \u67d0\u4e9b\u573a\u666f\u652f\u6301\uff1aclazz \u4e3a\u63a5\u53e3\uff0c\u6216\u8005\u5f53\u524d\u8fd0\u884c\u65f6\u6709 Spring cglib \u652f\u6301\u65f6 \u5176\u4ed6\u65b9\u5f0f\uff1a \u4e0d\u652f\u6301","title":"\u81ea\u52a8\u5237\u65b0\u603b\u7ed3"},{"location":"grus/gconf/#_6","text":"\u53ef\u4ee5\u901a\u8fc7 ConfigCollection.addConfigChangeListener \u6ce8\u518c\u67d0\u4e2a key \u7684\u76d1\u542c\u4e8b\u4ef6\u3002\u8fd9\u4e2a\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u81ea\u5df1\u63a7\u5236\u914d\u7f6e\u53d8\u66f4\uff0c\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u66f4\u65b0\u914d\u7f6e\u3002\u5bf9\u53d8\u66f4\u62e5\u6709\u6700\u5927\u7684\u63a7\u5236\u529b\u5ea6\u3002 ConfigChangeListener \u4ee3\u7801\u5982\u4e0b\uff1a public interface ConfigChangeListener { /** * \u8be5\u65b9\u6cd5\u4f1a\u5728gconf\u540e\u53f0\u540c\u6b65\u6570\u636e\u7ebf\u7a0b\u91cc\u6267\u884c\uff0c\u8bf7\u4fdd\u8bc1\u8be5\u65b9\u6cd5\u4e0d\u8981\u6709\u963b\u585e\u3002\u4e0d\u7136\u4f1a\u5f71\u54cdgconf\u66f4\u65b0\u3002 * * @param key \u952e * @param oldValue \u8001\u7684\u503c,\u65b0\u589ekey\u65f6\uff0c\u8be5\u503c\u4e3anull * @param newValue \u65b0\u7684\u503c,\u5220\u9664key\u65f6\uff0c\u8be5\u503c\u4e3anull */ void valueChanged ( String key , String oldValue , String newValue ); } \u793a\u4f8b\u4ee3\u7801\uff1a configCollection . addConfigChangeListener ( \"ratio.properties\" , ( key , oldValue , newValue ) -> { Properties properties = PropertiesUtils . readFromText ( newValue ); Map < String , Integer > configs = new HashMap <> (); for ( Map . Entry < Object , Object > entry : properties . entrySet ()) { configs . put ( entry . getKey (). toString (), Integer . parseInt ( entry . getValue (). toString ())); } for ( Map . Entry < String , Integer > entry : configs . entrySet ()) { defaultNotifyAgent . setNotifyAgentRatio ( entry . getKey (), entry . getValue ()); } });","title":"\u6ce8\u518c\u53d8\u66f4\u76d1\u542c\u4e8b\u4ef6"},{"location":"grus/gfs/","text":"\u5206\u5e03\u5f0f\u5b58\u50a8 \u00b6 \u5173\u7231\u901a\u6587\u4ef6\u670d\u52a1\uff08gfs\uff09\uff0c\u57fa\u4e8e\u516c\u6709\u4e91\u5b58\u50a8\u670d\u52a1\u642d\u5efa\u3002 \u8bbe\u8ba1\u76ee\u6807 \u00b6 \u7edf\u4e00 Java \u5e94\u7528\u6587\u4ef6\u5b58\u50a8\u89c4\u8303\uff08\u4e0d\u589e\u52a0\u5f53\u524d\u8fd0\u7ef4\u6210\u672c\uff0c\u89c4\u8303\u5316\u6587\u4ef6\u4e0a\u4f20\u53ca\u63d0\u53d6\u6d41\u7a0b\uff09 \u6587\u4ef6\u5b58\u50a8\u670d\u52a1\u9ad8\u53ef\u7528\uff08\u4e0d\u5355\u70b9\u4f9d\u8d56\u4efb\u4f55\u4e00\u5bb6\u4e91\u5b58\u50a8\u670d\u52a1\uff0c\u9694\u79bb\u5e95\u5c42\u5b58\u50a8\u8bbe\u65bd\uff09 \u6587\u4ef6\u53ef\u8ffd\u6eaf\uff08\u51cf\u5c11\u6587\u4ef6\u788e\u7247\uff09 \u65b9\u6848\u8bbe\u8ba1 \u00b6 \u5e95\u5c42\u5b58\u50a8\uff1a OSS\u3001S3 \u3001Glusterfs\uff08\u540e\u671f\uff09 \u4e2d\u95f4\u670d\u52a1\uff1a\u6587\u4ef6\u4e8c\u7ea7\u6620\u5c04\u3001\u591a\u4e91\u96c6\u6210\u3001\u591a\u4e91\u5207\u6362 \u63a5\u5165\u670d\u52a1\uff1agfs client\u3001gfsr\uff08\u516c\u5171\u6587\u4ef6\u591a\u4e91\u5207\u6362 redirect\uff09 \u6545\u969c\u5207\u6362 \u00b6 \u9636\u6bb5\u4e00\uff1aOSS \u4e3b\uff0cS3 \u5907 \u6b64\u9636\u6bb5\u4e3a GFS \u5065\u5eb7\u7ec8\u6001\uff0c\u6240\u6709\u6587\u4ef6\u7684\u8bfb\u5199\u90fd\u7531 OSS \u63d0\u4f9b\u3002GFS \u540e\u53f0\u5e38\u9a7b\u7ebf\u7a0b\u8fdb\u884c\u6587\u4ef6\u591a\u4e91\u4f20\u9012\u53ca\u4e34\u65f6\u6587\u4ef6\u6e05\u7406\u5de5\u4f5c\u3002 \u9636\u6bb5\u4e8c\uff1aOSS \u5b95\uff0cS3 \u5907 \u6b64\u9636\u6bb5\u4e3a\u6545\u969c\u5224\u5b9a\u9636\u6bb5\uff0c\u4e00\u671f\u8bbe\u8ba1\u4e3a\u624b\u52a8\u5207\u6362\u3002 \u9636\u6bb5\u4e09\uff1aS3 \u4e3b\uff0cOSS \u5f85 \u6b64\u9636\u6bb5\u4e3a\u670d\u52a1\u53ef\u7528\u6001\uff0c\u6240\u6709\u6587\u4ef6\u8bfb\u5199\u7ecf S3 \u63d0\u4f9b\u3002OSS \u7b49\u5f85\u6062\u590d \u6587\u4ef6\u670d\u52a1 \u00b6 \u5404\u5e94\u7528\u5bf9\u6587\u4ef6\u670d\u52a1\u7684\u6838\u5fc3\u8bc9\u6c42\u4e3a\uff1a\u4e0a\u4f20\u548c\u4e0b\u8f7d\u3002\u7531 gfs-client \u5bf9\u5916\u63d0\u4f9b client \u7aef\u5de5\u5177\u65b9\u6cd5\u3002 \u9488\u5bf9\u6d4f\u89c8\u5668\u53ca APP \u4e2d\u4f7f\u7528\u5230\u7684\u540e\u7aef\u4e0a\u4f20\u7ba1\u7406\u7684\u6587\u4ef6\u91c7\u7528 GFSR \u76f4\u63a5 302 \u7684\u6a21\u5f0f\u63d0\u4f9b\uff0c\u89e3\u51b3\u6545\u969c\u65f6\u7684\u5207\u6362\u95ee\u9898\u3002","title":"\u5206\u5e03\u5f0f\u5b58\u50a8"},{"location":"grus/gfs/#_1","text":"\u5173\u7231\u901a\u6587\u4ef6\u670d\u52a1\uff08gfs\uff09\uff0c\u57fa\u4e8e\u516c\u6709\u4e91\u5b58\u50a8\u670d\u52a1\u642d\u5efa\u3002","title":"\u5206\u5e03\u5f0f\u5b58\u50a8"},{"location":"grus/gfs/#_2","text":"\u7edf\u4e00 Java \u5e94\u7528\u6587\u4ef6\u5b58\u50a8\u89c4\u8303\uff08\u4e0d\u589e\u52a0\u5f53\u524d\u8fd0\u7ef4\u6210\u672c\uff0c\u89c4\u8303\u5316\u6587\u4ef6\u4e0a\u4f20\u53ca\u63d0\u53d6\u6d41\u7a0b\uff09 \u6587\u4ef6\u5b58\u50a8\u670d\u52a1\u9ad8\u53ef\u7528\uff08\u4e0d\u5355\u70b9\u4f9d\u8d56\u4efb\u4f55\u4e00\u5bb6\u4e91\u5b58\u50a8\u670d\u52a1\uff0c\u9694\u79bb\u5e95\u5c42\u5b58\u50a8\u8bbe\u65bd\uff09 \u6587\u4ef6\u53ef\u8ffd\u6eaf\uff08\u51cf\u5c11\u6587\u4ef6\u788e\u7247\uff09","title":"\u8bbe\u8ba1\u76ee\u6807"},{"location":"grus/gfs/#_3","text":"\u5e95\u5c42\u5b58\u50a8\uff1a OSS\u3001S3 \u3001Glusterfs\uff08\u540e\u671f\uff09 \u4e2d\u95f4\u670d\u52a1\uff1a\u6587\u4ef6\u4e8c\u7ea7\u6620\u5c04\u3001\u591a\u4e91\u96c6\u6210\u3001\u591a\u4e91\u5207\u6362 \u63a5\u5165\u670d\u52a1\uff1agfs client\u3001gfsr\uff08\u516c\u5171\u6587\u4ef6\u591a\u4e91\u5207\u6362 redirect\uff09","title":"\u65b9\u6848\u8bbe\u8ba1"},{"location":"grus/gfs/#_4","text":"\u9636\u6bb5\u4e00\uff1aOSS \u4e3b\uff0cS3 \u5907 \u6b64\u9636\u6bb5\u4e3a GFS \u5065\u5eb7\u7ec8\u6001\uff0c\u6240\u6709\u6587\u4ef6\u7684\u8bfb\u5199\u90fd\u7531 OSS \u63d0\u4f9b\u3002GFS \u540e\u53f0\u5e38\u9a7b\u7ebf\u7a0b\u8fdb\u884c\u6587\u4ef6\u591a\u4e91\u4f20\u9012\u53ca\u4e34\u65f6\u6587\u4ef6\u6e05\u7406\u5de5\u4f5c\u3002 \u9636\u6bb5\u4e8c\uff1aOSS \u5b95\uff0cS3 \u5907 \u6b64\u9636\u6bb5\u4e3a\u6545\u969c\u5224\u5b9a\u9636\u6bb5\uff0c\u4e00\u671f\u8bbe\u8ba1\u4e3a\u624b\u52a8\u5207\u6362\u3002 \u9636\u6bb5\u4e09\uff1aS3 \u4e3b\uff0cOSS \u5f85 \u6b64\u9636\u6bb5\u4e3a\u670d\u52a1\u53ef\u7528\u6001\uff0c\u6240\u6709\u6587\u4ef6\u8bfb\u5199\u7ecf S3 \u63d0\u4f9b\u3002OSS \u7b49\u5f85\u6062\u590d","title":"\u6545\u969c\u5207\u6362"},{"location":"grus/gfs/#_5","text":"\u5404\u5e94\u7528\u5bf9\u6587\u4ef6\u670d\u52a1\u7684\u6838\u5fc3\u8bc9\u6c42\u4e3a\uff1a\u4e0a\u4f20\u548c\u4e0b\u8f7d\u3002\u7531 gfs-client \u5bf9\u5916\u63d0\u4f9b client \u7aef\u5de5\u5177\u65b9\u6cd5\u3002 \u9488\u5bf9\u6d4f\u89c8\u5668\u53ca APP \u4e2d\u4f7f\u7528\u5230\u7684\u540e\u7aef\u4e0a\u4f20\u7ba1\u7406\u7684\u6587\u4ef6\u91c7\u7528 GFSR \u76f4\u63a5 302 \u7684\u6a21\u5f0f\u63d0\u4f9b\uff0c\u89e3\u51b3\u6545\u969c\u65f6\u7684\u5207\u6362\u95ee\u9898\u3002","title":"\u6587\u4ef6\u670d\u52a1"},{"location":"grus/gfs/gfs-sdk/","text":"gfs-client \u4f7f\u7528\u8bf4\u660e \u00b6 Motivation \u00b6 \u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u6587\u4ef6\u4e0a\u4f20\u5904\u7406\u5c5e\u4e8e\u65e0\u72b6\u6001\u8bf7\u6c42\uff0c\u591a\u4e2a\u5e94\u7528\u526f\u672c\u9700\u5904\u7406\u67d0\u4e2a\u56fa\u5b9a\u7684\u4e1a\u52a1\u6587\u4ef6\u3002 \u7edf\u4e00 Java \u5e94\u7528\u6587\u4ef6\u5b58\u50a8\u89c4\u8303 \u57fa\u4e8e OSS \u5b8c\u6210\u5b58\u50a8\uff08\u76ee\u524d\u529f\u80fd\uff0c\u540e\u7eed\u5c06\u7ee7\u7eed\u62d3\u5c55\uff09 \u5de5\u4f5c\u673a\u5236 \u00b6 OSS \u4e2d\u5b9a\u4e49 3 \u4e2a bucket \u5b58\u50a8\u5f53\u524d\u4e1a\u52a1\u5e94\u7528\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u548c\u4e1a\u52a1\u5f52\u6863\u6587\u4ef6\u3002 bucket access domain \u6743\u9650 gatimg1 http://img1.guanaitong.com/ \u516c\u5f00 gatfile http://file.guanaitong.com/ \u516c\u5f00 gatbizfile http://bizfile.guanaitong.com/ \u79c1\u6709 \u5355\u5217\u51fa gatimg1 \uff0c\u7528\u4e8e\u4e2a\u6027\u5316\u914d\u7f6e CDN \u7b56\u7565 \u7efc\u8ff0\uff1a \u4f20\u7edf HTML \u57fa\u4e8e\u8868\u5355\u63d0\u4ea4\u6570\u636e\u5230\u540e\u7aef\u6807\u51c6 Java \u5e94\u7528 \u6807\u51c6 Java \u5e94\u7528\uff08WS/WEB \u5747\u53ef\uff09\u4f7f\u7528 GfsClient \u5b8c\u6210\u6587\u4ef6\u4e0a\u4f20 \u6807\u51c6 VUE \u5355\u9875\u5e94\u7528\u57fa\u4e8e\u4e0a\u4f20\u7ec4\u4ef6\u501f\u52a9 MGR-GATEWAY-COMMON \u4f7f\u7528\u573a\u666f \u00b6 \u666e\u901a\u6587\u4ef6 \u00b6 \u7528\u6237\u5934\u50cf \u5546\u54c1\u56fe\u7247 \u4f01\u4e1a Logo \u53ca\u8d44\u6e90\u7d20\u6750 \u4f01\u4e1a\u7ad9\u516c\u5f00\u8d44\u6e90 \u9ad8\u9891\u65e0\u9690\u79c1\u56fe\u7247\u7c7b \u00b6 \u5efa\u8bae\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a /** * \u76f4\u63a5\u4e0a\u4f20\u56fe\u7247(\u63a8\u8350\u5934\u50cf\u548c\u5546\u54c1\u516c\u5f00\u56fe\u7247\u573a\u666f\u4f7f\u7528) * * @param data \u56fe\u7247\u540d\u79f0 * @param originalFileName \u56fe\u7247\u6587\u4ef6\u540d * @return \u56fe\u7247\u8bbf\u95ee\u94fe\u63a5 */ public String uploadImg ( byte [] data , String originalFileName ) { return uploadImgDirectly ( data , originalFileName , null ); } //Client \u4ee3\u7801 String imgAccessUrl = gfsClient . uploadImg ( sampleData , file . getName ()); \u9ad8\u9891\u65e0\u9690\u79c1\u6587\u4ef6\u7d20\u6750 \u00b6 // \u6b64\u65f6\u8fd4\u56de\u7684URL \u53ef\u76f4\u63a5\u4e0b\u8f7d\u6539\u6587\u4ef6 String accessUrl = gfsClient . uploadPublicFile ( file . getBytes (), originalFilename ); gatimg1 **\u548c **gatfile bucket \u56e0\u5386\u53f2\u9057\u7559\u539f\u56e0\u8f83\u4e3a\u6df7\u4e71\u3002\u6267\u884c\u9ad8\u53ef\u7528\u591a\u4e91\u5b58\u50a8\u7b56\u7565 \u6587\u4ef6\u5bfc\u5165\u5bfc\u51fa \u00b6 TO B \u4e1a\u52a1\u7ba1\u7406\u7ebf\u4e2d\u9700\u8981\u5bfc\u51fa\u5404\u79cd\u6587\u4ef6\u3002\u6b64\u7c7b\u573a\u666f\u4e2d\u5bfc\u51fa\u7684\u6587\u4ef6\u5177\u6709\u654f\u611f\u5ea6\u9ad8\uff0c\u4e34\u65f6\u6027\u5b58\u50a8\u7684\u7279\u70b9 \u5bfc\u51fa\u5458\u5de5\u5217\u8868 \u5bfc\u51fa\u8d26\u5355\u660e\u7ec6 \u5bfc\u5165\u79ef\u5206\u53d1\u653e \u5bfc\u5165\u90e8\u95e8\u5458\u5de5\u5173\u7cfb \u5bfc\u5165\u7eb3\u7a0e\u4eba\u5f52\u5c5e\u5173\u7cfb \u89c4\u8303\uff1a \u79c1\u6709 bucket \u5b58\u50a8 \uff0c\u4e0d\u4f20\u9012 osskey\uff0c\u53ea\u4f20\u9012\u6587\u4ef6\u539f\u59cb\u540d\u79f0\uff08\u5305\u542b\u6587\u4ef6\u540e\u7f00\uff09 \u6b64\u7c7b\u5b58\u50a8\u65e0\u9700\u62a5\u5907 \u539f\u5219\uff1a\u4e34\u65f6\u6027\u9ad8\u654f\u611f\u6587\u4ef6\u7cfb\u7edf\u6267\u884c**\u9694\u5468\u56de\u6536\u7b56\u7565** PS\uff1a\u540e\u7eed Client \u4ee3\u7801\u4e2d\u5c06\u4e0d\u518d\u63d0\u4f9b\u5220\u9664\u65b9\u6cd5 /** * \u4e0a\u4f20\u79c1\u6709\u6587\u4ef6(\u9002\u7528\u4e8e\u5bfc\u5165\u5bfc\u51fa\u4e34\u65f6\u6587\u4ef6\u573a\u666f\uff0c\u6b64\u6587\u4ef6\u4f1a\u5b9a\u671f\u6e05\u7406) * * @param data \u79c1\u6709\u6587\u4ef6\u5b57\u8282\u6d41 * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d * @return \u8fd4\u56de\u79c1\u6709\u6587\u4ef6\u8bbf\u95eeURL\uff08\u9700\u518d\u6b21\u8bf7\u6c42\u83b7\u53d6\u6700\u7ec8\u8bbf\u95eeURL\uff09 */ public String uploadPrivateFile ( byte [] data , String originalFileName ) { return uploadPrivateFile ( data , defaultOssFileKey ( data , originalFileName ), originalFileName , true , null ); } // Client \u4ee3\u7801\uff1a String privateFileAccessUrl = gfsClient . uploadPrivateFile ( sampleData , \"signature.png\" ); // \u79c1\u6709\u6587\u4ef6\u8fd4\u56de\u7684URL \u9700\u8981\u6267\u884cgetDownloadUrl4PrivateFile \u624d\u80fd\u4e0b\u8f7d LOGGER . info ( \"\u6587\u4ef6\u8bbf\u95ee\u5730\u5740\uff1a{}\" , gfsClient . getDownloadUrl4PrivateFile ( privateFileAccessUrl )); \u6587\u4ef6\u5f52\u6863 \u00b6 \u7535\u5b50\u5408\u540c \u7535\u5b50\u53d1\u7968 \u7535\u5b50\u8d26\u5355 \u8eab\u4efd\u8bc1 \u8425\u4e1a\u6267\u7167 \u89c4\u8303\uff1a \u79c1\u6709 bucket \u5b58\u50a8 \uff0c\u9700\u4f20\u9012 osskey\uff0c\u5e76\u4f20\u9012\u6587\u4ef6\u539f\u59cb\u540d \u6b64\u7c7b\u5b58\u50a8\u9700\u62a5\u5907 \u539f\u5219\uff1a\u6c38\u4e45\u6027\u9ad8\u654f\u611f\u6587\u4ef6\u7cfb\u7edf\u6267\u884c**\u8de8\u5e74\u5f52\u6863\u7b56\u7565** /** * \u57fa\u4e8e\u5b57\u8282\u6d41, \u6587\u4ef6\u5bf9\u8c61Key\uff0c\u4e0b\u8f7d\u6587\u4ef6\u540d\u4e0a\u4f20\u79c1\u6709\u6587\u4ef6\u3002 * * @param data \u539f\u6587\u4ef6\u5b57\u8282\u6570\u7ec4 * @param ossFileKey \u6587\u4ef6key * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d\uff08\u7528\u4e8e\u4e0b\u8f7d\uff09 * @return \u8fd4\u56de\u79c1\u6709\u6587\u4ef6\u8bbf\u95eeURL\uff08\u9700\u518d\u6b21\u8bf7\u6c42\u83b7\u53d6\u6700\u7ec8\u8bbf\u95eeURL\uff09 */ public String uploadPrivateFile ( byte [] data , String ossFileKey , String originalFileName ) { return uploadPrivateFile ( data , ossFileKey , originalFileName , null ); } // Client \u4ee3\u7801\uff08\u663e\u5f0f\u6307\u5b9a\u6587\u4ef6\u5b58\u50a8key \u5982\u7535\u5b50\u53d1\u7968\uff09 // String ossKey = \"einvoice/\" + env + \"/\" + enterpriseId + \"/\" + fileName; String fileName = invoiceId + \".zip\" ; String ossKey = \"einvoice/\" + env + \"/\" + enterpriseId + \"/\" + fileName ; gfsClient . uploadPrivateFile ( byteArrayOutputStream . toByteArray (), ossKey , fileName ); \u4f7f\u7528\u8bf4\u660e \u00b6 \u524d\u63d0\uff1a\u5347\u7ea7\u5230 grus \u6846\u67b6 Usage \u00b6 Step 1\uff1a\u5f15\u5165\u4f9d\u8d56 grus-boot-starter-gfs, grus \u6846\u67b6\u4f53\u7cfb\u4e0b\uff0c\u4e0d\u63a8\u8350\u6307\u5b9a\u7248\u672c\u3002 <dependency> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-gfs </artifactId> </dependency> Step 2 : \u57fa\u4e8e\u6784\u9020\u51fd\u6570\u6ce8\u5165 GfsClient private final GfsClient gfsClient ; @Autowired public XxxService ( GfsClient gfsClient ) { this . gfsClient = gfsClient ; } Step 3\uff1a\u4e0a\u4f20\u516c\u5171\u6587\u4ef6\u8fd4\u56de\u8bbf\u95ee URL\uff08Controller \u5c42\u5904\u7406\u6837\u4f8b\uff09 @PostMapping ( \"/uppub\" ) public ApiResponse < UploadResponse > uploadToPublic ( MultipartFile file ) { UploadResponse response = new UploadResponse (); String originalFilename = file . getOriginalFilename (); try { String accessUrl = gfsClient . uploadPublicFile ( file . getBytes (), originalFilename ); response . setSuccess ( true ); response . setOriginFileName ( originalFilename ); response . setUploadUrl ( accessUrl ); } catch ( IOException e ) { throw new BusinessRuntimeException ( - 1 , \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\" ); } return ApiResponse . success ( response ); } \u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\u4e0a\u4f20\u6837\u4f8b\u5c31 OK \u4e86\u3002 \u6700\u4f73\u5b9e\u8df5 \u00b6 \u57fa\u4e8e\u89c4\u5219\u4ea7\u751f ossFileKey \u00b6 \u9ed8\u8ba4\u89c4\u5219\uff1a grus-gfs/ \\({env}/\\) /by-days/yyyy-MM-dd/md5(data).Suffix /** * \u786e\u5b9aOSS\u5bf9\u8c61\u6700\u7ec8\u5b58\u50a8\u7684\u6587\u4ef6\u5bf9\u8c61key * * @param data \u6587\u4ef6\u5b57\u8282\u6d41 * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d * @return \u751f\u6210\u540e\u7684\u6587\u4ef6\u540d */ private String defaultOssFileKey ( byte [] data , String originalFileName ) { StringBuffer gfsDefaultBuffer = new StringBuffer ( \"grus-gfs\" ); gfsDefaultBuffer . append ( \"/\" ). append ( Systems . WORK_ENV ); gfsDefaultBuffer . append ( \"/\" ). append ( Systems . APP_NAME ); gfsDefaultBuffer . append ( \"/\" ). append ( \"by-days\" ); // \u9ed8\u8ba4\u5b58\u50a8\u903b\u8f91\u4e3a\uff1a\u6309\u65e5\u671f\u5207\u5206 gfsDefaultBuffer . append ( \"/\" ). append ( LocalDateTime . now (). format ( DATE_TIME_FORMATTER )); gfsDefaultBuffer . append ( \"/\" ). append ( DigestUtils . md5Hex ( data )); gfsDefaultBuffer . append ( getSuffix ( originalFileName )); return gfsDefaultBuffer . toString (); } \u9488\u5bf9\u5f52\u6863\u7c7b\u6587\u4ef6\u5b58\u50a8\uff0c\u5fc5\u987b\u81ea\u5b9a\u4e49\u7b26\u5408\u89c4\u5219\u7684 OssKey\uff08\u4ee3\u7801\u9759\u6001\u626b\u63cf\u53d1\u73b0\u672a\u62a5\u5907 KEY \u5c06\u7ec8\u6b62\u4e0a\u4f20\uff09\u3002 @atschx \u4e8e 2019 \u5e74 07 \u6708 16 \u65e5","title":"gfs-client\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/gfs/gfs-sdk/#gfs-client","text":"","title":"gfs-client \u4f7f\u7528\u8bf4\u660e"},{"location":"grus/gfs/gfs-sdk/#motivation","text":"\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u6587\u4ef6\u4e0a\u4f20\u5904\u7406\u5c5e\u4e8e\u65e0\u72b6\u6001\u8bf7\u6c42\uff0c\u591a\u4e2a\u5e94\u7528\u526f\u672c\u9700\u5904\u7406\u67d0\u4e2a\u56fa\u5b9a\u7684\u4e1a\u52a1\u6587\u4ef6\u3002 \u7edf\u4e00 Java \u5e94\u7528\u6587\u4ef6\u5b58\u50a8\u89c4\u8303 \u57fa\u4e8e OSS \u5b8c\u6210\u5b58\u50a8\uff08\u76ee\u524d\u529f\u80fd\uff0c\u540e\u7eed\u5c06\u7ee7\u7eed\u62d3\u5c55\uff09","title":"Motivation"},{"location":"grus/gfs/gfs-sdk/#_1","text":"OSS \u4e2d\u5b9a\u4e49 3 \u4e2a bucket \u5b58\u50a8\u5f53\u524d\u4e1a\u52a1\u5e94\u7528\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u548c\u4e1a\u52a1\u5f52\u6863\u6587\u4ef6\u3002 bucket access domain \u6743\u9650 gatimg1 http://img1.guanaitong.com/ \u516c\u5f00 gatfile http://file.guanaitong.com/ \u516c\u5f00 gatbizfile http://bizfile.guanaitong.com/ \u79c1\u6709 \u5355\u5217\u51fa gatimg1 \uff0c\u7528\u4e8e\u4e2a\u6027\u5316\u914d\u7f6e CDN \u7b56\u7565 \u7efc\u8ff0\uff1a \u4f20\u7edf HTML \u57fa\u4e8e\u8868\u5355\u63d0\u4ea4\u6570\u636e\u5230\u540e\u7aef\u6807\u51c6 Java \u5e94\u7528 \u6807\u51c6 Java \u5e94\u7528\uff08WS/WEB \u5747\u53ef\uff09\u4f7f\u7528 GfsClient \u5b8c\u6210\u6587\u4ef6\u4e0a\u4f20 \u6807\u51c6 VUE \u5355\u9875\u5e94\u7528\u57fa\u4e8e\u4e0a\u4f20\u7ec4\u4ef6\u501f\u52a9 MGR-GATEWAY-COMMON","title":"\u5de5\u4f5c\u673a\u5236"},{"location":"grus/gfs/gfs-sdk/#_2","text":"","title":"\u4f7f\u7528\u573a\u666f"},{"location":"grus/gfs/gfs-sdk/#_3","text":"\u7528\u6237\u5934\u50cf \u5546\u54c1\u56fe\u7247 \u4f01\u4e1a Logo \u53ca\u8d44\u6e90\u7d20\u6750 \u4f01\u4e1a\u7ad9\u516c\u5f00\u8d44\u6e90","title":"\u666e\u901a\u6587\u4ef6"},{"location":"grus/gfs/gfs-sdk/#_4","text":"\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a /** * \u76f4\u63a5\u4e0a\u4f20\u56fe\u7247(\u63a8\u8350\u5934\u50cf\u548c\u5546\u54c1\u516c\u5f00\u56fe\u7247\u573a\u666f\u4f7f\u7528) * * @param data \u56fe\u7247\u540d\u79f0 * @param originalFileName \u56fe\u7247\u6587\u4ef6\u540d * @return \u56fe\u7247\u8bbf\u95ee\u94fe\u63a5 */ public String uploadImg ( byte [] data , String originalFileName ) { return uploadImgDirectly ( data , originalFileName , null ); } //Client \u4ee3\u7801 String imgAccessUrl = gfsClient . uploadImg ( sampleData , file . getName ());","title":"\u9ad8\u9891\u65e0\u9690\u79c1\u56fe\u7247\u7c7b"},{"location":"grus/gfs/gfs-sdk/#_5","text":"// \u6b64\u65f6\u8fd4\u56de\u7684URL \u53ef\u76f4\u63a5\u4e0b\u8f7d\u6539\u6587\u4ef6 String accessUrl = gfsClient . uploadPublicFile ( file . getBytes (), originalFilename ); gatimg1 **\u548c **gatfile bucket \u56e0\u5386\u53f2\u9057\u7559\u539f\u56e0\u8f83\u4e3a\u6df7\u4e71\u3002\u6267\u884c\u9ad8\u53ef\u7528\u591a\u4e91\u5b58\u50a8\u7b56\u7565","title":"\u9ad8\u9891\u65e0\u9690\u79c1\u6587\u4ef6\u7d20\u6750"},{"location":"grus/gfs/gfs-sdk/#_6","text":"TO B \u4e1a\u52a1\u7ba1\u7406\u7ebf\u4e2d\u9700\u8981\u5bfc\u51fa\u5404\u79cd\u6587\u4ef6\u3002\u6b64\u7c7b\u573a\u666f\u4e2d\u5bfc\u51fa\u7684\u6587\u4ef6\u5177\u6709\u654f\u611f\u5ea6\u9ad8\uff0c\u4e34\u65f6\u6027\u5b58\u50a8\u7684\u7279\u70b9 \u5bfc\u51fa\u5458\u5de5\u5217\u8868 \u5bfc\u51fa\u8d26\u5355\u660e\u7ec6 \u5bfc\u5165\u79ef\u5206\u53d1\u653e \u5bfc\u5165\u90e8\u95e8\u5458\u5de5\u5173\u7cfb \u5bfc\u5165\u7eb3\u7a0e\u4eba\u5f52\u5c5e\u5173\u7cfb \u89c4\u8303\uff1a \u79c1\u6709 bucket \u5b58\u50a8 \uff0c\u4e0d\u4f20\u9012 osskey\uff0c\u53ea\u4f20\u9012\u6587\u4ef6\u539f\u59cb\u540d\u79f0\uff08\u5305\u542b\u6587\u4ef6\u540e\u7f00\uff09 \u6b64\u7c7b\u5b58\u50a8\u65e0\u9700\u62a5\u5907 \u539f\u5219\uff1a\u4e34\u65f6\u6027\u9ad8\u654f\u611f\u6587\u4ef6\u7cfb\u7edf\u6267\u884c**\u9694\u5468\u56de\u6536\u7b56\u7565** PS\uff1a\u540e\u7eed Client \u4ee3\u7801\u4e2d\u5c06\u4e0d\u518d\u63d0\u4f9b\u5220\u9664\u65b9\u6cd5 /** * \u4e0a\u4f20\u79c1\u6709\u6587\u4ef6(\u9002\u7528\u4e8e\u5bfc\u5165\u5bfc\u51fa\u4e34\u65f6\u6587\u4ef6\u573a\u666f\uff0c\u6b64\u6587\u4ef6\u4f1a\u5b9a\u671f\u6e05\u7406) * * @param data \u79c1\u6709\u6587\u4ef6\u5b57\u8282\u6d41 * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d * @return \u8fd4\u56de\u79c1\u6709\u6587\u4ef6\u8bbf\u95eeURL\uff08\u9700\u518d\u6b21\u8bf7\u6c42\u83b7\u53d6\u6700\u7ec8\u8bbf\u95eeURL\uff09 */ public String uploadPrivateFile ( byte [] data , String originalFileName ) { return uploadPrivateFile ( data , defaultOssFileKey ( data , originalFileName ), originalFileName , true , null ); } // Client \u4ee3\u7801\uff1a String privateFileAccessUrl = gfsClient . uploadPrivateFile ( sampleData , \"signature.png\" ); // \u79c1\u6709\u6587\u4ef6\u8fd4\u56de\u7684URL \u9700\u8981\u6267\u884cgetDownloadUrl4PrivateFile \u624d\u80fd\u4e0b\u8f7d LOGGER . info ( \"\u6587\u4ef6\u8bbf\u95ee\u5730\u5740\uff1a{}\" , gfsClient . getDownloadUrl4PrivateFile ( privateFileAccessUrl ));","title":"\u6587\u4ef6\u5bfc\u5165\u5bfc\u51fa"},{"location":"grus/gfs/gfs-sdk/#_7","text":"\u7535\u5b50\u5408\u540c \u7535\u5b50\u53d1\u7968 \u7535\u5b50\u8d26\u5355 \u8eab\u4efd\u8bc1 \u8425\u4e1a\u6267\u7167 \u89c4\u8303\uff1a \u79c1\u6709 bucket \u5b58\u50a8 \uff0c\u9700\u4f20\u9012 osskey\uff0c\u5e76\u4f20\u9012\u6587\u4ef6\u539f\u59cb\u540d \u6b64\u7c7b\u5b58\u50a8\u9700\u62a5\u5907 \u539f\u5219\uff1a\u6c38\u4e45\u6027\u9ad8\u654f\u611f\u6587\u4ef6\u7cfb\u7edf\u6267\u884c**\u8de8\u5e74\u5f52\u6863\u7b56\u7565** /** * \u57fa\u4e8e\u5b57\u8282\u6d41, \u6587\u4ef6\u5bf9\u8c61Key\uff0c\u4e0b\u8f7d\u6587\u4ef6\u540d\u4e0a\u4f20\u79c1\u6709\u6587\u4ef6\u3002 * * @param data \u539f\u6587\u4ef6\u5b57\u8282\u6570\u7ec4 * @param ossFileKey \u6587\u4ef6key * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d\uff08\u7528\u4e8e\u4e0b\u8f7d\uff09 * @return \u8fd4\u56de\u79c1\u6709\u6587\u4ef6\u8bbf\u95eeURL\uff08\u9700\u518d\u6b21\u8bf7\u6c42\u83b7\u53d6\u6700\u7ec8\u8bbf\u95eeURL\uff09 */ public String uploadPrivateFile ( byte [] data , String ossFileKey , String originalFileName ) { return uploadPrivateFile ( data , ossFileKey , originalFileName , null ); } // Client \u4ee3\u7801\uff08\u663e\u5f0f\u6307\u5b9a\u6587\u4ef6\u5b58\u50a8key \u5982\u7535\u5b50\u53d1\u7968\uff09 // String ossKey = \"einvoice/\" + env + \"/\" + enterpriseId + \"/\" + fileName; String fileName = invoiceId + \".zip\" ; String ossKey = \"einvoice/\" + env + \"/\" + enterpriseId + \"/\" + fileName ; gfsClient . uploadPrivateFile ( byteArrayOutputStream . toByteArray (), ossKey , fileName );","title":"\u6587\u4ef6\u5f52\u6863"},{"location":"grus/gfs/gfs-sdk/#_8","text":"\u524d\u63d0\uff1a\u5347\u7ea7\u5230 grus \u6846\u67b6","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/gfs/gfs-sdk/#usage","text":"Step 1\uff1a\u5f15\u5165\u4f9d\u8d56 grus-boot-starter-gfs, grus \u6846\u67b6\u4f53\u7cfb\u4e0b\uff0c\u4e0d\u63a8\u8350\u6307\u5b9a\u7248\u672c\u3002 <dependency> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-gfs </artifactId> </dependency> Step 2 : \u57fa\u4e8e\u6784\u9020\u51fd\u6570\u6ce8\u5165 GfsClient private final GfsClient gfsClient ; @Autowired public XxxService ( GfsClient gfsClient ) { this . gfsClient = gfsClient ; } Step 3\uff1a\u4e0a\u4f20\u516c\u5171\u6587\u4ef6\u8fd4\u56de\u8bbf\u95ee URL\uff08Controller \u5c42\u5904\u7406\u6837\u4f8b\uff09 @PostMapping ( \"/uppub\" ) public ApiResponse < UploadResponse > uploadToPublic ( MultipartFile file ) { UploadResponse response = new UploadResponse (); String originalFilename = file . getOriginalFilename (); try { String accessUrl = gfsClient . uploadPublicFile ( file . getBytes (), originalFilename ); response . setSuccess ( true ); response . setOriginFileName ( originalFilename ); response . setUploadUrl ( accessUrl ); } catch ( IOException e ) { throw new BusinessRuntimeException ( - 1 , \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\" ); } return ApiResponse . success ( response ); } \u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\u4e0a\u4f20\u6837\u4f8b\u5c31 OK \u4e86\u3002","title":"Usage"},{"location":"grus/gfs/gfs-sdk/#_9","text":"","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"grus/gfs/gfs-sdk/#ossfilekey","text":"\u9ed8\u8ba4\u89c4\u5219\uff1a grus-gfs/ \\({env}/\\) /by-days/yyyy-MM-dd/md5(data).Suffix /** * \u786e\u5b9aOSS\u5bf9\u8c61\u6700\u7ec8\u5b58\u50a8\u7684\u6587\u4ef6\u5bf9\u8c61key * * @param data \u6587\u4ef6\u5b57\u8282\u6d41 * @param originalFileName \u539f\u59cb\u6587\u4ef6\u540d * @return \u751f\u6210\u540e\u7684\u6587\u4ef6\u540d */ private String defaultOssFileKey ( byte [] data , String originalFileName ) { StringBuffer gfsDefaultBuffer = new StringBuffer ( \"grus-gfs\" ); gfsDefaultBuffer . append ( \"/\" ). append ( Systems . WORK_ENV ); gfsDefaultBuffer . append ( \"/\" ). append ( Systems . APP_NAME ); gfsDefaultBuffer . append ( \"/\" ). append ( \"by-days\" ); // \u9ed8\u8ba4\u5b58\u50a8\u903b\u8f91\u4e3a\uff1a\u6309\u65e5\u671f\u5207\u5206 gfsDefaultBuffer . append ( \"/\" ). append ( LocalDateTime . now (). format ( DATE_TIME_FORMATTER )); gfsDefaultBuffer . append ( \"/\" ). append ( DigestUtils . md5Hex ( data )); gfsDefaultBuffer . append ( getSuffix ( originalFileName )); return gfsDefaultBuffer . toString (); } \u9488\u5bf9\u5f52\u6863\u7c7b\u6587\u4ef6\u5b58\u50a8\uff0c\u5fc5\u987b\u81ea\u5b9a\u4e49\u7b26\u5408\u89c4\u5219\u7684 OssKey\uff08\u4ee3\u7801\u9759\u6001\u626b\u63cf\u53d1\u73b0\u672a\u62a5\u5907 KEY \u5c06\u7ec8\u6b62\u4e0a\u4f20\uff09\u3002 @atschx \u4e8e 2019 \u5e74 07 \u6708 16 \u65e5","title":"\u57fa\u4e8e\u89c4\u5219\u4ea7\u751f ossFileKey"},{"location":"grus/introduction/autoconfigure/","text":"autoconfigure \u6a21\u5757 \u00b6 pom \u00b6 autoconfigure \u662f grus-boot \u548c spring-boot \u6700\u91cd\u8981\u7684\u6a21\u5757\uff0c\u4e24\u8005\u8bbe\u8ba1\u67b6\u6784\u548c\u539f\u7406\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff08grus-boot \u5b66\u4e60\u7684 spring-boot\uff09\u3002\u5927\u5bb6\u5b66\u4f1a\u770b autoconfigure\uff0c\u90a3\u4e48\u5bf9\u65e5\u5e38\u7684\u5de5\u4f5c\u6709\u975e\u5e38\u5de8\u5927\u7684\u5e2e\u52a9\u3002 \u5927\u5bb6\u770b\u4e24\u8005\u7684 pom \u6587\u4ef6\uff0c grus-boot-autoconfigure-pom \u548c spring-boot-autoconfigure-pom \u5927\u90e8\u5206\u7684\u4f9d\u8d56\u90fd\u662f <optional>true</optional> \u3002\u8fd9\u4e2a\u8868\u793a\uff0c\u53ea\u6709 autoconfigure \u6e90\u7801\u7f16\u8bd1\u65f6\u624d\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u6700\u7ec8\u5e94\u7528\u5f15\u7528 autoconfigure\uff0c\u5176\u5bf9\u90a3\u4e9b jar \u5176\u5b9e\u4e0d\u5b58\u5728\u76f4\u63a5\u7684\u4f9d\u8d56\u5173\u7cfb\u3002 spring.factories \u00b6 SpringBoot \u6709\u7c7b\u4f3c\u4e8e Java SPI\uff08Service Provider Interface\uff09\u7684\u673a\u5236\uff0c spring.factories \u4e3b\u8981\u7528\u4e8e SpringBoot \u5b9e\u73b0\u4e00\u5957\u7528\u6765\u88ab\u7b2c\u4e09\u65b9\u5b9e\u73b0\u6216\u8005\u6269\u5c55\u7684 API\u3002 grus-boot \u7684 spring.factories \u6587\u4ef6\u5185\u5bb9\uff1a grus-boot's spring.factories springboot \u5728\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6309\u7167\u6587\u4ef6\u4e2d\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u5b9e\u4f8b\u5316\u76f8\u5173\u7684 ContextInitializer \u548c AutoConfiguration\u3002\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u8fc7\u7a0b\u3002 \u8fd9\u4e5f\u662f\uff0cspringboot \u5b9e\u73b0\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u7840\u3002 \u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 grus-boot \u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4ec0\u4e48\u6a21\u5757\u3002 AutoConfiguration \u00b6 AutoConfiguration \u662f springboot \u7684\u6838\u5fc3\uff0c\u5fc5\u987b\u641e\u61c2\u5176\u5de5\u4f5c\u673a\u5236\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a OpenTracingAutoConfiguration OpenTracingAutoConfiguration \u662f\u52a0\u4e86 @Configuration \u6ce8\u89e3\u3002\u8be5\u7c7b\u7684\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u770b\u5230\u5176\u4f5c\u7528\uff1a // Indicates that a class declares one or more @Bean methods and // may be processed by the Spring container to generate bean definitions // and service requests for those beans at runtime, for example: @Configuration public class AppConfig { @Bean public MyBean myBean () { // instantiate, configure and return bean ... } } \u5927\u5bb6\u9700\u8981\u5bf9\u5e38\u7528\u7684 AutoConfiguration \u7c7b\u90fd\u6709\u4e00\u4e2a\u5370\u8c61\uff0c\u77e5\u9053\u5176\u4f1a\u81ea\u52a8\u6ce8\u5165\u54ea\u4e9b Bean \u3002 \u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff1a GconfAutoConfiguration @Configuration @ConditionalOnClass ( ConfigCollectionFactory . class ) @ConditionalOnProperty ( prefix = \"grus.gconf\" , value = \"enabled\" , havingValue = \"true\" , matchIfMissing = true ) public class GconfAutoConfiguration { @Bean @ConditionalOnMissingBean public ConfigCollectionFactory configCollectionFactory () { return RemoteConfigCollectionFactoryBuilder . getInstance (); } @Bean @ConditionalOnMissingBean public ConfigCollection configCollection ( ConfigCollectionFactory configCollectionFactory ) { return configCollectionFactory . getConfigCollection (); } } GconfAutoConfiguration \u4f1a\u81ea\u52a8 import ConfigCollectionFactory \u548c ConfigCollection \u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u91cc\u76f4\u63a5 @Autowired \u8fd9\u4e24\u4e2a\u5bf9\u8c61\u3002 RedisAutoConfiguration @Configuration @ConditionalOnClass ( RedisOperations . class ) @EnableConfigurationProperties ( RedisProperties . class ) @Import ({ LettuceConnectionConfiguration . class , JedisConnectionConfiguration . class }) public class RedisAutoConfiguration { @Bean @ConditionalOnMissingBean ( name = \"redisTemplate\" ) public RedisTemplate < Object , Object > redisTemplate ( RedisConnectionFactory redisConnectionFactory ) throws UnknownHostException { RedisTemplate < Object , Object > template = new RedisTemplate <> (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } @Bean @ConditionalOnMissingBean public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) throws UnknownHostException { StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } } RedisAutoConfiguration \u4f1a\u81ea\u52a8\u5f15\u5165 redisTemplate \u548c stringRedisTemplate \u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u91cc\u76f4\u63a5 @Autowired \u8fd9\u4e24\u4e2a\u5bf9\u8c61\u3002 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u901a\u8fc7 @Configuration \u751f\u6548\u7684 @Bean \uff0c\u9ed8\u8ba4\u662f\u88ab aop \u4ee3\u7406\u8fc7\u7684\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u60f3\u8981\u52a8\u6001\u4ee3\u7406\uff0c\u53ef\u4ee5\u628a @Configuration \u6362 @Component \u3002 Conditional \u00b6 springboot \u63d0\u4f9b\u4e86\u5f88\u591a\u6761\u4ef6\u5224\u65ad\u6ce8\u89e3\uff0c\u53ea\u6709\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\uff0cAutoConfiguration \u624d\u4f1a\u88ab Import \u6216\u8005\u5bf9\u8c61\u624d\u4f1a\u88ab register \u4e3a Bean\u3002 \u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u3001\u6700\u5e38\u89c1\u7684 Conditional \u6ce8\u89e3\uff1a @ConditionalOnClass \u4f7f\u7528\u4e3e\u4f8b\uff1a @Configuration @ConditionalOnClass ({ FeignServiceBuilder . class , feign . Client . class }) @EnableConfigurationProperties ({ FeignProperties . class }) public class FeignAutoConfiguration { } \u542b\u4e49\uff1a \u5f53\u524d\u5e94\u7528\u7a0b\u5e8f classpath \u4e2d\u5b58\u5728 feign.Client \u8fd9\u4e2a\u7c7b\u6587\u4ef6\uff0c\u88ab\u4fee\u9970\u7c7b FeignAutoConfiguration \u624d\u4f1a import \u91cd\u70b9 \uff1a @ConditionalOnClass \u4e00\u822c\u662f\u7528\u4e8e\u914d\u5408 maven pom \u7684\u53ef\u9009\u4f9d\u8d56\u3002\u5b83\u662f\u6574\u4e2a SpringBoot \u9879\u76ee\u7684\u4e00\u4e2a\u6838\u5fc3\u3002\u56e0\u4e3a autoconfigure \u4e2d\u57fa\u672c\u90fd\u662f\u53ef\u9009\u4f9d\u8d56\uff0c\u8fd0\u884c\u65f6\u518d\u901a\u8fc7 starter \u628a\u5b9e\u9645\u4f9d\u8d56\u5f15\u5165\u8fdb\u6765\uff0c\u8fdb\u800c\u6ee1\u8db3 @ConditionalOnClass \uff0c\u5b9e\u9645\u7684 AutoConfiguration \u5c31\u4f1a\u751f\u6548\u3002 \u8fd9\u4e2a\u539f\u7406\uff0c\u5927\u5bb6\u5fc5\u987b\u638c\u63e1 \u3002 @ConditionalOnMissingBean \u4f7f\u7528\u4e3e\u4f8b\uff1a @Bean @ConditionalOnMissingBean public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) { StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } \u542b\u4e49\uff1a \u5f53\u7136 IOC \u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728 redisTemplate \u8fd9\u4e2a bean \u65f6\uff0c\u624d\u4f1a\u628a stringRedisTemplate()\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u4f5c\u4e3a Bean \u6ce8\u518c\u5230 IOC \u5bb9\u5668\u4e2d\u3002 \u91cd\u70b9\uff1a @ConditionalOnMissingBean \u662f springboot \u5728**\u81ea\u52a8\u6ce8\u5165**\u4e0e**\u7528\u6237\u81ea\u5b9a\u4e49**\u4e4b\u95f4\u7684\u8f85\u52a9\u3002\u4e00\u65b9\u9762\uff0c\u6846\u67b6\u5e0c\u671b\u7ec4\u4ef6\u6309\u7167\u6700\u4f73\u5b9e\u8df5\u90fd\u7ea6\u5b9a\u597d\u3001\u7136\u540e\u81ea\u52a8\u7684\u90fd\u542f\u52a8\u8d77\u6765\uff0c\u4e0d\u9700\u8981\u5f00\u53d1\u4ecb\u5165\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f00\u53d1\u53c8\u5b58\u5728\u81ea\u5b9a\u7684\u9700\u6c42\u573a\u666f\uff0c\u6216\u8005\u6bcf\u4e2a\u516c\u53f8\u5bf9\u67d0\u4e9b\u4e2d\u95f4\u4ef6\u7684\u7406\u89e3\u548c\u4f7f\u7528\u4e0d\u540c\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u3002 @ConditionalOnMissingBean \u80fd\u591f\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e0a\u8ff0\u7684\u95ee\u9898\uff1a\u6846\u67b6\u63d0\u4f9b\u4e86\u81ea\u52a8\u7684 Bean\uff0c\u4f46\u662f\u53ea\u6709\u5728\u5f00\u53d1\u6ca1\u6709\u81ea\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u751f\u6548\u3002","title":"Autoconfigure\u6a21\u5757"},{"location":"grus/introduction/autoconfigure/#autoconfigure","text":"","title":"autoconfigure \u6a21\u5757"},{"location":"grus/introduction/autoconfigure/#pom","text":"autoconfigure \u662f grus-boot \u548c spring-boot \u6700\u91cd\u8981\u7684\u6a21\u5757\uff0c\u4e24\u8005\u8bbe\u8ba1\u67b6\u6784\u548c\u539f\u7406\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff08grus-boot \u5b66\u4e60\u7684 spring-boot\uff09\u3002\u5927\u5bb6\u5b66\u4f1a\u770b autoconfigure\uff0c\u90a3\u4e48\u5bf9\u65e5\u5e38\u7684\u5de5\u4f5c\u6709\u975e\u5e38\u5de8\u5927\u7684\u5e2e\u52a9\u3002 \u5927\u5bb6\u770b\u4e24\u8005\u7684 pom \u6587\u4ef6\uff0c grus-boot-autoconfigure-pom \u548c spring-boot-autoconfigure-pom \u5927\u90e8\u5206\u7684\u4f9d\u8d56\u90fd\u662f <optional>true</optional> \u3002\u8fd9\u4e2a\u8868\u793a\uff0c\u53ea\u6709 autoconfigure \u6e90\u7801\u7f16\u8bd1\u65f6\u624d\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u6700\u7ec8\u5e94\u7528\u5f15\u7528 autoconfigure\uff0c\u5176\u5bf9\u90a3\u4e9b jar \u5176\u5b9e\u4e0d\u5b58\u5728\u76f4\u63a5\u7684\u4f9d\u8d56\u5173\u7cfb\u3002","title":"pom"},{"location":"grus/introduction/autoconfigure/#springfactories","text":"SpringBoot \u6709\u7c7b\u4f3c\u4e8e Java SPI\uff08Service Provider Interface\uff09\u7684\u673a\u5236\uff0c spring.factories \u4e3b\u8981\u7528\u4e8e SpringBoot \u5b9e\u73b0\u4e00\u5957\u7528\u6765\u88ab\u7b2c\u4e09\u65b9\u5b9e\u73b0\u6216\u8005\u6269\u5c55\u7684 API\u3002 grus-boot \u7684 spring.factories \u6587\u4ef6\u5185\u5bb9\uff1a grus-boot's spring.factories springboot \u5728\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6309\u7167\u6587\u4ef6\u4e2d\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u5b9e\u4f8b\u5316\u76f8\u5173\u7684 ContextInitializer \u548c AutoConfiguration\u3002\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u8fc7\u7a0b\u3002 \u8fd9\u4e5f\u662f\uff0cspringboot \u5b9e\u73b0\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u7840\u3002 \u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 grus-boot \u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4ec0\u4e48\u6a21\u5757\u3002","title":"spring.factories"},{"location":"grus/introduction/autoconfigure/#autoconfiguration","text":"AutoConfiguration \u662f springboot \u7684\u6838\u5fc3\uff0c\u5fc5\u987b\u641e\u61c2\u5176\u5de5\u4f5c\u673a\u5236\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a OpenTracingAutoConfiguration OpenTracingAutoConfiguration \u662f\u52a0\u4e86 @Configuration \u6ce8\u89e3\u3002\u8be5\u7c7b\u7684\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u770b\u5230\u5176\u4f5c\u7528\uff1a // Indicates that a class declares one or more @Bean methods and // may be processed by the Spring container to generate bean definitions // and service requests for those beans at runtime, for example: @Configuration public class AppConfig { @Bean public MyBean myBean () { // instantiate, configure and return bean ... } } \u5927\u5bb6\u9700\u8981\u5bf9\u5e38\u7528\u7684 AutoConfiguration \u7c7b\u90fd\u6709\u4e00\u4e2a\u5370\u8c61\uff0c\u77e5\u9053\u5176\u4f1a\u81ea\u52a8\u6ce8\u5165\u54ea\u4e9b Bean \u3002 \u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff1a GconfAutoConfiguration @Configuration @ConditionalOnClass ( ConfigCollectionFactory . class ) @ConditionalOnProperty ( prefix = \"grus.gconf\" , value = \"enabled\" , havingValue = \"true\" , matchIfMissing = true ) public class GconfAutoConfiguration { @Bean @ConditionalOnMissingBean public ConfigCollectionFactory configCollectionFactory () { return RemoteConfigCollectionFactoryBuilder . getInstance (); } @Bean @ConditionalOnMissingBean public ConfigCollection configCollection ( ConfigCollectionFactory configCollectionFactory ) { return configCollectionFactory . getConfigCollection (); } } GconfAutoConfiguration \u4f1a\u81ea\u52a8 import ConfigCollectionFactory \u548c ConfigCollection \u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u91cc\u76f4\u63a5 @Autowired \u8fd9\u4e24\u4e2a\u5bf9\u8c61\u3002 RedisAutoConfiguration @Configuration @ConditionalOnClass ( RedisOperations . class ) @EnableConfigurationProperties ( RedisProperties . class ) @Import ({ LettuceConnectionConfiguration . class , JedisConnectionConfiguration . class }) public class RedisAutoConfiguration { @Bean @ConditionalOnMissingBean ( name = \"redisTemplate\" ) public RedisTemplate < Object , Object > redisTemplate ( RedisConnectionFactory redisConnectionFactory ) throws UnknownHostException { RedisTemplate < Object , Object > template = new RedisTemplate <> (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } @Bean @ConditionalOnMissingBean public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) throws UnknownHostException { StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } } RedisAutoConfiguration \u4f1a\u81ea\u52a8\u5f15\u5165 redisTemplate \u548c stringRedisTemplate \u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u91cc\u76f4\u63a5 @Autowired \u8fd9\u4e24\u4e2a\u5bf9\u8c61\u3002 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u901a\u8fc7 @Configuration \u751f\u6548\u7684 @Bean \uff0c\u9ed8\u8ba4\u662f\u88ab aop \u4ee3\u7406\u8fc7\u7684\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u60f3\u8981\u52a8\u6001\u4ee3\u7406\uff0c\u53ef\u4ee5\u628a @Configuration \u6362 @Component \u3002","title":"AutoConfiguration"},{"location":"grus/introduction/autoconfigure/#conditional","text":"springboot \u63d0\u4f9b\u4e86\u5f88\u591a\u6761\u4ef6\u5224\u65ad\u6ce8\u89e3\uff0c\u53ea\u6709\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\uff0cAutoConfiguration \u624d\u4f1a\u88ab Import \u6216\u8005\u5bf9\u8c61\u624d\u4f1a\u88ab register \u4e3a Bean\u3002 \u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u3001\u6700\u5e38\u89c1\u7684 Conditional \u6ce8\u89e3\uff1a @ConditionalOnClass \u4f7f\u7528\u4e3e\u4f8b\uff1a @Configuration @ConditionalOnClass ({ FeignServiceBuilder . class , feign . Client . class }) @EnableConfigurationProperties ({ FeignProperties . class }) public class FeignAutoConfiguration { } \u542b\u4e49\uff1a \u5f53\u524d\u5e94\u7528\u7a0b\u5e8f classpath \u4e2d\u5b58\u5728 feign.Client \u8fd9\u4e2a\u7c7b\u6587\u4ef6\uff0c\u88ab\u4fee\u9970\u7c7b FeignAutoConfiguration \u624d\u4f1a import \u91cd\u70b9 \uff1a @ConditionalOnClass \u4e00\u822c\u662f\u7528\u4e8e\u914d\u5408 maven pom \u7684\u53ef\u9009\u4f9d\u8d56\u3002\u5b83\u662f\u6574\u4e2a SpringBoot \u9879\u76ee\u7684\u4e00\u4e2a\u6838\u5fc3\u3002\u56e0\u4e3a autoconfigure \u4e2d\u57fa\u672c\u90fd\u662f\u53ef\u9009\u4f9d\u8d56\uff0c\u8fd0\u884c\u65f6\u518d\u901a\u8fc7 starter \u628a\u5b9e\u9645\u4f9d\u8d56\u5f15\u5165\u8fdb\u6765\uff0c\u8fdb\u800c\u6ee1\u8db3 @ConditionalOnClass \uff0c\u5b9e\u9645\u7684 AutoConfiguration \u5c31\u4f1a\u751f\u6548\u3002 \u8fd9\u4e2a\u539f\u7406\uff0c\u5927\u5bb6\u5fc5\u987b\u638c\u63e1 \u3002 @ConditionalOnMissingBean \u4f7f\u7528\u4e3e\u4f8b\uff1a @Bean @ConditionalOnMissingBean public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) { StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } \u542b\u4e49\uff1a \u5f53\u7136 IOC \u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728 redisTemplate \u8fd9\u4e2a bean \u65f6\uff0c\u624d\u4f1a\u628a stringRedisTemplate()\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u4f5c\u4e3a Bean \u6ce8\u518c\u5230 IOC \u5bb9\u5668\u4e2d\u3002 \u91cd\u70b9\uff1a @ConditionalOnMissingBean \u662f springboot \u5728**\u81ea\u52a8\u6ce8\u5165**\u4e0e**\u7528\u6237\u81ea\u5b9a\u4e49**\u4e4b\u95f4\u7684\u8f85\u52a9\u3002\u4e00\u65b9\u9762\uff0c\u6846\u67b6\u5e0c\u671b\u7ec4\u4ef6\u6309\u7167\u6700\u4f73\u5b9e\u8df5\u90fd\u7ea6\u5b9a\u597d\u3001\u7136\u540e\u81ea\u52a8\u7684\u90fd\u542f\u52a8\u8d77\u6765\uff0c\u4e0d\u9700\u8981\u5f00\u53d1\u4ecb\u5165\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f00\u53d1\u53c8\u5b58\u5728\u81ea\u5b9a\u7684\u9700\u6c42\u573a\u666f\uff0c\u6216\u8005\u6bcf\u4e2a\u516c\u53f8\u5bf9\u67d0\u4e9b\u4e2d\u95f4\u4ef6\u7684\u7406\u89e3\u548c\u4f7f\u7528\u4e0d\u540c\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u3002 @ConditionalOnMissingBean \u80fd\u591f\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e0a\u8ff0\u7684\u95ee\u9898\uff1a\u6846\u67b6\u63d0\u4f9b\u4e86\u81ea\u52a8\u7684 Bean\uff0c\u4f46\u662f\u53ea\u6709\u5728\u5f00\u53d1\u6ca1\u6709\u81ea\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u751f\u6548\u3002","title":"Conditional"},{"location":"grus/introduction/condition/","text":"Condition \u6761\u4ef6\u6ce8\u89e3 \u00b6 grus \u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u6761\u4ef6\u6ce8\u89e3 \u73af\u5883\u6761\u4ef6\u6ce8\u89e3 \u00b6 ConditionalOnWorkEnv \uff1a\u6839\u636e\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\u52a0\u8f7d\u914d\u7f6e\u7c7b \u4f7f\u7528\u793a\u4f8b\uff1a @ConditionalOnWorkEnv ({ WorkEnv . DEVELOP , WorkEnv . TEST }) @Configuration public class ElasticJobAutoConfiguration { ...... } \u89e3\u91ca\uff1a\u53ea\u6709\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u624d\u4f1a\u52a0\u8f7d ElasticJobAutoConfiguration \u7c7b \u670d\u52a1\u5668\u73af\u5883\u6ce8\u89e3 \u00b6 ConditionalOnServerEnv \uff1a\u6839\u636e\u7a0b\u5e8f\u662f\u5426\u8fd0\u884c\u5728\u670d\u52a1\u5668\u73af\u5883\u52a0\u8f7d\u914d\u7f6e\u7c7b\uff08\u5927\u5bb6\u672c\u5730\u7535\u8111\u542f\u52a8\u7a0b\u5e8f\u4e0d\u7b97\u670d\u52a1\u5668\u73af\u5883\uff09 \u4f7f\u7528\u793a\u4f8b\uff1a @ConditionalOnServerEnv @Configuration public class OpenTracingAutoConfiguration { ...... } \u89e3\u91ca\uff1a\u5728\u5927\u5bb6\u7535\u8111\u672c\u5730\u542f\u52a8\u7a0b\u5e8f\uff0c\u4e0d\u4f1a\u52a0\u8f7d OpenTracingAutoConfiguration\u3002\u7a0b\u5e8f\u8fd0\u884c\u5728\u4efb\u610f\u73af\u5883\u7684 linux \u670d\u52a1\u5668\u91cc\uff0c\u4f1a\u52a0\u8f7d OpenTracingAutoConfiguration Gconf key \u6761\u4ef6\u6ce8\u89e3 \u00b6 ConditionalOnGconfConfigKey \uff1a\u6839\u636e\u5f53\u524d\u5e94\u7528\u662f\u5426\u5b58\u5728 gconf \u7684 key\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u52a0\u8f7d\u914d\u7f6e\u7c7b \u4f7f\u7528\u793a\u4f8b\uff1a @Configuration @ConditionalOnGconfConfigKey ( \"redis.properties\" ) public class TestAutoConfigruation { ...... } \u89e3\u91ca\uff1a\u5047\u8bbe\u5f53\u524d\u5e94\u7528\u662f userdoor\uff0c\u5982\u679c userdoor \u7684 gconf \u914d\u7f6e\u4e0b\u5b58\u5728\u914d\u7f6e\u6587\u4ef6 redis.properties \uff0c\u90a3\u4e48\u4f1a\u52a0\u8f7d\u914d\u7f6e\u7c7b TestAutoConfigruation\u3002\u5426\u5219\u4e0d\u4f1a\u52a0\u8f7d\u3002","title":"Condition\u6761\u4ef6\u6ce8\u89e3"},{"location":"grus/introduction/condition/#condition","text":"grus \u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u6761\u4ef6\u6ce8\u89e3","title":"Condition \u6761\u4ef6\u6ce8\u89e3"},{"location":"grus/introduction/condition/#_1","text":"ConditionalOnWorkEnv \uff1a\u6839\u636e\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\u52a0\u8f7d\u914d\u7f6e\u7c7b \u4f7f\u7528\u793a\u4f8b\uff1a @ConditionalOnWorkEnv ({ WorkEnv . DEVELOP , WorkEnv . TEST }) @Configuration public class ElasticJobAutoConfiguration { ...... } \u89e3\u91ca\uff1a\u53ea\u6709\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u624d\u4f1a\u52a0\u8f7d ElasticJobAutoConfiguration \u7c7b","title":"\u73af\u5883\u6761\u4ef6\u6ce8\u89e3"},{"location":"grus/introduction/condition/#_2","text":"ConditionalOnServerEnv \uff1a\u6839\u636e\u7a0b\u5e8f\u662f\u5426\u8fd0\u884c\u5728\u670d\u52a1\u5668\u73af\u5883\u52a0\u8f7d\u914d\u7f6e\u7c7b\uff08\u5927\u5bb6\u672c\u5730\u7535\u8111\u542f\u52a8\u7a0b\u5e8f\u4e0d\u7b97\u670d\u52a1\u5668\u73af\u5883\uff09 \u4f7f\u7528\u793a\u4f8b\uff1a @ConditionalOnServerEnv @Configuration public class OpenTracingAutoConfiguration { ...... } \u89e3\u91ca\uff1a\u5728\u5927\u5bb6\u7535\u8111\u672c\u5730\u542f\u52a8\u7a0b\u5e8f\uff0c\u4e0d\u4f1a\u52a0\u8f7d OpenTracingAutoConfiguration\u3002\u7a0b\u5e8f\u8fd0\u884c\u5728\u4efb\u610f\u73af\u5883\u7684 linux \u670d\u52a1\u5668\u91cc\uff0c\u4f1a\u52a0\u8f7d OpenTracingAutoConfiguration","title":"\u670d\u52a1\u5668\u73af\u5883\u6ce8\u89e3"},{"location":"grus/introduction/condition/#gconf-key","text":"ConditionalOnGconfConfigKey \uff1a\u6839\u636e\u5f53\u524d\u5e94\u7528\u662f\u5426\u5b58\u5728 gconf \u7684 key\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u52a0\u8f7d\u914d\u7f6e\u7c7b \u4f7f\u7528\u793a\u4f8b\uff1a @Configuration @ConditionalOnGconfConfigKey ( \"redis.properties\" ) public class TestAutoConfigruation { ...... } \u89e3\u91ca\uff1a\u5047\u8bbe\u5f53\u524d\u5e94\u7528\u662f userdoor\uff0c\u5982\u679c userdoor \u7684 gconf \u914d\u7f6e\u4e0b\u5b58\u5728\u914d\u7f6e\u6587\u4ef6 redis.properties \uff0c\u90a3\u4e48\u4f1a\u52a0\u8f7d\u914d\u7f6e\u7c7b TestAutoConfigruation\u3002\u5426\u5219\u4e0d\u4f1a\u52a0\u8f7d\u3002","title":"Gconf key \u6761\u4ef6\u6ce8\u89e3"},{"location":"grus/introduction/config/","text":"\u914d\u7f6e\u6587\u4ef6 \u00b6 grus \u6240\u6709\u914d\u7f6e\uff0c\u90fd\u662f\u4ee5 grus \u4f5c\u4e3a\u524d\u7f00 \u5927\u5bb6\u90fd\u53ef\u4ee5\u901a\u8fc7 IDEA \u8f7b\u677e\u7684\u8f93\u5165\u3002\u53ea\u9700\u8981\u8f93\u5165 grus \u524d\u7f00\uff0cidea \u4f1a\u81ea\u52a8\u628a\u914d\u7f6e\u90fd\u8054\u60f3\u51fa\u6765\uff0c\u5305\u62ec\u914d\u7f6e\u7684\u542b\u4e49\u3002 \u539f\u7406\uff1a \u5927\u5bb6\u53ef\u4ee5\u67e5\u770b grus-boot \u6e90\u4ee3\u7801\uff0c\u6211\u4eec\u5728 grus-boot-autoconfigure \u6a21\u5757\u7684 pom \u4e2d\uff0c\u6709\u4ee5\u4e0b\u4f9d\u8d56\uff1a <!-- Annotation processing --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-autoconfigure-processor </artifactId> <optional> true </optional> </dependency> \u8fd9\u4e24\u4e2a\u6a21\u5757\uff0c\u4f1a\u81ea\u52a8\u628a XXProperty \u7c7b\u7684 field \u7684\u6ce8\u91ca\uff0c\u751f\u6210\u4e3a\u6700\u7ec8\u7684\u63cf\u8ff0\u3002\u5982\uff1a @ConfigurationProperties ( prefix = \"grus.swagger\" ) public class SwaggerProperty { /** * \u57fa\u7840\u626b\u63cf\u5305 */ private String basePackage ; }","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"grus/introduction/config/#_1","text":"grus \u6240\u6709\u914d\u7f6e\uff0c\u90fd\u662f\u4ee5 grus \u4f5c\u4e3a\u524d\u7f00 \u5927\u5bb6\u90fd\u53ef\u4ee5\u901a\u8fc7 IDEA \u8f7b\u677e\u7684\u8f93\u5165\u3002\u53ea\u9700\u8981\u8f93\u5165 grus \u524d\u7f00\uff0cidea \u4f1a\u81ea\u52a8\u628a\u914d\u7f6e\u90fd\u8054\u60f3\u51fa\u6765\uff0c\u5305\u62ec\u914d\u7f6e\u7684\u542b\u4e49\u3002 \u539f\u7406\uff1a \u5927\u5bb6\u53ef\u4ee5\u67e5\u770b grus-boot \u6e90\u4ee3\u7801\uff0c\u6211\u4eec\u5728 grus-boot-autoconfigure \u6a21\u5757\u7684 pom \u4e2d\uff0c\u6709\u4ee5\u4e0b\u4f9d\u8d56\uff1a <!-- Annotation processing --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-autoconfigure-processor </artifactId> <optional> true </optional> </dependency> \u8fd9\u4e24\u4e2a\u6a21\u5757\uff0c\u4f1a\u81ea\u52a8\u628a XXProperty \u7c7b\u7684 field \u7684\u6ce8\u91ca\uff0c\u751f\u6210\u4e3a\u6700\u7ec8\u7684\u63cf\u8ff0\u3002\u5982\uff1a @ConfigurationProperties ( prefix = \"grus.swagger\" ) public class SwaggerProperty { /** * \u57fa\u7840\u626b\u63cf\u5305 */ private String basePackage ; }","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"grus/introduction/origin/","text":"\u8bbe\u8ba1\u601d\u60f3 \u00b6 Grus\u6846\u67b6\u662f\u5173\u7231\u901aJava\u56e2\u961f\u7ee7\u5de8\u7075\u795e\u6846\u67b6\u4e4b\u540e\uff0c\u7b2c\u4e8c\u6b21\u91cd\u5927\u7684\u67b6\u6784\u5347\u7ea7\u3002\u867d\u7136\u5de8\u7075\u795e\u6846\u67b6\u7684\u8bb8\u591a\u8bbe\u8ba1\u548c\u7406\u5ff5\u5f88\u5148\u8fdb\uff0c\u4f46\u662f\u6280\u672f\u5728\u524d\u8fdb\u3002\u5728\u5f53\u524d\u9636\u6bb5\u4e0b\uff0c\u5176\u6709\u4e00\u4e9b\u7f3a\u9677\u4e0d\u6ee1\u8db3\u6211\u4eec\u6280\u672f\u53d1\u5c55\u7684\u9700\u6c42\u3002 \u611f\u8c22 @\u5b59\u957f\u6d69 \u8d21\u732e Grus \u8fd9\u4e2a\u540d\u5b57\u3002 \u9762\u5411Java11 \u00b6 java11\u6709\u8bb8\u591a\u65b0\u7279\u6027\u548cjvm\u6027\u80fd\u7684\u63d0\u5347\uff0c\u8bb8\u591a\u90fd\u662f\u6211\u4eec\u671f\u671b\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\uff0c\u6bd4\u5982G1\u5783\u573e\u56de\u6536\uff1b \u6574\u4e2a\u67b6\u6784\u56e2\u961f\u5e0c\u671bGrus\u6846\u67b6\u80fd\u591f\u652f\u6301Java11\uff0c\u8fd9\u9700\u8981grus\u672c\u8eab\u548c\u4f9d\u8d56\u6846\u67b6\u540c\u65f6\u90fd\u53ef\u4ee5\u3002 \u5168\u9762\u62e5\u62b1SpringBoot \u00b6 \u6240\u6709\u7684\u9879\u76ee\u5168\u9762\u57fa\u4e8e SpringBoot \u6846\u67b6\u3002\u7edf\u4e00\u4f7f\u7528 jar \u90e8\u7f72\uff0c\u4e0d\u7ba1web\u8fd8\u662fservice\uff1b \u5728 SpringFramework \u4e4b\u4e0a\uff0c\u6269\u5c55\u548c\u5c01\u88c5\u4e00\u5c42 grus-framework \uff0c\u5728 SpringBoot \u4e4b\u4e0a\uff0c\u6269\u5c55\u548c\u5c01\u88c5\u4e00\u5c42 grus-boot \uff0c\u7528\u6237\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u5f15\u5165 grus-starter \u5373\u53ef\uff1b \u5b66\u4e60 spring boot \u7684\u505a\u6cd5\uff0c\u5728autoconfigure\u9879\u76ee\u96c6\u4e2d\u7f16\u8bd1\u3001\u6267\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4fdd\u8bc1jar\u5305\u7248\u672c\u6ca1\u6709\u4f9d\u8d56\u95ee\u9898\u3002 SpringBoot GrusBoot \u8be6\u7ec6\u7ed3\u6784 \u00b6 \u770b\u56fe\u524d\u8bf4\u660e\uff1a \u56fe\u7247\u6709\u70b9\u5927\uff0c\u53ef\u4ee5\u5728\u65b0\u7684\u6d4f\u89c8\u5668\u6807\u7b7e\u9875\u6253\u5f00\u66f4\u6e05\u695a \u6a59\u8272\u7684\u7ebf\u6761\uff0c\u8868\u793a parent \u5173\u7cfb\u3002\u6bd4\u5982 spring-boot-parent \u662f gurs-boot-parent \u7684 parent \u84dd\u8272\u7684\u5b9e\u7ebf\u7ebf\u6761\uff0c\u8868\u793a\u5f3a\u4f9d\u8d56\u5173\u7cfb\u3002 \u84dd\u8272\u7684\u865a\u7ebf\u7ebf\u6761\uff0c\u8868\u793a\u53ef\u9009\u4f9d\u8d56\u5173\u7cfb\u3002 \u540c\u989c\u8272\u7684\u957f\u65b9\u5f62\uff0c\u8868\u793a\u5c5e\u4e8e\u76f8\u540c\u7684\u6a21\u5757 grus-framework \u00b6 grus-framework \u662f\u57fa\u7840\u67b6\u6784\u80fd\u529b\u7684\u5e95\u5c42\u4f53\u73b0\uff0c\u5b83\u57fa\u4e8e spring-framework grus-framework \u91cc\u6709\u5f88\u591a\u6a21\u5757\uff0c\u5305\u62ecgconf\u3001gfs\u7b49\u7b49\uff0c\u8fd9\u4e9b\u539f\u6765ciicgat-sdk\u91cc\u7684\u4f1a\u5e73\u6ed1\u8fc1\u79fb\u8fc7\u6765 grus-framework \u7684\u5bf9\u5916\u7531 grus-framework-bom \u8f93\u51fa grus-boot-parent \u00b6 \u5b83\u4ee5 spring-boot-parent \u4e3a\u7236\u4f9d\u8d56\uff0c\u901a\u8fc7\u5176\u5b9a\u4e49\u4e86\u4f7f\u7528\u7684 SpringBoot \u91cc\u6240\u6709\u7ec4\u4ef6\u7684\u7248\u672c grus-boot-autoconfigure \u00b6 \u8fd9\u4e2a\u6a21\u5757\u662f grus-boot \u7684 \u6700\u6838\u5fc3 \u6a21\u5757 \u5b83\u53ef\u9009\u62e9\u7684\u4f9d\u8d56\u6240\u6709\u7684 grus-framework ,\u5f62\u6210\u4e00\u4e2a\u6536\u7d27\u7684\u58f6\u3002\u901a\u8fc7\u5b83\uff0c\u53ef\u4ee5\u786e\u4fdd\u6846\u67b6\u6a21\u5757\u4e4b\u95f4\u6ca1\u6709\u4f9d\u8d56\u51b2\u7a81\u548c\u9690\u85cf\u7684\u7248\u672c\u4e0d\u517c\u5bb9\u3002 \u6240\u6709\u7684 grus-framework \u7684\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff0c\u90fd\u662f\u7531\u6b64\u6a21\u5757\u5b9e\u73b0\u3002 grus-boot-starters \u00b6 \u6b64\u6a21\u5757\u5b9a\u4e49\u4e86\u7528\u6237\u4f7f\u7528\u7684\u6240\u6709 starter\u3002 \u6b64\u6a21\u5757\u90fd\u662f\u57fa\u4e8e grus-boot-autoconfigure \uff0c\u53e6\u5916\uff0c\u6bcf\u4e2a\u6a21\u5757\u53ea\u5305\u542b\u4e00\u4e2a pom \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u6b64\u6a21\u5757\u7684\u5b9e\u9645jar\u4f9d\u8d56\u3002(\u56e0\u4e3a grus-boot-autoconfigure \u5bf9\u5b9e\u9645jar\u7684\u662f\u53ef\u9009\u4f9d\u8d56\uff0c\u4e0d\u4f1a\u4f20\u9012\u4e0b\u53bb) starters \u4e3b\u8981\u6709\u4e24\u5c42\uff1a\u7b2c\u4e00\u5c42\u4e3a grus-framework \u7684 starter\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u57fa\u4e8e\u7b2c\u4e00\u5c42\u548c spring-boot-starter \u7684\u5c01\u88c5\u5c42\u3002\u7b2c\u4e8c\u5c42\u4e5f\u662f\u6700\u7ec8\u9762\u5411\u7528\u6237\u7684\u4e00\u5c42\u3002 grus-boot-starter-parent \u00b6 \u5b83\u4e3b\u8981\u7ee7\u627f\u81ea grus-boot-bom \uff0c\u8fd9\u4e2a\u5b9a\u4e49\u4e86spring\u3001grus\u7684\u6240\u6709\u7ec4\u4ef6 \u540c\u65f6\u8fd8\u7ee7\u627f\u81ea grus-third-dependencies \uff0c\u8fd9\u4e2a\u5b9a\u4e49\u4e86\u5e38\u7528\u7684\u4e00\u4e9b\u4e09\u65b9\u5305\uff0c\u6bd4\u5982\u89e3\u6790excel\u7684poi \u6b64\u6a21\u5757\u4e3a\u6240\u6709\u9879\u76ee\u7684 parent grus-boot-samples \u00b6 \u6b64\u6a21\u5757\u4e3a\u793a\u4f8b\u9879\u76ee\uff0c\u662f\u811a\u624b\u67b6\u3002maven archetype \u57fa\u4e8e\u6b64\u6a21\u5757\u3002","title":"\u7b80\u4ecb"},{"location":"grus/introduction/origin/#_1","text":"Grus\u6846\u67b6\u662f\u5173\u7231\u901aJava\u56e2\u961f\u7ee7\u5de8\u7075\u795e\u6846\u67b6\u4e4b\u540e\uff0c\u7b2c\u4e8c\u6b21\u91cd\u5927\u7684\u67b6\u6784\u5347\u7ea7\u3002\u867d\u7136\u5de8\u7075\u795e\u6846\u67b6\u7684\u8bb8\u591a\u8bbe\u8ba1\u548c\u7406\u5ff5\u5f88\u5148\u8fdb\uff0c\u4f46\u662f\u6280\u672f\u5728\u524d\u8fdb\u3002\u5728\u5f53\u524d\u9636\u6bb5\u4e0b\uff0c\u5176\u6709\u4e00\u4e9b\u7f3a\u9677\u4e0d\u6ee1\u8db3\u6211\u4eec\u6280\u672f\u53d1\u5c55\u7684\u9700\u6c42\u3002 \u611f\u8c22 @\u5b59\u957f\u6d69 \u8d21\u732e Grus \u8fd9\u4e2a\u540d\u5b57\u3002","title":"\u8bbe\u8ba1\u601d\u60f3"},{"location":"grus/introduction/origin/#java11","text":"java11\u6709\u8bb8\u591a\u65b0\u7279\u6027\u548cjvm\u6027\u80fd\u7684\u63d0\u5347\uff0c\u8bb8\u591a\u90fd\u662f\u6211\u4eec\u671f\u671b\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\uff0c\u6bd4\u5982G1\u5783\u573e\u56de\u6536\uff1b \u6574\u4e2a\u67b6\u6784\u56e2\u961f\u5e0c\u671bGrus\u6846\u67b6\u80fd\u591f\u652f\u6301Java11\uff0c\u8fd9\u9700\u8981grus\u672c\u8eab\u548c\u4f9d\u8d56\u6846\u67b6\u540c\u65f6\u90fd\u53ef\u4ee5\u3002","title":"\u9762\u5411Java11"},{"location":"grus/introduction/origin/#springboot","text":"\u6240\u6709\u7684\u9879\u76ee\u5168\u9762\u57fa\u4e8e SpringBoot \u6846\u67b6\u3002\u7edf\u4e00\u4f7f\u7528 jar \u90e8\u7f72\uff0c\u4e0d\u7ba1web\u8fd8\u662fservice\uff1b \u5728 SpringFramework \u4e4b\u4e0a\uff0c\u6269\u5c55\u548c\u5c01\u88c5\u4e00\u5c42 grus-framework \uff0c\u5728 SpringBoot \u4e4b\u4e0a\uff0c\u6269\u5c55\u548c\u5c01\u88c5\u4e00\u5c42 grus-boot \uff0c\u7528\u6237\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u5f15\u5165 grus-starter \u5373\u53ef\uff1b \u5b66\u4e60 spring boot \u7684\u505a\u6cd5\uff0c\u5728autoconfigure\u9879\u76ee\u96c6\u4e2d\u7f16\u8bd1\u3001\u6267\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4fdd\u8bc1jar\u5305\u7248\u672c\u6ca1\u6709\u4f9d\u8d56\u95ee\u9898\u3002 SpringBoot GrusBoot","title":"\u5168\u9762\u62e5\u62b1SpringBoot"},{"location":"grus/introduction/origin/#_2","text":"\u770b\u56fe\u524d\u8bf4\u660e\uff1a \u56fe\u7247\u6709\u70b9\u5927\uff0c\u53ef\u4ee5\u5728\u65b0\u7684\u6d4f\u89c8\u5668\u6807\u7b7e\u9875\u6253\u5f00\u66f4\u6e05\u695a \u6a59\u8272\u7684\u7ebf\u6761\uff0c\u8868\u793a parent \u5173\u7cfb\u3002\u6bd4\u5982 spring-boot-parent \u662f gurs-boot-parent \u7684 parent \u84dd\u8272\u7684\u5b9e\u7ebf\u7ebf\u6761\uff0c\u8868\u793a\u5f3a\u4f9d\u8d56\u5173\u7cfb\u3002 \u84dd\u8272\u7684\u865a\u7ebf\u7ebf\u6761\uff0c\u8868\u793a\u53ef\u9009\u4f9d\u8d56\u5173\u7cfb\u3002 \u540c\u989c\u8272\u7684\u957f\u65b9\u5f62\uff0c\u8868\u793a\u5c5e\u4e8e\u76f8\u540c\u7684\u6a21\u5757","title":"\u8be6\u7ec6\u7ed3\u6784"},{"location":"grus/introduction/origin/#grus-framework","text":"grus-framework \u662f\u57fa\u7840\u67b6\u6784\u80fd\u529b\u7684\u5e95\u5c42\u4f53\u73b0\uff0c\u5b83\u57fa\u4e8e spring-framework grus-framework \u91cc\u6709\u5f88\u591a\u6a21\u5757\uff0c\u5305\u62ecgconf\u3001gfs\u7b49\u7b49\uff0c\u8fd9\u4e9b\u539f\u6765ciicgat-sdk\u91cc\u7684\u4f1a\u5e73\u6ed1\u8fc1\u79fb\u8fc7\u6765 grus-framework \u7684\u5bf9\u5916\u7531 grus-framework-bom \u8f93\u51fa","title":"grus-framework"},{"location":"grus/introduction/origin/#grus-boot-parent","text":"\u5b83\u4ee5 spring-boot-parent \u4e3a\u7236\u4f9d\u8d56\uff0c\u901a\u8fc7\u5176\u5b9a\u4e49\u4e86\u4f7f\u7528\u7684 SpringBoot \u91cc\u6240\u6709\u7ec4\u4ef6\u7684\u7248\u672c","title":"grus-boot-parent"},{"location":"grus/introduction/origin/#grus-boot-autoconfigure","text":"\u8fd9\u4e2a\u6a21\u5757\u662f grus-boot \u7684 \u6700\u6838\u5fc3 \u6a21\u5757 \u5b83\u53ef\u9009\u62e9\u7684\u4f9d\u8d56\u6240\u6709\u7684 grus-framework ,\u5f62\u6210\u4e00\u4e2a\u6536\u7d27\u7684\u58f6\u3002\u901a\u8fc7\u5b83\uff0c\u53ef\u4ee5\u786e\u4fdd\u6846\u67b6\u6a21\u5757\u4e4b\u95f4\u6ca1\u6709\u4f9d\u8d56\u51b2\u7a81\u548c\u9690\u85cf\u7684\u7248\u672c\u4e0d\u517c\u5bb9\u3002 \u6240\u6709\u7684 grus-framework \u7684\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff0c\u90fd\u662f\u7531\u6b64\u6a21\u5757\u5b9e\u73b0\u3002","title":"grus-boot-autoconfigure"},{"location":"grus/introduction/origin/#grus-boot-starters","text":"\u6b64\u6a21\u5757\u5b9a\u4e49\u4e86\u7528\u6237\u4f7f\u7528\u7684\u6240\u6709 starter\u3002 \u6b64\u6a21\u5757\u90fd\u662f\u57fa\u4e8e grus-boot-autoconfigure \uff0c\u53e6\u5916\uff0c\u6bcf\u4e2a\u6a21\u5757\u53ea\u5305\u542b\u4e00\u4e2a pom \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u6b64\u6a21\u5757\u7684\u5b9e\u9645jar\u4f9d\u8d56\u3002(\u56e0\u4e3a grus-boot-autoconfigure \u5bf9\u5b9e\u9645jar\u7684\u662f\u53ef\u9009\u4f9d\u8d56\uff0c\u4e0d\u4f1a\u4f20\u9012\u4e0b\u53bb) starters \u4e3b\u8981\u6709\u4e24\u5c42\uff1a\u7b2c\u4e00\u5c42\u4e3a grus-framework \u7684 starter\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u57fa\u4e8e\u7b2c\u4e00\u5c42\u548c spring-boot-starter \u7684\u5c01\u88c5\u5c42\u3002\u7b2c\u4e8c\u5c42\u4e5f\u662f\u6700\u7ec8\u9762\u5411\u7528\u6237\u7684\u4e00\u5c42\u3002","title":"grus-boot-starters"},{"location":"grus/introduction/origin/#grus-boot-starter-parent","text":"\u5b83\u4e3b\u8981\u7ee7\u627f\u81ea grus-boot-bom \uff0c\u8fd9\u4e2a\u5b9a\u4e49\u4e86spring\u3001grus\u7684\u6240\u6709\u7ec4\u4ef6 \u540c\u65f6\u8fd8\u7ee7\u627f\u81ea grus-third-dependencies \uff0c\u8fd9\u4e2a\u5b9a\u4e49\u4e86\u5e38\u7528\u7684\u4e00\u4e9b\u4e09\u65b9\u5305\uff0c\u6bd4\u5982\u89e3\u6790excel\u7684poi \u6b64\u6a21\u5757\u4e3a\u6240\u6709\u9879\u76ee\u7684 parent","title":"grus-boot-starter-parent"},{"location":"grus/introduction/origin/#grus-boot-samples","text":"\u6b64\u6a21\u5757\u4e3a\u793a\u4f8b\u9879\u76ee\uff0c\u662f\u811a\u624b\u67b6\u3002maven archetype \u57fa\u4e8e\u6b64\u6a21\u5757\u3002","title":"grus-boot-samples"},{"location":"grus/introduction/project-starter/","text":"Starter \u6a21\u5757 \u00b6 \u5e38\u7528\u7ec4\u5408\u6a21\u5757 \u00b6 grus \u5e94\u7528\uff0c\u4e00\u822c\u53ea\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u7ec4\u5408\u7684 starter \u4f9d\u8d56\u5373\u53ef\uff08\u5e38\u7528\u7684\u662f service \u548c web \uff09\u3002\u6846\u67b6\u4e00\u5171\u63d0\u4f9b\u4e86 4 \u4e2a\u7ec4\u5408 starter\uff1a <!-- \u6b64starter\u5305\u542b\u4e86\u5728\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u6700\u5c0f\u7684\u4f9d\u8d56 --> <dependency> <artifactId> grus-boot-starter-server-minor </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5305\u542b\u4e86\u5728\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u4f9d\u8d56 --> <dependency> <artifactId> grus-boot-starter-server-general </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5bf9\u5e94\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2dweb\u5c42\u5e94\u7528 --> <dependency> <artifactId> grus-boot-starter-server-web </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5bf9\u5e94\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2dservice\u5c42\u5e94\u7528 --> <dependency> <artifactId> grus-boot-starter-server-service </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u4e0b\u9762\u8868\u683c\u8bf4\u660e\u56db\u4e2a\u7ec4\u5408 starter \u5305\u542b\u7684\u6a21\u5757\uff1a \u6a21\u5757 minor general web service spring-boot-starter-aop \u2713 \u2713 \u2713 \u2713 spring-boot-starter-web \u2713 \u2713 \u2713 \u2713 spring-boot-starter-actuator \u2713 \u2713 \u2713 \u2713 spring-boot-admin-starter-client \u2713 \u2713 \u2713 \u2713 grus-boot-starter-opentracing \u2713 \u2713 \u2713 \u2713 grus-boot-starter-web \u2713 \u2713 \u2713 \u2713 grus-boot-starter-fegin \u2713 \u2713 \u2713 \u2713 grus-boot-starter-gconf \u2713 \u2713 \u2713 grus-boot-starter-rabbitmq \u2713 \u2713 grus-boot-starter-data \u2713 grus-boot-starter-pagehepler \u2713 grus-boot-starter-gfs \u2713 \u53ef\u9009\u6a21\u5757 \u00b6 \u5bf9\u4e8e web \u548c service \u7684\u5e94\u7528\uff0c\u5176\u4ed6\u53ef\u9009\u6a21\u5757\u548c\u89c4\u8303\u5982\u4e0b\uff1a \u6a21\u5757 web \u5e94\u7528\u662f\u5426\u53ef\u9009 service \u5e94\u7528\u662f\u5426\u53ef\u9009 grus-boot-starter-redis \u53ef\u9009 \u53ef\u9009 grus-boot-starter-job \u4e0d\u53ef\u9009\u3002 \u4e00\u822c web \u5e94\u7528\u4e0d\u9700\u8981\u5206\u5e03\u5f0f\u4efb\u52a1\u652f\u6301\u3002 \u53ef\u9009 grus-boot-starter-validator \u4e0d\u53ef\u9009\u3002 \u4f7f\u7528 SpringBoot \u81ea\u5e26\u7684 Hibernate-validator \u5bf9\u4e8e\u539f\u6765\u7528\u5230 ciicgat-boot-validato r \u7684\u5e94\u7528\u53ef\u9009\u3002 \u5176\u4ed6\u4e00\u5f8b\u4f7f\u7528 Hibernate-validator spring-boot-starter-freemarker \u53ef\u9009 \u4e0d\u53ef\u9009\u3002\u4e00\u822c service \u5e94\u7528\u4e0d\u9700\u8981\u6e32\u67d3\u9875\u9762\u3002 grus-boot-starter-velocity \u5bf9\u4e8e\u539f\u6765\u4f7f\u7528\u5230 velocity \u6a21\u677f\u7684\u9879\u76ee\u53ef\u9009\u3002 \u4e0d\u53ef\u9009 spring-boot-starter-thymeleaf \u53ef\u9009 \u4e0d\u53ef\u9009\u3002\u4e00\u822c service \u5e94\u7528\u4e0d\u9700\u8981\u6e32\u67d3\u9875\u9762\u3002 spring-session-data-redis \u53ef\u9009 \u4e0d\u53ef\u9009\u3002service \u4e0d\u9700\u8981 session \u6ce8\u610f\uff1a grus-boot-starter-redis \u4f1a\u9ed8\u8ba4\u8fde\u63a5 redis \u6570\u636e\u5e93\uff0c\u5982\u679c\u6ca1\u6709\u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e redis-config.json \u8fde\u63a5\uff0c\u90a3\u4e48\u9879\u76ee\u542f\u52a8\u4f1a\u5931\u8d25","title":"Starter\u6a21\u5757"},{"location":"grus/introduction/project-starter/#starter","text":"","title":"Starter \u6a21\u5757"},{"location":"grus/introduction/project-starter/#_1","text":"grus \u5e94\u7528\uff0c\u4e00\u822c\u53ea\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u7ec4\u5408\u7684 starter \u4f9d\u8d56\u5373\u53ef\uff08\u5e38\u7528\u7684\u662f service \u548c web \uff09\u3002\u6846\u67b6\u4e00\u5171\u63d0\u4f9b\u4e86 4 \u4e2a\u7ec4\u5408 starter\uff1a <!-- \u6b64starter\u5305\u542b\u4e86\u5728\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u6700\u5c0f\u7684\u4f9d\u8d56 --> <dependency> <artifactId> grus-boot-starter-server-minor </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5305\u542b\u4e86\u5728\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u7aef\u5e94\u7528\u5e38\u7528\u7684\u4f9d\u8d56 --> <dependency> <artifactId> grus-boot-starter-server-general </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5bf9\u5e94\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2dweb\u5c42\u5e94\u7528 --> <dependency> <artifactId> grus-boot-starter-server-web </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> <!-- \u6b64starter\u5bf9\u5e94\u5173\u7231\u901a\u5fae\u670d\u52a1\u67b6\u6784\u4e2dservice\u5c42\u5e94\u7528 --> <dependency> <artifactId> grus-boot-starter-server-service </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u4e0b\u9762\u8868\u683c\u8bf4\u660e\u56db\u4e2a\u7ec4\u5408 starter \u5305\u542b\u7684\u6a21\u5757\uff1a \u6a21\u5757 minor general web service spring-boot-starter-aop \u2713 \u2713 \u2713 \u2713 spring-boot-starter-web \u2713 \u2713 \u2713 \u2713 spring-boot-starter-actuator \u2713 \u2713 \u2713 \u2713 spring-boot-admin-starter-client \u2713 \u2713 \u2713 \u2713 grus-boot-starter-opentracing \u2713 \u2713 \u2713 \u2713 grus-boot-starter-web \u2713 \u2713 \u2713 \u2713 grus-boot-starter-fegin \u2713 \u2713 \u2713 \u2713 grus-boot-starter-gconf \u2713 \u2713 \u2713 grus-boot-starter-rabbitmq \u2713 \u2713 grus-boot-starter-data \u2713 grus-boot-starter-pagehepler \u2713 grus-boot-starter-gfs \u2713","title":"\u5e38\u7528\u7ec4\u5408\u6a21\u5757"},{"location":"grus/introduction/project-starter/#_2","text":"\u5bf9\u4e8e web \u548c service \u7684\u5e94\u7528\uff0c\u5176\u4ed6\u53ef\u9009\u6a21\u5757\u548c\u89c4\u8303\u5982\u4e0b\uff1a \u6a21\u5757 web \u5e94\u7528\u662f\u5426\u53ef\u9009 service \u5e94\u7528\u662f\u5426\u53ef\u9009 grus-boot-starter-redis \u53ef\u9009 \u53ef\u9009 grus-boot-starter-job \u4e0d\u53ef\u9009\u3002 \u4e00\u822c web \u5e94\u7528\u4e0d\u9700\u8981\u5206\u5e03\u5f0f\u4efb\u52a1\u652f\u6301\u3002 \u53ef\u9009 grus-boot-starter-validator \u4e0d\u53ef\u9009\u3002 \u4f7f\u7528 SpringBoot \u81ea\u5e26\u7684 Hibernate-validator \u5bf9\u4e8e\u539f\u6765\u7528\u5230 ciicgat-boot-validato r \u7684\u5e94\u7528\u53ef\u9009\u3002 \u5176\u4ed6\u4e00\u5f8b\u4f7f\u7528 Hibernate-validator spring-boot-starter-freemarker \u53ef\u9009 \u4e0d\u53ef\u9009\u3002\u4e00\u822c service \u5e94\u7528\u4e0d\u9700\u8981\u6e32\u67d3\u9875\u9762\u3002 grus-boot-starter-velocity \u5bf9\u4e8e\u539f\u6765\u4f7f\u7528\u5230 velocity \u6a21\u677f\u7684\u9879\u76ee\u53ef\u9009\u3002 \u4e0d\u53ef\u9009 spring-boot-starter-thymeleaf \u53ef\u9009 \u4e0d\u53ef\u9009\u3002\u4e00\u822c service \u5e94\u7528\u4e0d\u9700\u8981\u6e32\u67d3\u9875\u9762\u3002 spring-session-data-redis \u53ef\u9009 \u4e0d\u53ef\u9009\u3002service \u4e0d\u9700\u8981 session \u6ce8\u610f\uff1a grus-boot-starter-redis \u4f1a\u9ed8\u8ba4\u8fde\u63a5 redis \u6570\u636e\u5e93\uff0c\u5982\u679c\u6ca1\u6709\u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e redis-config.json \u8fde\u63a5\uff0c\u90a3\u4e48\u9879\u76ee\u542f\u52a8\u4f1a\u5931\u8d25","title":"\u53ef\u9009\u6a21\u5757"},{"location":"grus/introduction/project-structure/","text":"Grus \u9879\u76ee\u7ed3\u6784 \u00b6 \u73af\u5883\u548c\u4f9d\u8d56\u8bf4\u660e \u00b6 jdk11\uff1a openjdk11 \u4e0b\u8f7d\u5730\u5740 maven\uff1a\u5efa\u8bae\u4f7f\u7528 3.6+\u7248\u672c\u3002 \u53ef\u53c2\u8003 java\u5b89\u88c5 \u548c maven\u5b89\u88c5 \u9879\u76ee POM \u00b6 parent \u00b6 maven pom parent \u9700\u8981\u7ee7\u627f grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u9700\u8981\u91cd\u70b9\u6ce8\u610f \uff1a\u6b64 parent\uff0c\u5305\u542b\u4e86 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u3001\u5de8\u7075\u795e API\uff08 2021.1 \u53ca\u4ee5\u524d\u7684\u7248\u672c\uff09 \u7b49\u7684\u6240\u6709\u4f9d\u8d56\u3002\u6240\u4ee5\u5927\u5bb6\uff0c\u65e0\u987b\u518d import \u8fd9\u4e9b\u6846\u67b6\u7684 BOM\u3002 \u81ea 2021.2 \u5f00\u59cb\uff0c\u6846\u67b6\u548c\u5de8\u7075\u795e\u7684\u5f15\u7528\u4e0d\u518d\u653e\u5728\u4e00\u8d77\uff0c\u5373\u4f7f\u7528 2021.2 \u53ca\u540e\u9762\u7684\u7248\u672c\uff0c\u9700\u8981\u5728\u7236POM\u6dfb\u52a0\u5982\u4e0b\uff1a <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> build \u63d2\u4ef6 \u00b6 <build> <finalName> ${project.artifactId} </finalName> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> </plugin> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> </plugin> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> <executions> <execution> <goals> <goal> repackage </goal> <goal> build-info </goal> </goals> </execution> </executions> </plugin> </plugins> </build> \u4f7f\u7528\u89c4\u8303 \u00b6 pom \u4e2d\uff0c \u53ea\u5141\u8bb8\u901a\u8fc7 starter \u5f15\u5165 grus \u548c spring \u4f9d\u8d56 \u3002 \u5fc5\u987b\u5728 application.propertes(\u6216\u8005 yaml)\u91cc\u8bbe\u7f6e spring.application.name \u7684\u503c\u3002\u8be5\u503c\u5fc5\u987b\u4e3a frigate \u91cc\u7684\u5e94\u7528\u540d\u3002\u5e94\u7528\u90e8\u7f72\u5230\u7edf\u4e00\u73af\u5883\u4e4b\u540e\uff0c\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6821\u9a8c\u8be5\u503c\u662f\u5426\u548c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u7684 APP_NAME \u4e00\u81f4\u3002\u4e0d\u4e00\u81f4\u4f1a\u542f\u52a8\u51fa\u9519\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u539f\u6765 ciicgat-sdk \u548c ciicgat-boot \u4e24\u4e2a\u8001\u6846\u67b6 \u90e8\u7f72 \u00b6 Grus \u6846\u67b6\u53ea\u652f\u6301 jar \u5305\u65b9\u5f0f\u90e8\u7f72\u5728 docker \u5bb9\u5668\u4e2d\u3002\u6240\u4ee5\u5bf9\u4e8e\u8001\u7684\u5e94\u7528\uff0c\u5047\u5982\u751f\u4ea7\u90e8\u7f72\u5728 k8s \u4e2d\uff0c\u90a3\u4e48\u8981\u4f7f\u7528 grus \u540e\uff0c\u8981\u8fc1\u79fb\u5230 k8s \u91cc\u3002 \u540c\u65f6\uff0c\u5728\u4e0a\u7ebf\u65f6\uff0c\u9700\u8981\u548c\u8fd0\u7ef4\u8bf4\u660e\uff0c\u9879\u76ee\u4f7f\u7528 java11. \u8fd0\u7ef4\u4f1a\u628a Jenkins \u4e2d\u9879\u76ee\u7684 jdk \u914d\u7f6e\u4e3a java11\uff0c\u5982\u4e0b\u56fe\uff1a \u540c\u65f6\uff0cfrigate \u5e94\u7528\u5c5e\u6027\u4e2d\uff0c\u4e5f\u4f1a\u6709 java11 \u7684\u914d\u7f6e\uff1a \u793a\u4f8b\u9879\u76ee \u00b6 web \u5c42\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u67e5\u770b passport \u670d\u52a1\u5c42\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u67e5\u770b newapp","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"grus/introduction/project-structure/#grus","text":"","title":"Grus \u9879\u76ee\u7ed3\u6784"},{"location":"grus/introduction/project-structure/#_1","text":"jdk11\uff1a openjdk11 \u4e0b\u8f7d\u5730\u5740 maven\uff1a\u5efa\u8bae\u4f7f\u7528 3.6+\u7248\u672c\u3002 \u53ef\u53c2\u8003 java\u5b89\u88c5 \u548c maven\u5b89\u88c5","title":"\u73af\u5883\u548c\u4f9d\u8d56\u8bf4\u660e"},{"location":"grus/introduction/project-structure/#pom","text":"","title":"\u9879\u76ee POM"},{"location":"grus/introduction/project-structure/#parent","text":"maven pom parent \u9700\u8981\u7ee7\u627f grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u9700\u8981\u91cd\u70b9\u6ce8\u610f \uff1a\u6b64 parent\uff0c\u5305\u542b\u4e86 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u3001\u5de8\u7075\u795e API\uff08 2021.1 \u53ca\u4ee5\u524d\u7684\u7248\u672c\uff09 \u7b49\u7684\u6240\u6709\u4f9d\u8d56\u3002\u6240\u4ee5\u5927\u5bb6\uff0c\u65e0\u987b\u518d import \u8fd9\u4e9b\u6846\u67b6\u7684 BOM\u3002 \u81ea 2021.2 \u5f00\u59cb\uff0c\u6846\u67b6\u548c\u5de8\u7075\u795e\u7684\u5f15\u7528\u4e0d\u518d\u653e\u5728\u4e00\u8d77\uff0c\u5373\u4f7f\u7528 2021.2 \u53ca\u540e\u9762\u7684\u7248\u672c\uff0c\u9700\u8981\u5728\u7236POM\u6dfb\u52a0\u5982\u4e0b\uff1a <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement>","title":"parent"},{"location":"grus/introduction/project-structure/#build","text":"<build> <finalName> ${project.artifactId} </finalName> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> </plugin> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> </plugin> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> <executions> <execution> <goals> <goal> repackage </goal> <goal> build-info </goal> </goals> </execution> </executions> </plugin> </plugins> </build>","title":"build \u63d2\u4ef6"},{"location":"grus/introduction/project-structure/#_2","text":"pom \u4e2d\uff0c \u53ea\u5141\u8bb8\u901a\u8fc7 starter \u5f15\u5165 grus \u548c spring \u4f9d\u8d56 \u3002 \u5fc5\u987b\u5728 application.propertes(\u6216\u8005 yaml)\u91cc\u8bbe\u7f6e spring.application.name \u7684\u503c\u3002\u8be5\u503c\u5fc5\u987b\u4e3a frigate \u91cc\u7684\u5e94\u7528\u540d\u3002\u5e94\u7528\u90e8\u7f72\u5230\u7edf\u4e00\u73af\u5883\u4e4b\u540e\uff0c\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6821\u9a8c\u8be5\u503c\u662f\u5426\u548c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u7684 APP_NAME \u4e00\u81f4\u3002\u4e0d\u4e00\u81f4\u4f1a\u542f\u52a8\u51fa\u9519\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u539f\u6765 ciicgat-sdk \u548c ciicgat-boot \u4e24\u4e2a\u8001\u6846\u67b6","title":"\u4f7f\u7528\u89c4\u8303"},{"location":"grus/introduction/project-structure/#_3","text":"Grus \u6846\u67b6\u53ea\u652f\u6301 jar \u5305\u65b9\u5f0f\u90e8\u7f72\u5728 docker \u5bb9\u5668\u4e2d\u3002\u6240\u4ee5\u5bf9\u4e8e\u8001\u7684\u5e94\u7528\uff0c\u5047\u5982\u751f\u4ea7\u90e8\u7f72\u5728 k8s \u4e2d\uff0c\u90a3\u4e48\u8981\u4f7f\u7528 grus \u540e\uff0c\u8981\u8fc1\u79fb\u5230 k8s \u91cc\u3002 \u540c\u65f6\uff0c\u5728\u4e0a\u7ebf\u65f6\uff0c\u9700\u8981\u548c\u8fd0\u7ef4\u8bf4\u660e\uff0c\u9879\u76ee\u4f7f\u7528 java11. \u8fd0\u7ef4\u4f1a\u628a Jenkins \u4e2d\u9879\u76ee\u7684 jdk \u914d\u7f6e\u4e3a java11\uff0c\u5982\u4e0b\u56fe\uff1a \u540c\u65f6\uff0cfrigate \u5e94\u7528\u5c5e\u6027\u4e2d\uff0c\u4e5f\u4f1a\u6709 java11 \u7684\u914d\u7f6e\uff1a","title":"\u90e8\u7f72"},{"location":"grus/introduction/project-structure/#_4","text":"web \u5c42\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u67e5\u770b passport \u670d\u52a1\u5c42\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u67e5\u770b newapp","title":"\u793a\u4f8b\u9879\u76ee"},{"location":"grus/job/","text":"Job \u00b6 elastic-job \u6211\u4eec\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5185\u90e8\u7248\u672c\uff1a https://gitlab.wuxingdev.cn/java/elastic-job-lite \u5b83\u89e3\u51b3\u4e86\u539f\u6709 elasticjob \u4f9d\u8d56 jar \u8fc7\u4f4e\u548c zookeeper \u4f9d\u8d56\u6df7\u4e71\u7684\u95ee\u9898\u3002 \u5927\u5bb6\u5728\u4f7f\u7528 job \u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4f7f\u7528 grus-boot-starter-job \uff0c\u4e5f\u4e0d\u7528\u518d\u5f53\u5fc3 jar \u5305\u51b2\u7a81\u5f15\u8d77\u7684\u95ee\u9898\u3002 <dependency> <artifactId>grus-boot-starter-job</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u9700\u8981\u5728 application \u4e2d\u914d\u7f6e namespace\uff0c\u5982\u679c\u4e0d\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5e94\u7528\u540d\u4f5c\u4e3a\u547d\u540d\u7a7a\u95f4\u3002 grus.job.namespace=userdoor \u63d0\u4f9b JobBean \u6ce8\u89e3\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528\u5b83\u5f88\u7b80\u5355\u7684\u521b\u5efa\u4e00\u4e2a job\u3002 \u5927\u5bb6\u53ef\u4ee5\u4ece grus-boot \u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u770b\u5230\u5404\u6a21\u5757\u76f8\u5173\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u5982\u4e0b\uff1a @JobBean(jobName = \"grusSimpleJob\", cron = \"* * * ? * *\") public class GrusSimpleJob implements SimpleJob { private static final Logger LOGGER = LoggerFactory.getLogger(GrusSimpleJob.class); private AtomicInteger atomicInteger = new AtomicInteger(); public GrusSimpleJob() { System.out.println(\"init----------------------------\"); } @Override public void execute(ShardingContext shardingContext) { LOGGER.info(atomicInteger.incrementAndGet() + this.toString()); } public int getValue() { return atomicInteger.get(); } } Cron expression examples \u00b6 Expression Meaning * * * ? * * Every second 0 * * ? * * Every minute 0 */2 * ? * * Every even minute 0 \u00bd * ? * * Every uneven minute 0 */2 * ? * * Every 2 minutes 0 */3 * ? * * Every 3 minutes 0 */4 * ? * * Every 4 minutes 0 */5 * ? * * Every 5 minutes 0 */10 * ? * * Every 10 minutes 0 */15 * ? * * Every 15 minutes 0 */30 * ? * * Every 30 minutes 0 15,30,45 * ? * * Every hour at minutes 15, 30 and 45 0 0 * ? * * Every hour 0 0 */2 ? * * Every hour 0 0 0/2 ? * * Every even hour 0 0 \u00bd ? * * Every uneven hour 0 0 */3 ? * * Every three hours 0 0 */4 ? * * Every four hours 0 0 */6 ? * * Every six hours 0 0 */8 ? * * Every eight hours 0 0 */12 ? * * Every twelve hours 0 0 0 * * ? Every day at midnight - 12am 0 0 1 * * ? Every day at 1am 0 0 6 * * ? Every day at 6am 0 0 12 * * ? Every day at noon - 12pm 0 0 12 * * ? Every day at noon - 12pm 0 0 12 * * SUN Every Sunday at noon 0 0 12 * * MON Every Monday at noon 0 0 12 * * TUE Every Tuesday at noon 0 0 12 * * WED Every Wednesday at noon 0 0 12 * * THU Every Thursday at noon 0 0 12 * * FRI Every Friday at noon 0 0 12 * * SAT Every Saturday at noon 0 0 12 * * MON-FRI Every Weekday at noon 0 0 12 * * SUN,SAT Every Saturday and Sunday at noon 0 0 12 */7 * ? Every 7 days at noon 0 0 12 1 * ? Every month on the 1 st , at noon 0 0 12 2 * ? Every month on the 2 nd , at noon 0 0 12 15 * ? Every month on the 15 th , at noon 0 0 12 \u00bd * ? Every 2 days starting on the 1 st of the month, at noon 0 0 12 \u00bc * ? Every 4 days staring on the 1 st of the month, at noon 0 0 12 L * ? Every month on the last day of the month, at noon 0 0 12 L-2 * ? Every month on the second to last day of the month, at noon 0 0 12 LW * ? Every month on the last weekday, at noon 0 0 12 1L * ? Every month on the last Sunday, at noon 0 0 12 2L * ? Every month on the last Monday, at noon 0 0 12 6L * ? Every month on the last Friday, at noon 0 0 12 1W * ? Every month on the nearest Weekday to the 1 st of the month, at noon 0 0 12 15W * ? Every month on the nearest Weekday to the 15 th of the month, at noon 0 0 12 ? * 2#1 Every month on the first Monday of the Month, at noon 0 0 12 ? * 6#1 Every month on the first Friday of the Month, at noon 0 0 12 ? * 2#2 Every month on the second Monday of the Month, at noon 0 0 12 ? * 5#3 Every month on the third Thursday of the Month, at noon - 12pm 0 0 12 ? JAN * Every day at noon in January only 0 0 12 ? JUN * Every day at noon in June only 0 0 12 ? JAN,JUN * Every day at noon in January and June 0 0 12 ? DEC * Every day at noon in December only 0 0 12 ? JAN,FEB,MAR,APR * Every day at noon in January, February, March and April 0 0 12 ? 9-12 * Every day at noon between September and December","title":"Job"},{"location":"grus/job/#job","text":"elastic-job \u6211\u4eec\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5185\u90e8\u7248\u672c\uff1a https://gitlab.wuxingdev.cn/java/elastic-job-lite \u5b83\u89e3\u51b3\u4e86\u539f\u6709 elasticjob \u4f9d\u8d56 jar \u8fc7\u4f4e\u548c zookeeper \u4f9d\u8d56\u6df7\u4e71\u7684\u95ee\u9898\u3002 \u5927\u5bb6\u5728\u4f7f\u7528 job \u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4f7f\u7528 grus-boot-starter-job \uff0c\u4e5f\u4e0d\u7528\u518d\u5f53\u5fc3 jar \u5305\u51b2\u7a81\u5f15\u8d77\u7684\u95ee\u9898\u3002 <dependency> <artifactId>grus-boot-starter-job</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u9700\u8981\u5728 application \u4e2d\u914d\u7f6e namespace\uff0c\u5982\u679c\u4e0d\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5e94\u7528\u540d\u4f5c\u4e3a\u547d\u540d\u7a7a\u95f4\u3002 grus.job.namespace=userdoor \u63d0\u4f9b JobBean \u6ce8\u89e3\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528\u5b83\u5f88\u7b80\u5355\u7684\u521b\u5efa\u4e00\u4e2a job\u3002 \u5927\u5bb6\u53ef\u4ee5\u4ece grus-boot \u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u770b\u5230\u5404\u6a21\u5757\u76f8\u5173\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u5982\u4e0b\uff1a @JobBean(jobName = \"grusSimpleJob\", cron = \"* * * ? * *\") public class GrusSimpleJob implements SimpleJob { private static final Logger LOGGER = LoggerFactory.getLogger(GrusSimpleJob.class); private AtomicInteger atomicInteger = new AtomicInteger(); public GrusSimpleJob() { System.out.println(\"init----------------------------\"); } @Override public void execute(ShardingContext shardingContext) { LOGGER.info(atomicInteger.incrementAndGet() + this.toString()); } public int getValue() { return atomicInteger.get(); } }","title":"Job"},{"location":"grus/job/#cron-expression-examples","text":"Expression Meaning * * * ? * * Every second 0 * * ? * * Every minute 0 */2 * ? * * Every even minute 0 \u00bd * ? * * Every uneven minute 0 */2 * ? * * Every 2 minutes 0 */3 * ? * * Every 3 minutes 0 */4 * ? * * Every 4 minutes 0 */5 * ? * * Every 5 minutes 0 */10 * ? * * Every 10 minutes 0 */15 * ? * * Every 15 minutes 0 */30 * ? * * Every 30 minutes 0 15,30,45 * ? * * Every hour at minutes 15, 30 and 45 0 0 * ? * * Every hour 0 0 */2 ? * * Every hour 0 0 0/2 ? * * Every even hour 0 0 \u00bd ? * * Every uneven hour 0 0 */3 ? * * Every three hours 0 0 */4 ? * * Every four hours 0 0 */6 ? * * Every six hours 0 0 */8 ? * * Every eight hours 0 0 */12 ? * * Every twelve hours 0 0 0 * * ? Every day at midnight - 12am 0 0 1 * * ? Every day at 1am 0 0 6 * * ? Every day at 6am 0 0 12 * * ? Every day at noon - 12pm 0 0 12 * * ? Every day at noon - 12pm 0 0 12 * * SUN Every Sunday at noon 0 0 12 * * MON Every Monday at noon 0 0 12 * * TUE Every Tuesday at noon 0 0 12 * * WED Every Wednesday at noon 0 0 12 * * THU Every Thursday at noon 0 0 12 * * FRI Every Friday at noon 0 0 12 * * SAT Every Saturday at noon 0 0 12 * * MON-FRI Every Weekday at noon 0 0 12 * * SUN,SAT Every Saturday and Sunday at noon 0 0 12 */7 * ? Every 7 days at noon 0 0 12 1 * ? Every month on the 1 st , at noon 0 0 12 2 * ? Every month on the 2 nd , at noon 0 0 12 15 * ? Every month on the 15 th , at noon 0 0 12 \u00bd * ? Every 2 days starting on the 1 st of the month, at noon 0 0 12 \u00bc * ? Every 4 days staring on the 1 st of the month, at noon 0 0 12 L * ? Every month on the last day of the month, at noon 0 0 12 L-2 * ? Every month on the second to last day of the month, at noon 0 0 12 LW * ? Every month on the last weekday, at noon 0 0 12 1L * ? Every month on the last Sunday, at noon 0 0 12 2L * ? Every month on the last Monday, at noon 0 0 12 6L * ? Every month on the last Friday, at noon 0 0 12 1W * ? Every month on the nearest Weekday to the 1 st of the month, at noon 0 0 12 15W * ? Every month on the nearest Weekday to the 15 th of the month, at noon 0 0 12 ? * 2#1 Every month on the first Monday of the Month, at noon 0 0 12 ? * 6#1 Every month on the first Friday of the Month, at noon 0 0 12 ? * 2#2 Every month on the second Monday of the Month, at noon 0 0 12 ? * 5#3 Every month on the third Thursday of the Month, at noon - 12pm 0 0 12 ? JAN * Every day at noon in January only 0 0 12 ? JUN * Every day at noon in June only 0 0 12 ? JAN,JUN * Every day at noon in January and June 0 0 12 ? DEC * Every day at noon in December only 0 0 12 ? JAN,FEB,MAR,APR * Every day at noon in January, February, March and April 0 0 12 ? 9-12 * Every day at noon between September and December","title":"Cron expression examples"},{"location":"grus/job/elasticjob/","text":"\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6 quick guide \u00b6 Maven \u4f9d\u8d56 \u00b6 <dependency> <groupId>com.dangdang</groupId> <artifactId>elastic-job-lite-core</artifactId> <version>2.1.5</version> </dependency> <dependency> <groupId>com.dangdang</groupId> <artifactId>elastic-job-lite-spring</artifactId> <version>2.1.5</version> </dependency> Elastic-Job \u63d0\u4f9b Simple \u3001 Dataflow \u548c Script 3 \u79cd\u4f5c\u4e1a\u7c7b\u578b\u3002\u4e00\u822c\u6211\u4eec\u7528 Simple \u57fa\u672c\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u573a\u666f\u4e86 \u65b9\u6cd5\u53c2\u6570 shardingContext \u5305\u542b\u4f5c\u4e1a\u914d\u7f6e\u3001\u7247\u548c\u8fd0\u884c\u65f6\u4fe1\u606f\u3002\u53ef\u901a\u8fc7 getShardingTotalCount() , getShardingItem() \u7b49\u65b9\u6cd5\u5206\u522b\u83b7\u53d6\u5206\u7247\u603b\u6570\uff0c\u8fd0\u884c\u5728\u672c\u4f5c\u4e1a\u670d\u52a1\u5668\u7684\u5206\u7247\u5e8f\u5217\u53f7\u7b49\u3002 1. Simple \u7c7b\u578b\u4f5c\u4e1a \u00b6 \u610f\u4e3a\u7b80\u5355\u5b9e\u73b0\uff0c\u672a\u7ecf\u4efb\u4f55\u5c01\u88c5\u7684\u7c7b\u578b\u3002\u9700\u5b9e\u73b0 SimpleJob \u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u4ec5\u63d0\u4f9b\u5355\u4e00\u65b9\u6cd5\u7528\u4e8e\u8986\u76d6\uff0c\u6b64\u65b9\u6cd5\u5c06\u5b9a\u65f6\u6267\u884c\u3002\u4e0e Quartz \u539f\u751f\u63a5\u53e3\u76f8\u4f3c\uff0c\u4f46\u63d0\u4f9b\u4e86\u5f39\u6027\u6269\u7f29\u5bb9\u548c\u5206\u7247\u7b49\u529f\u80fd\u3002 public class MyElasticJob implements SimpleJob { @Override public void execute ( ShardingContext context ) { switch ( context . getShardingItem ()) { case 0 : // do something by sharding item 0 break ; case 1 : // do something by sharding item 1 break ; case 2 : // do something by sharding item 2 break ; // case n: ... } } } \u4ee5\u4e0a\u8003\u8651\u5bf9\u4e0d\u540c\u5206\u7247\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5bf9\u4e8e\u96c6\u7fa4\u4e2d\u53ea\u6709\u4e00\u53f0\u6267\u884c\u4efb\u52a1\u8fd9\u79cd\u573a\u666f\u66f4\u7b80\u5355\uff0c\u4e0d\u7528\u8003\u8651\u5206\u7247\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a public class MyJob implements SimpleJob { @Override public void execute ( ShardingContext shardingContext ) { //do something } } 2. Dataflow \u7c7b\u578b\u4f5c\u4e1a \u00b6 Dataflow \u7c7b\u578b\u7528\u4e8e\u5904\u7406\u6570\u636e\u6d41\uff0c\u9700\u5b9e\u73b0 DataflowJob \u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u63d0\u4f9b 2 \u4e2a\u65b9\u6cd5\u53ef\u4f9b\u8986\u76d6\uff0c\u5206\u522b\u7528\u4e8e\u6293\u53d6( fetchData )\u548c\u5904\u7406( processData )\u6570\u636e\u3002 public class MyElasticJob implements DataflowJob < Foo > { @Override public List < Foo > fetchData ( ShardingContext context ) { switch ( context . getShardingItem ()) { case 0 : List < Foo > data = // get data from database by sharding item 0 return data ; case 1 : List < Foo > data = // get data from database by sharding item 1 return data ; case 2 : List < Foo > data = // get data from database by sharding item 2 return data ; // case n: ... } } @Override public void processData ( ShardingContext shardingContext , List < Foo > data ) { // process data // ... } } \u6d41\u5f0f\u5904\u7406 \u53ef\u901a\u8fc7 DataflowJobConfiguration \u914d\u7f6e\u662f\u5426\u6d41\u5f0f\u5904\u7406\u3002 \u6d41\u5f0f\u5904\u7406\u6570\u636e\u53ea\u6709 fetchData \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e3a null \u6216\u96c6\u5408\u957f\u5ea6\u4e3a\u7a7a\u65f6\uff0c\u4f5c\u4e1a\u624d\u505c\u6b62\u6293\u53d6\uff0c\u5426\u5219\u4f5c\u4e1a\u5c06\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff1b \u975e\u6d41\u5f0f\u5904\u7406\u6570\u636e\u5219\u53ea\u4f1a\u5728\u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u8fc7\u7a0b\u4e2d\u6267\u884c\u4e00\u6b21 fetchData \u65b9\u6cd5\u548c processData \u65b9\u6cd5\uff0c\u968f\u5373\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\u3002 \u5982\u679c\u91c7\u7528\u6d41\u5f0f\u4f5c\u4e1a\u5904\u7406\u65b9\u5f0f\uff0c\u5efa\u8bae processData \u5904\u7406\u6570\u636e\u540e\u66f4\u65b0\u5176\u72b6\u6001\uff0c\u907f\u514d fetchData \u518d\u6b21\u6293\u53d6\u5230\uff0c\u4ece\u800c\u4f7f\u5f97\u4f5c\u4e1a\u6c38\u4e0d\u505c\u6b62\u3002 \u6d41\u5f0f\u6570\u636e\u5904\u7406\u9002\u7528\u4e8e\u4e0d\u95f4\u6b47\u7684\u6570\u636e\u5904\u7406\u3002 3. Script \u7c7b\u578b\u4f5c\u4e1a \u00b6 Script \u7c7b\u578b\u4f5c\u4e1a\u610f\u4e3a\u811a\u672c\u7c7b\u578b\u4f5c\u4e1a\uff0c\u652f\u6301 shell \uff0c python \uff0c perl \u7b49\u6240\u6709\u7c7b\u578b\u811a\u672c\u3002\u53ea\u9700\u901a\u8fc7\u63a7\u5236\u53f0\u6216\u4ee3\u7801\u914d\u7f6e scriptCommandLine \u5373\u53ef\uff0c\u65e0\u9700\u7f16\u7801\u3002\u6267\u884c\u811a\u672c\u8def\u5f84\u53ef\u5305\u542b\u53c2\u6570\uff0c\u53c2\u6570\u4f20\u9012\u5b8c\u6bd5\u540e\uff0c\u4f5c\u4e1a\u6846\u67b6\u4f1a\u81ea\u52a8\u8ffd\u52a0\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u4f5c\u4e1a\u8fd0\u884c\u65f6\u4fe1\u606f\u3002 #!/bin/bash echo sharding execution context is $* \u4f5c\u4e1a\u8fd0\u884c\u65f6\u8f93\u51fa sharding execution context is {\"jobName\":\"scriptElasticDemoJob\",\"shardingTotalCount\":10,\"jobParameter\":\"\",\"shardingItem\":0,\"shardingParameter\":\"A\"} \u4f7f\u7528 Java \u4ee3\u7801\u914d\u7f6e \u00b6 \u901a\u7528\u4f5c\u4e1a\u914d\u7f6e // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e JobCoreConfiguration simpleCoreConfig = JobCoreConfiguration . newBuilder ( \"demoSimpleJob\" , \"0/15 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49SIMPLE\u7c7b\u578b\u914d\u7f6e SimpleJobConfiguration simpleJobConfig = new SimpleJobConfiguration ( simpleCoreConfig , SimpleDemoJob . class . getCanonicalName ()); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration simpleJobRootConfig = LiteJobConfiguration . newBuilder ( simpleJobConfig ). build (); // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e JobCoreConfiguration dataflowCoreConfig = JobCoreConfiguration . newBuilder ( \"demoDataflowJob\" , \"0/30 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49DATAFLOW\u7c7b\u578b\u914d\u7f6e DataflowJobConfiguration dataflowJobConfig = new DataflowJobConfiguration ( dataflowCoreConfig , DataflowDemoJob . class . getCanonicalName (), true ); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration dataflowJobRootConfig = LiteJobConfiguration . newBuilder ( dataflowJobConfig ). build (); // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e\u914d\u7f6e JobCoreConfiguration scriptCoreConfig = JobCoreConfiguration . newBuilder ( \"demoScriptJob\" , \"0/45 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49SCRIPT\u7c7b\u578b\u914d\u7f6e ScriptJobConfiguration scriptJobConfig = new ScriptJobConfiguration ( scriptCoreConfig , \"test.sh\" ); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration scriptJobRootConfig = LiteJobConfiguration . newBuilder ( scriptCoreConfig ). build (); Spring \u547d\u540d\u7a7a\u95f4\u914d\u7f6e \u00b6 \u7531\u4e8e\u6846\u67b6\u5728 misfire \u4e0a\u673a\u5236\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u5f3a\u70c8\u5efa\u8bae\u6bcf\u4e2a\u4efb\u52a1\u7684 misfire \u90fd\u8bbe\u6210 false \u4e0e Spring \u5bb9\u5668\u914d\u5408\u4f7f\u7528\u4f5c\u4e1a\uff0c\u53ef\u5c06\u4f5c\u4e1a Bean \u914d\u7f6e\u4e3a Spring Bean \uff0c\u5e76\u5728\u4f5c\u4e1a\u4e2d\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u4f7f\u7528 Spring \u5bb9\u5668\u7ba1\u7406\u7684\u6570\u636e\u6e90\u7b49\u5bf9\u8c61\u3002\u53ef\u7528 placeholder \u5360\u4f4d\u7b26\u4ece\u5c5e\u6027\u6587\u4ef6\u4e2d\u53d6\u503c\u3002 Lite \u53ef\u8003\u8651\u4f7f\u7528 Spring \u547d\u540d\u7a7a\u95f4\u65b9\u5f0f\u7b80\u5316\u914d\u7f6e\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:reg= \"http://www.dangdang.com/schema/ddframe/reg\" xmlns:job= \"http://www.dangdang.com/schema/ddframe/job\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.dangdang.com/schema/ddframe/reg http://www.dangdang.com/schema/ddframe/reg/reg.xsd http://www.dangdang.com/schema/ddframe/job http://www.dangdang.com/schema/ddframe/job/job.xsd \" > <!--\u914d\u7f6e\u4f5c\u4e1a\u6ce8\u518c\u4e2d\u5fc3 --> <reg:zookeeper id= \"regCenter\" server-lists= \" yourhost:2181\" namespace= \"gat-job\" base-sleep-time-milliseconds= \"1000\" max-sleep-time-milliseconds= \"3000\" max-retries= \"3\" /> <!-- \u914d\u7f6e\u7b80\u5355\u4f5c\u4e1a --> <job:simple id= \"simpleElasticJob\" class= \"xxx.MySimpleElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" overwrite= \"true\" misfire= \"false\" /> <!-- \u6ce8\u610f\u8fd9\u91cc\u53ef\u4ee5\u628aoverwrite\u914d\u7f6e\u6210true\uff0c\u4ee5\u9632\u66f4\u6539\u53c2\u6570\u540ezookeeper\u8fd8\u662f\u5b58\u50a8\u7684\u539f\u914d\u7f6e\u5bfc\u81f4\u6df7\u6dc6 --> <!-- \u914d\u7f6e\u6570\u636e\u6d41\u4f5c\u4e1a--> <job:dataflow id= \"throughputDataflow\" class= \"xxx.MyThroughputDataflowElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" misfire= \"false\" /> <!-- \u914d\u7f6e\u811a\u672c\u4f5c\u4e1a--> <job:script id= \"scriptElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" script-command-line= \"/your/file/path/demo.sh\" /> <!-- \u914d\u7f6e\u5e26\u76d1\u542c\u7684\u7b80\u5355\u4f5c\u4e1a--> <job:simple id= \"listenerElasticJob\" class= \"xxx.MySimpleListenerElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" overwrite= \"true\" misfire= \"false\" > <job:listener class= \"xx.MySimpleJobListener\" /> <job:distributed-listener class= \"xx.MyOnceSimpleJobListener\" started-timeout-milliseconds= \"1000\" completed-timeout-milliseconds= \"2000\" /> </job:simple> <!-- \u914d\u7f6e\u5e26\u4f5c\u4e1a\u6570\u636e\u5e93\u4e8b\u4ef6\u8ffd\u8e2a\u7684\u7b80\u5355\u4f5c\u4e1a--> <job:simple id= \"listenerElasticJob\" class= \"xxx.MySimpleListenerElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" event-trace-rdb-data-source= \"yourDataSource\" > </job:simple> </beans> \u5177\u4f53\u6bcf\u4e2a\u6807\u7b7e\u5177\u4f53\u652f\u6301\u7684\u8be6\u7ec6\u914d\u7f6e\u53c2\u8003\u4ee5\u4e0b\u8868\u683c job:simple \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 id String \u662f \u4f5c\u4e1a\u540d\u79f0 class String \u5426 \u4f5c\u4e1a\u5b9e\u73b0\u7c7b\uff0c\u9700\u5b9e\u73b0 ElasticJob \u63a5\u53e3\uff0c\u811a\u672c\u578b\u4f5c\u4e1a\u4e0d\u9700\u8981\u914d\u7f6e registry-center-ref String \u662f \u6ce8\u518c\u4e2d\u5fc3 Bean \u7684\u5f15\u7528\uff0c\u9700\u5f15\u7528 reg:zookeeper \u7684\u58f0\u660e cron String \u662f cron \u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u914d\u7f6e\u4f5c\u4e1a\u89e6\u53d1\u65f6\u95f4 sharding-total-count int \u662f \u4f5c\u4e1a\u5206\u7247\u603b\u6570 sharding-item-parameters String \u5426 \u5206\u7247\u5e8f\u5217\u53f7\u548c\u53c2\u6570\u7528\u7b49\u53f7\u5206\u9694\uff0c\u591a\u4e2a\u952e\u503c\u5bf9\u7528\u9017\u53f7\u5206\u9694 \u5206\u7247\u5e8f\u5217\u53f7\u4ece 0 \u5f00\u59cb\uff0c\u4e0d\u53ef\u5927\u4e8e\u6216\u7b49\u4e8e\u4f5c\u4e1a\u5206\u7247\u603b\u6570 \u5982\uff1a 0=a,1=b,2=c job-parameter String \u5426 \u4f5c\u4e1a\u81ea\u5b9a\u4e49\u53c2\u6570 \u4f5c\u4e1a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u53ef\u901a\u8fc7\u4f20\u9012\u8be5\u53c2\u6570\u4e3a\u4f5c\u4e1a\u8c03\u5ea6\u7684\u4e1a\u52a1\u65b9\u6cd5\u4f20\u53c2\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e26\u53c2\u6570\u7684\u4f5c\u4e1a \u4f8b\uff1a\u6bcf\u6b21\u83b7\u53d6\u7684\u6570\u636e\u91cf\u3001\u4f5c\u4e1a\u5b9e\u4f8b\u4ece\u6570\u636e\u5e93\u8bfb\u53d6\u7684\u4e3b\u952e\u7b49 monitor-execution boolean \u5426 true \u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001 \u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u65f6\u95f4\u548c\u95f4\u9694\u65f6\u95f4\u5747\u975e\u5e38\u77ed\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u4e0d\u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001\u4ee5\u63d0\u5347\u6548\u7387\u3002\u56e0\u4e3a\u662f\u77ac\u65f6\u72b6\u6001\uff0c\u6240\u4ee5\u65e0\u5fc5\u8981\u76d1\u63a7\u3002\u8bf7\u7528\u6237\u81ea\u884c\u589e\u52a0\u6570\u636e\u5806\u79ef\u76d1\u63a7\u3002\u5e76\u4e14\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u91cd\u590d\u9009\u53d6\uff0c\u5e94\u5728\u4f5c\u4e1a\u4e2d\u5b9e\u73b0\u5e42\u7b49\u6027\u3002 \u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u65f6\u95f4\u548c\u95f4\u9694\u65f6\u95f4\u5747\u8f83\u957f\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001\uff0c\u53ef\u4fdd\u8bc1\u6570\u636e\u4e0d\u4f1a\u91cd\u590d\u9009\u53d6\u3002 monitor-port int \u5426 -1 \u4f5c\u4e1a\u76d1\u63a7\u7aef\u53e3 \u5efa\u8bae\u914d\u7f6e\u4f5c\u4e1a\u76d1\u63a7\u7aef\u53e3, \u65b9\u4fbf\u5f00\u53d1\u8005 dump \u4f5c\u4e1a\u4fe1\u606f\u3002 \u4f7f\u7528\u65b9\u6cd5: echo \"dump\" | nc 127.0.0.1 9888 max-time-diff-seconds int \u5426 -1 \u6700\u5927\u5141\u8bb8\u7684\u672c\u673a\u4e0e\u6ce8\u518c\u4e2d\u5fc3\u7684\u65f6\u95f4\u8bef\u5dee\u79d2\u6570 \u5982\u679c\u65f6\u95f4\u8bef\u5dee\u8d85\u8fc7\u914d\u7f6e\u79d2\u6570\u5219\u4f5c\u4e1a\u542f\u52a8\u65f6\u5c06\u629b\u5f02\u5e38 \u914d\u7f6e\u4e3a -1 \u8868\u793a\u4e0d\u6821\u9a8c\u65f6\u95f4\u8bef\u5dee failover boolean \u5426 false \u662f\u5426\u5f00\u542f\u5931\u6548\u8f6c\u79fb \u4ec5 monitorExecution \u5f00\u542f\uff0c\u5931\u6548\u8f6c\u79fb\u624d\u6709\u6548 misfire boolean \u5426 true \u662f\u5426\u5f00\u542f\u9519\u8fc7\u4efb\u52a1\u91cd\u65b0\u6267\u884c job-sharding-strategy-class String \u5426 true \u4f5c\u4e1a\u5206\u7247\u7b56\u7565\u5b9e\u73b0\u7c7b\u5168\u8def\u5f84 \u9ed8\u8ba4\u4f7f\u7528\u5e73\u5747\u5206\u914d\u7b56\u7565 description String \u5426 \u4f5c\u4e1a\u63cf\u8ff0\u4fe1\u606f disabled boolean \u5426 false \u4f5c\u4e1a\u662f\u5426\u7981\u6b62\u542f\u52a8 \u53ef\u7528\u4e8e\u90e8\u7f72\u4f5c\u4e1a\u65f6\uff0c\u5148\u7981\u6b62\u542f\u52a8\uff0c\u90e8\u7f72\u7ed3\u675f\u540e\u7edf\u4e00\u542f\u52a8 overwrite boolean \u5426 false \u672c\u5730\u914d\u7f6e\u662f\u5426\u53ef\u8986\u76d6\u6ce8\u518c\u4e2d\u5fc3\u914d\u7f6e \u5982\u679c\u53ef\u8986\u76d6\uff0c\u6bcf\u6b21\u542f\u52a8\u4f5c\u4e1a\u90fd\u4ee5\u672c\u5730\u914d\u7f6e\u4e3a\u51c6 jobProperties String \u5426 \u4f5c\u4e1a\u5b9a\u5236\u5316\u5c5e\u6027\uff0c\u76ee\u524d\u652f\u6301 job_exception_handler \u548c executor_service_handler \uff0c\u7528\u4e8e\u6269\u5c55\u5f02\u5e38\u5904\u7406\u548c\u81ea\u5b9a\u4e49\u4f5c\u4e1a\u5904\u7406\u7ebf\u7a0b\u6c60 event-trace-rdb-data-source String \u5426 \u4f5c\u4e1a\u4e8b\u4ef6\u8ffd\u8e2a\u7684\u6570\u636e\u6e90 Bean \u5f15\u7528 job:dataflow \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 job:dataflow \u547d\u540d\u7a7a\u95f4\u62e5\u6709 job:simple \u547d\u540d\u7a7a\u95f4\u7684\u5168\u90e8\u5c5e\u6027\uff0c\u4ee5\u4e0b\u4ec5\u5217\u51fa\u7279\u6709\u5c5e\u6027 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 streaming-process boolean \u5426 false \u662f\u5426\u6d41\u5f0f\u5904\u7406\u6570\u636e \u5982\u679c\u6d41\u5f0f\u5904\u7406\u6570\u636e, \u5219 fetchData \u4e0d\u8fd4\u56de\u7a7a\u7ed3\u679c\u5c06\u6301\u7eed\u6267\u884c\u4f5c\u4e1a \u5982\u679c\u975e\u6d41\u5f0f\u5904\u7406\u6570\u636e, \u5219\u5904\u7406\u6570\u636e\u5b8c\u6210\u540e\u4f5c\u4e1a\u7ed3\u675f job:script \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e\uff0c\u57fa\u672c\u5c5e\u6027\u53c2\u7167 job:simple \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 job:script \u547d\u540d\u7a7a\u95f4\u62e5\u6709 job:simple \u547d\u540d\u7a7a\u95f4\u7684\u5168\u90e8\u5c5e\u6027\uff0c\u4ee5\u4e0b\u4ec5\u5217\u51fa\u7279\u6709\u5c5e\u6027 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 script-command-line String \u5426 \u811a\u672c\u578b\u4f5c\u4e1a\u6267\u884c\u547d\u4ee4\u884c job:listener \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 job:listener \u5fc5\u987b\u914d\u7f6e\u4e3a job:bean \u7684\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u5728\u5b50\u5143\u7d20\u4e2d\u53ea\u5141\u8bb8\u51fa\u73b0\u4e00\u6b21 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 class String \u662f \u524d\u7f6e\u540e\u7f6e\u4efb\u52a1\u76d1\u542c\u5b9e\u73b0\u7c7b\uff0c\u9700\u5b9e\u73b0 ElasticJobListener \u63a5\u53e3 job:distributed-listener \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 job:distributed-listener \u5fc5\u987b\u914d\u7f6e\u4e3a job:bean \u7684\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u5728\u5b50\u5143\u7d20\u4e2d\u53ea\u5141\u8bb8\u51fa\u73b0\u4e00\u6b21 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 class String \u662f \u524d\u7f6e\u540e\u7f6e\u4efb\u52a1\u5206\u5e03\u5f0f\u76d1\u542c\u5b9e\u73b0\u7c7b\uff0c\u9700\u7ee7\u627f AbstractDistributeOnceElasticJobListener \u7c7b started-timeout-milliseconds long \u5426 Long.MAX_VALUE \u6700\u540e\u4e00\u4e2a\u4f5c\u4e1a\u6267\u884c\u524d\u7684\u6267\u884c\u65b9\u6cd5\u7684\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 completed-timeout-milliseconds long \u5426 Long.MAX_VALUE \u6700\u540e\u4e00\u4e2a\u4f5c\u4e1a\u6267\u884c\u540e\u7684\u6267\u884c\u65b9\u6cd5\u7684\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 reg:zookeeper \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e \u00b6 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 id String \u662f \u6ce8\u518c\u4e2d\u5fc3\u5728 Spring \u5bb9\u5668\u4e2d\u7684\u4e3b\u952e server-lists String \u662f \u8fde\u63a5 Zookeeper \u670d\u52a1\u5668\u7684\u5217\u8868 \u5305\u62ec IP \u5730\u5740\u548c\u7aef\u53e3\u53f7 \u591a\u4e2a\u5730\u5740\u7528\u9017\u53f7\u5206\u9694 \u5982: host1:2181,host2:2181 namespace String \u662f Zookeeper \u7684\u547d\u540d\u7a7a\u95f4 base-sleep-time-milliseconds int \u5426 1000 \u7b49\u5f85\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u7684\u521d\u59cb\u503c \u5355\u4f4d\uff1a\u6beb\u79d2 max-sleep-time-milliseconds int \u5426 3000 \u7b49\u5f85\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u7684\u6700\u5927\u503c \u5355\u4f4d\uff1a\u6beb\u79d2 max-retries int \u5426 3 \u6700\u5927\u91cd\u8bd5\u6b21\u6570 session-timeout-milliseconds int \u5426 60000 \u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 connection-timeout-milliseconds int \u5426 15000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 digest String \u5426 \u65e0\u9a8c\u8bc1 \u8fde\u63a5 Zookeeper \u7684\u6743\u9650\u4ee4\u724c \u7f3a\u7701\u4e3a\u4e0d\u9700\u8981\u6743\u9650\u9a8c\u8bc1 \u4f5c\u4e1a\u542f\u52a8 \u00b6 1. Java \u542f\u52a8\u65b9\u5f0f \u00b6 public class JobDemo { public static void main ( String [] args ) { new JobScheduler ( createRegistryCenter (), createJobConfiguration ()). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } } 2. Spring \u542f\u52a8\u65b9\u5f0f \u00b6 \u53c2\u89c1 Spring \u547d\u540d\u7a7a\u95f4 \u5176\u4ed6\u529f\u80fd \u00b6 1. \u4efb\u52a1\u76d1\u542c \u00b6 \u53ef\u901a\u8fc7\u914d\u7f6e\u591a\u4e2a\u4efb\u52a1\u76d1\u542c\u5668\uff0c\u5728\u4efb\u52a1\u6267\u884c\u524d\u548c\u6267\u884c\u540e\u6267\u884c\u76d1\u542c\u7684\u65b9\u6cd5\u3002\u76d1\u542c\u5668\u5206\u4e3a\u6bcf\u53f0\u4f5c\u4e1a\u8282\u70b9\u5747\u6267\u884c\u548c\u5206\u5e03\u5f0f\u573a\u666f\u4e2d\u4ec5\u5355\u4e00\u8282\u70b9\u6267\u884c 2 \u79cd\u3002 1. \u6bcf\u53f0\u4f5c\u4e1a\u8282\u70b9\u5747\u6267\u884c\u7684\u76d1\u542c \u00b6 \u82e5\u4f5c\u4e1a\u5904\u7406\u4f5c\u4e1a\u670d\u52a1\u5668\u7684\u6587\u4ef6\uff0c\u5904\u7406\u5b8c\u6210\u540e\u5220\u9664\u6587\u4ef6\uff0c\u53ef\u8003\u8651\u4f7f\u7528\u6bcf\u4e2a\u8282\u70b9\u5747\u6267\u884c\u6e05\u7406\u4efb\u52a1\u3002\u6b64\u7c7b\u578b\u4efb\u52a1\u5b9e\u73b0\u7b80\u5355\uff0c\u4e14\u65e0\u9700\u8003\u8651\u5168\u5c40\u5206\u5e03\u5f0f\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u8bf7\u5c3d\u91cf\u4f7f\u7528\u6b64\u7c7b\u578b\u76d1\u542c\u5668\u3002 \u6b65\u9aa4\uff1a \u5b9a\u4e49\u76d1\u542c\u5668 public class MyElasticJobListener implements ElasticJobListener { @Override public void beforeJobExecuted ( ShardingContexts shardingContexts ) { // do something ... } @Override public void afterJobExecuted ( ShardingContexts shardingContexts ) { // do something ... } } \u5c06\u76d1\u542c\u5668\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 JobScheduler public class JobMain { public static void main ( String [] args ) { new JobScheduler ( createRegistryCenter (), createJobConfiguration (), new MyElasticJobListener ()). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } } 2. \u5206\u5e03\u5f0f\u573a\u666f\u4e2d\u4ec5\u5355\u4e00\u8282\u70b9\u6267\u884c\u7684\u76d1\u542c \u00b6 \u82e5\u4f5c\u4e1a\u5904\u7406\u6570\u636e\u5e93\u6570\u636e\uff0c\u5904\u7406\u5b8c\u6210\u540e\u53ea\u9700\u4e00\u4e2a\u8282\u70b9\u5b8c\u6210\u6570\u636e\u6e05\u7406\u4efb\u52a1\u5373\u53ef\u3002\u6b64\u7c7b\u578b\u4efb\u52a1\u5904\u7406\u590d\u6742\uff0c\u9700\u540c\u6b65\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4f5c\u4e1a\u7684\u72b6\u6001\u540c\u6b65\uff0c\u63d0\u4f9b\u4e86\u8d85\u65f6\u8bbe\u7f6e\u6765\u907f\u514d\u4f5c\u4e1a\u4e0d\u540c\u6b65\u5bfc\u81f4\u7684\u6b7b\u9501\uff0c\u8bf7\u8c28\u614e\u4f7f\u7528\u3002 \u6b65\u9aa4\uff1a \u5b9a\u4e49\u76d1\u542c\u5668 public class TestDistributeOnceElasticJobListener extends AbstractDistributeOnceElasticJobListener { public TestDistributeOnceElasticJobListener ( long startTimeoutMills , long completeTimeoutMills ) { super ( startTimeoutMills , completeTimeoutMills ); } @Override public void doBeforeJobExecutedAtLastStarted ( ShardingContexts shardingContexts ) { // do something ... } @Override public void doAfterJobExecutedAtLastCompleted ( ShardingContexts shardingContexts ) { // do something ... } } \u5c06\u76d1\u542c\u5668\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 JobScheduler public class JobMain { public static void main ( String [] args ) { long startTimeoutMills = 5000L ; long completeTimeoutMills = 10000L ; new JobScheduler ( createRegistryCenter (), createJobConfiguration (), new MyDistributeOnceElasticJobListener ( startTimeoutMills , completeTimeoutMills )). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } } \u53c2\u8003\u8d44\u6599 \u00b6 Elastic-Job-Lite \u5b98\u65b9\u6587\u6863","title":"ElasticJob\u4ecb\u7ecd"},{"location":"grus/job/elasticjob/#quick-guide","text":"","title":"\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6 quick guide"},{"location":"grus/job/elasticjob/#maven","text":"<dependency> <groupId>com.dangdang</groupId> <artifactId>elastic-job-lite-core</artifactId> <version>2.1.5</version> </dependency> <dependency> <groupId>com.dangdang</groupId> <artifactId>elastic-job-lite-spring</artifactId> <version>2.1.5</version> </dependency> Elastic-Job \u63d0\u4f9b Simple \u3001 Dataflow \u548c Script 3 \u79cd\u4f5c\u4e1a\u7c7b\u578b\u3002\u4e00\u822c\u6211\u4eec\u7528 Simple \u57fa\u672c\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u573a\u666f\u4e86 \u65b9\u6cd5\u53c2\u6570 shardingContext \u5305\u542b\u4f5c\u4e1a\u914d\u7f6e\u3001\u7247\u548c\u8fd0\u884c\u65f6\u4fe1\u606f\u3002\u53ef\u901a\u8fc7 getShardingTotalCount() , getShardingItem() \u7b49\u65b9\u6cd5\u5206\u522b\u83b7\u53d6\u5206\u7247\u603b\u6570\uff0c\u8fd0\u884c\u5728\u672c\u4f5c\u4e1a\u670d\u52a1\u5668\u7684\u5206\u7247\u5e8f\u5217\u53f7\u7b49\u3002","title":"Maven \u4f9d\u8d56"},{"location":"grus/job/elasticjob/#1-simple","text":"\u610f\u4e3a\u7b80\u5355\u5b9e\u73b0\uff0c\u672a\u7ecf\u4efb\u4f55\u5c01\u88c5\u7684\u7c7b\u578b\u3002\u9700\u5b9e\u73b0 SimpleJob \u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u4ec5\u63d0\u4f9b\u5355\u4e00\u65b9\u6cd5\u7528\u4e8e\u8986\u76d6\uff0c\u6b64\u65b9\u6cd5\u5c06\u5b9a\u65f6\u6267\u884c\u3002\u4e0e Quartz \u539f\u751f\u63a5\u53e3\u76f8\u4f3c\uff0c\u4f46\u63d0\u4f9b\u4e86\u5f39\u6027\u6269\u7f29\u5bb9\u548c\u5206\u7247\u7b49\u529f\u80fd\u3002 public class MyElasticJob implements SimpleJob { @Override public void execute ( ShardingContext context ) { switch ( context . getShardingItem ()) { case 0 : // do something by sharding item 0 break ; case 1 : // do something by sharding item 1 break ; case 2 : // do something by sharding item 2 break ; // case n: ... } } } \u4ee5\u4e0a\u8003\u8651\u5bf9\u4e0d\u540c\u5206\u7247\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5bf9\u4e8e\u96c6\u7fa4\u4e2d\u53ea\u6709\u4e00\u53f0\u6267\u884c\u4efb\u52a1\u8fd9\u79cd\u573a\u666f\u66f4\u7b80\u5355\uff0c\u4e0d\u7528\u8003\u8651\u5206\u7247\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a public class MyJob implements SimpleJob { @Override public void execute ( ShardingContext shardingContext ) { //do something } }","title":"1. Simple \u7c7b\u578b\u4f5c\u4e1a"},{"location":"grus/job/elasticjob/#2-dataflow","text":"Dataflow \u7c7b\u578b\u7528\u4e8e\u5904\u7406\u6570\u636e\u6d41\uff0c\u9700\u5b9e\u73b0 DataflowJob \u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u63d0\u4f9b 2 \u4e2a\u65b9\u6cd5\u53ef\u4f9b\u8986\u76d6\uff0c\u5206\u522b\u7528\u4e8e\u6293\u53d6( fetchData )\u548c\u5904\u7406( processData )\u6570\u636e\u3002 public class MyElasticJob implements DataflowJob < Foo > { @Override public List < Foo > fetchData ( ShardingContext context ) { switch ( context . getShardingItem ()) { case 0 : List < Foo > data = // get data from database by sharding item 0 return data ; case 1 : List < Foo > data = // get data from database by sharding item 1 return data ; case 2 : List < Foo > data = // get data from database by sharding item 2 return data ; // case n: ... } } @Override public void processData ( ShardingContext shardingContext , List < Foo > data ) { // process data // ... } } \u6d41\u5f0f\u5904\u7406 \u53ef\u901a\u8fc7 DataflowJobConfiguration \u914d\u7f6e\u662f\u5426\u6d41\u5f0f\u5904\u7406\u3002 \u6d41\u5f0f\u5904\u7406\u6570\u636e\u53ea\u6709 fetchData \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e3a null \u6216\u96c6\u5408\u957f\u5ea6\u4e3a\u7a7a\u65f6\uff0c\u4f5c\u4e1a\u624d\u505c\u6b62\u6293\u53d6\uff0c\u5426\u5219\u4f5c\u4e1a\u5c06\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff1b \u975e\u6d41\u5f0f\u5904\u7406\u6570\u636e\u5219\u53ea\u4f1a\u5728\u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u8fc7\u7a0b\u4e2d\u6267\u884c\u4e00\u6b21 fetchData \u65b9\u6cd5\u548c processData \u65b9\u6cd5\uff0c\u968f\u5373\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\u3002 \u5982\u679c\u91c7\u7528\u6d41\u5f0f\u4f5c\u4e1a\u5904\u7406\u65b9\u5f0f\uff0c\u5efa\u8bae processData \u5904\u7406\u6570\u636e\u540e\u66f4\u65b0\u5176\u72b6\u6001\uff0c\u907f\u514d fetchData \u518d\u6b21\u6293\u53d6\u5230\uff0c\u4ece\u800c\u4f7f\u5f97\u4f5c\u4e1a\u6c38\u4e0d\u505c\u6b62\u3002 \u6d41\u5f0f\u6570\u636e\u5904\u7406\u9002\u7528\u4e8e\u4e0d\u95f4\u6b47\u7684\u6570\u636e\u5904\u7406\u3002","title":"2. Dataflow \u7c7b\u578b\u4f5c\u4e1a"},{"location":"grus/job/elasticjob/#3-script","text":"Script \u7c7b\u578b\u4f5c\u4e1a\u610f\u4e3a\u811a\u672c\u7c7b\u578b\u4f5c\u4e1a\uff0c\u652f\u6301 shell \uff0c python \uff0c perl \u7b49\u6240\u6709\u7c7b\u578b\u811a\u672c\u3002\u53ea\u9700\u901a\u8fc7\u63a7\u5236\u53f0\u6216\u4ee3\u7801\u914d\u7f6e scriptCommandLine \u5373\u53ef\uff0c\u65e0\u9700\u7f16\u7801\u3002\u6267\u884c\u811a\u672c\u8def\u5f84\u53ef\u5305\u542b\u53c2\u6570\uff0c\u53c2\u6570\u4f20\u9012\u5b8c\u6bd5\u540e\uff0c\u4f5c\u4e1a\u6846\u67b6\u4f1a\u81ea\u52a8\u8ffd\u52a0\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u4f5c\u4e1a\u8fd0\u884c\u65f6\u4fe1\u606f\u3002 #!/bin/bash echo sharding execution context is $* \u4f5c\u4e1a\u8fd0\u884c\u65f6\u8f93\u51fa sharding execution context is {\"jobName\":\"scriptElasticDemoJob\",\"shardingTotalCount\":10,\"jobParameter\":\"\",\"shardingItem\":0,\"shardingParameter\":\"A\"}","title":"3. Script \u7c7b\u578b\u4f5c\u4e1a"},{"location":"grus/job/elasticjob/#java","text":"\u901a\u7528\u4f5c\u4e1a\u914d\u7f6e // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e JobCoreConfiguration simpleCoreConfig = JobCoreConfiguration . newBuilder ( \"demoSimpleJob\" , \"0/15 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49SIMPLE\u7c7b\u578b\u914d\u7f6e SimpleJobConfiguration simpleJobConfig = new SimpleJobConfiguration ( simpleCoreConfig , SimpleDemoJob . class . getCanonicalName ()); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration simpleJobRootConfig = LiteJobConfiguration . newBuilder ( simpleJobConfig ). build (); // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e JobCoreConfiguration dataflowCoreConfig = JobCoreConfiguration . newBuilder ( \"demoDataflowJob\" , \"0/30 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49DATAFLOW\u7c7b\u578b\u914d\u7f6e DataflowJobConfiguration dataflowJobConfig = new DataflowJobConfiguration ( dataflowCoreConfig , DataflowDemoJob . class . getCanonicalName (), true ); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration dataflowJobRootConfig = LiteJobConfiguration . newBuilder ( dataflowJobConfig ). build (); // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e\u914d\u7f6e JobCoreConfiguration scriptCoreConfig = JobCoreConfiguration . newBuilder ( \"demoScriptJob\" , \"0/45 * * * * ?\" , 10 ). build (); // \u5b9a\u4e49SCRIPT\u7c7b\u578b\u914d\u7f6e ScriptJobConfiguration scriptJobConfig = new ScriptJobConfiguration ( scriptCoreConfig , \"test.sh\" ); // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e JobRootConfiguration scriptJobRootConfig = LiteJobConfiguration . newBuilder ( scriptCoreConfig ). build ();","title":"\u4f7f\u7528 Java \u4ee3\u7801\u914d\u7f6e"},{"location":"grus/job/elasticjob/#spring","text":"\u7531\u4e8e\u6846\u67b6\u5728 misfire \u4e0a\u673a\u5236\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u5f3a\u70c8\u5efa\u8bae\u6bcf\u4e2a\u4efb\u52a1\u7684 misfire \u90fd\u8bbe\u6210 false \u4e0e Spring \u5bb9\u5668\u914d\u5408\u4f7f\u7528\u4f5c\u4e1a\uff0c\u53ef\u5c06\u4f5c\u4e1a Bean \u914d\u7f6e\u4e3a Spring Bean \uff0c\u5e76\u5728\u4f5c\u4e1a\u4e2d\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u4f7f\u7528 Spring \u5bb9\u5668\u7ba1\u7406\u7684\u6570\u636e\u6e90\u7b49\u5bf9\u8c61\u3002\u53ef\u7528 placeholder \u5360\u4f4d\u7b26\u4ece\u5c5e\u6027\u6587\u4ef6\u4e2d\u53d6\u503c\u3002 Lite \u53ef\u8003\u8651\u4f7f\u7528 Spring \u547d\u540d\u7a7a\u95f4\u65b9\u5f0f\u7b80\u5316\u914d\u7f6e\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:reg= \"http://www.dangdang.com/schema/ddframe/reg\" xmlns:job= \"http://www.dangdang.com/schema/ddframe/job\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.dangdang.com/schema/ddframe/reg http://www.dangdang.com/schema/ddframe/reg/reg.xsd http://www.dangdang.com/schema/ddframe/job http://www.dangdang.com/schema/ddframe/job/job.xsd \" > <!--\u914d\u7f6e\u4f5c\u4e1a\u6ce8\u518c\u4e2d\u5fc3 --> <reg:zookeeper id= \"regCenter\" server-lists= \" yourhost:2181\" namespace= \"gat-job\" base-sleep-time-milliseconds= \"1000\" max-sleep-time-milliseconds= \"3000\" max-retries= \"3\" /> <!-- \u914d\u7f6e\u7b80\u5355\u4f5c\u4e1a --> <job:simple id= \"simpleElasticJob\" class= \"xxx.MySimpleElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" overwrite= \"true\" misfire= \"false\" /> <!-- \u6ce8\u610f\u8fd9\u91cc\u53ef\u4ee5\u628aoverwrite\u914d\u7f6e\u6210true\uff0c\u4ee5\u9632\u66f4\u6539\u53c2\u6570\u540ezookeeper\u8fd8\u662f\u5b58\u50a8\u7684\u539f\u914d\u7f6e\u5bfc\u81f4\u6df7\u6dc6 --> <!-- \u914d\u7f6e\u6570\u636e\u6d41\u4f5c\u4e1a--> <job:dataflow id= \"throughputDataflow\" class= \"xxx.MyThroughputDataflowElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" misfire= \"false\" /> <!-- \u914d\u7f6e\u811a\u672c\u4f5c\u4e1a--> <job:script id= \"scriptElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" script-command-line= \"/your/file/path/demo.sh\" /> <!-- \u914d\u7f6e\u5e26\u76d1\u542c\u7684\u7b80\u5355\u4f5c\u4e1a--> <job:simple id= \"listenerElasticJob\" class= \"xxx.MySimpleListenerElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" overwrite= \"true\" misfire= \"false\" > <job:listener class= \"xx.MySimpleJobListener\" /> <job:distributed-listener class= \"xx.MyOnceSimpleJobListener\" started-timeout-milliseconds= \"1000\" completed-timeout-milliseconds= \"2000\" /> </job:simple> <!-- \u914d\u7f6e\u5e26\u4f5c\u4e1a\u6570\u636e\u5e93\u4e8b\u4ef6\u8ffd\u8e2a\u7684\u7b80\u5355\u4f5c\u4e1a--> <job:simple id= \"listenerElasticJob\" class= \"xxx.MySimpleListenerElasticJob\" registry-center-ref= \"regCenter\" cron= \"0/10 * * * * ?\" sharding-total-count= \"3\" sharding-item-parameters= \"0=A,1=B,2=C\" event-trace-rdb-data-source= \"yourDataSource\" > </job:simple> </beans> \u5177\u4f53\u6bcf\u4e2a\u6807\u7b7e\u5177\u4f53\u652f\u6301\u7684\u8be6\u7ec6\u914d\u7f6e\u53c2\u8003\u4ee5\u4e0b\u8868\u683c","title":"Spring \u547d\u540d\u7a7a\u95f4\u914d\u7f6e"},{"location":"grus/job/elasticjob/#jobsimple","text":"\u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 id String \u662f \u4f5c\u4e1a\u540d\u79f0 class String \u5426 \u4f5c\u4e1a\u5b9e\u73b0\u7c7b\uff0c\u9700\u5b9e\u73b0 ElasticJob \u63a5\u53e3\uff0c\u811a\u672c\u578b\u4f5c\u4e1a\u4e0d\u9700\u8981\u914d\u7f6e registry-center-ref String \u662f \u6ce8\u518c\u4e2d\u5fc3 Bean \u7684\u5f15\u7528\uff0c\u9700\u5f15\u7528 reg:zookeeper \u7684\u58f0\u660e cron String \u662f cron \u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u914d\u7f6e\u4f5c\u4e1a\u89e6\u53d1\u65f6\u95f4 sharding-total-count int \u662f \u4f5c\u4e1a\u5206\u7247\u603b\u6570 sharding-item-parameters String \u5426 \u5206\u7247\u5e8f\u5217\u53f7\u548c\u53c2\u6570\u7528\u7b49\u53f7\u5206\u9694\uff0c\u591a\u4e2a\u952e\u503c\u5bf9\u7528\u9017\u53f7\u5206\u9694 \u5206\u7247\u5e8f\u5217\u53f7\u4ece 0 \u5f00\u59cb\uff0c\u4e0d\u53ef\u5927\u4e8e\u6216\u7b49\u4e8e\u4f5c\u4e1a\u5206\u7247\u603b\u6570 \u5982\uff1a 0=a,1=b,2=c job-parameter String \u5426 \u4f5c\u4e1a\u81ea\u5b9a\u4e49\u53c2\u6570 \u4f5c\u4e1a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u53ef\u901a\u8fc7\u4f20\u9012\u8be5\u53c2\u6570\u4e3a\u4f5c\u4e1a\u8c03\u5ea6\u7684\u4e1a\u52a1\u65b9\u6cd5\u4f20\u53c2\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e26\u53c2\u6570\u7684\u4f5c\u4e1a \u4f8b\uff1a\u6bcf\u6b21\u83b7\u53d6\u7684\u6570\u636e\u91cf\u3001\u4f5c\u4e1a\u5b9e\u4f8b\u4ece\u6570\u636e\u5e93\u8bfb\u53d6\u7684\u4e3b\u952e\u7b49 monitor-execution boolean \u5426 true \u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001 \u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u65f6\u95f4\u548c\u95f4\u9694\u65f6\u95f4\u5747\u975e\u5e38\u77ed\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u4e0d\u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001\u4ee5\u63d0\u5347\u6548\u7387\u3002\u56e0\u4e3a\u662f\u77ac\u65f6\u72b6\u6001\uff0c\u6240\u4ee5\u65e0\u5fc5\u8981\u76d1\u63a7\u3002\u8bf7\u7528\u6237\u81ea\u884c\u589e\u52a0\u6570\u636e\u5806\u79ef\u76d1\u63a7\u3002\u5e76\u4e14\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u91cd\u590d\u9009\u53d6\uff0c\u5e94\u5728\u4f5c\u4e1a\u4e2d\u5b9e\u73b0\u5e42\u7b49\u6027\u3002 \u6bcf\u6b21\u4f5c\u4e1a\u6267\u884c\u65f6\u95f4\u548c\u95f4\u9694\u65f6\u95f4\u5747\u8f83\u957f\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u76d1\u63a7\u4f5c\u4e1a\u8fd0\u884c\u65f6\u72b6\u6001\uff0c\u53ef\u4fdd\u8bc1\u6570\u636e\u4e0d\u4f1a\u91cd\u590d\u9009\u53d6\u3002 monitor-port int \u5426 -1 \u4f5c\u4e1a\u76d1\u63a7\u7aef\u53e3 \u5efa\u8bae\u914d\u7f6e\u4f5c\u4e1a\u76d1\u63a7\u7aef\u53e3, \u65b9\u4fbf\u5f00\u53d1\u8005 dump \u4f5c\u4e1a\u4fe1\u606f\u3002 \u4f7f\u7528\u65b9\u6cd5: echo \"dump\" | nc 127.0.0.1 9888 max-time-diff-seconds int \u5426 -1 \u6700\u5927\u5141\u8bb8\u7684\u672c\u673a\u4e0e\u6ce8\u518c\u4e2d\u5fc3\u7684\u65f6\u95f4\u8bef\u5dee\u79d2\u6570 \u5982\u679c\u65f6\u95f4\u8bef\u5dee\u8d85\u8fc7\u914d\u7f6e\u79d2\u6570\u5219\u4f5c\u4e1a\u542f\u52a8\u65f6\u5c06\u629b\u5f02\u5e38 \u914d\u7f6e\u4e3a -1 \u8868\u793a\u4e0d\u6821\u9a8c\u65f6\u95f4\u8bef\u5dee failover boolean \u5426 false \u662f\u5426\u5f00\u542f\u5931\u6548\u8f6c\u79fb \u4ec5 monitorExecution \u5f00\u542f\uff0c\u5931\u6548\u8f6c\u79fb\u624d\u6709\u6548 misfire boolean \u5426 true \u662f\u5426\u5f00\u542f\u9519\u8fc7\u4efb\u52a1\u91cd\u65b0\u6267\u884c job-sharding-strategy-class String \u5426 true \u4f5c\u4e1a\u5206\u7247\u7b56\u7565\u5b9e\u73b0\u7c7b\u5168\u8def\u5f84 \u9ed8\u8ba4\u4f7f\u7528\u5e73\u5747\u5206\u914d\u7b56\u7565 description String \u5426 \u4f5c\u4e1a\u63cf\u8ff0\u4fe1\u606f disabled boolean \u5426 false \u4f5c\u4e1a\u662f\u5426\u7981\u6b62\u542f\u52a8 \u53ef\u7528\u4e8e\u90e8\u7f72\u4f5c\u4e1a\u65f6\uff0c\u5148\u7981\u6b62\u542f\u52a8\uff0c\u90e8\u7f72\u7ed3\u675f\u540e\u7edf\u4e00\u542f\u52a8 overwrite boolean \u5426 false \u672c\u5730\u914d\u7f6e\u662f\u5426\u53ef\u8986\u76d6\u6ce8\u518c\u4e2d\u5fc3\u914d\u7f6e \u5982\u679c\u53ef\u8986\u76d6\uff0c\u6bcf\u6b21\u542f\u52a8\u4f5c\u4e1a\u90fd\u4ee5\u672c\u5730\u914d\u7f6e\u4e3a\u51c6 jobProperties String \u5426 \u4f5c\u4e1a\u5b9a\u5236\u5316\u5c5e\u6027\uff0c\u76ee\u524d\u652f\u6301 job_exception_handler \u548c executor_service_handler \uff0c\u7528\u4e8e\u6269\u5c55\u5f02\u5e38\u5904\u7406\u548c\u81ea\u5b9a\u4e49\u4f5c\u4e1a\u5904\u7406\u7ebf\u7a0b\u6c60 event-trace-rdb-data-source String \u5426 \u4f5c\u4e1a\u4e8b\u4ef6\u8ffd\u8e2a\u7684\u6570\u636e\u6e90 Bean \u5f15\u7528","title":"job:simple \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#jobdataflow","text":"job:dataflow \u547d\u540d\u7a7a\u95f4\u62e5\u6709 job:simple \u547d\u540d\u7a7a\u95f4\u7684\u5168\u90e8\u5c5e\u6027\uff0c\u4ee5\u4e0b\u4ec5\u5217\u51fa\u7279\u6709\u5c5e\u6027 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 streaming-process boolean \u5426 false \u662f\u5426\u6d41\u5f0f\u5904\u7406\u6570\u636e \u5982\u679c\u6d41\u5f0f\u5904\u7406\u6570\u636e, \u5219 fetchData \u4e0d\u8fd4\u56de\u7a7a\u7ed3\u679c\u5c06\u6301\u7eed\u6267\u884c\u4f5c\u4e1a \u5982\u679c\u975e\u6d41\u5f0f\u5904\u7406\u6570\u636e, \u5219\u5904\u7406\u6570\u636e\u5b8c\u6210\u540e\u4f5c\u4e1a\u7ed3\u675f","title":"job:dataflow \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#jobscript-jobsimple","text":"job:script \u547d\u540d\u7a7a\u95f4\u62e5\u6709 job:simple \u547d\u540d\u7a7a\u95f4\u7684\u5168\u90e8\u5c5e\u6027\uff0c\u4ee5\u4e0b\u4ec5\u5217\u51fa\u7279\u6709\u5c5e\u6027 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 script-command-line String \u5426 \u811a\u672c\u578b\u4f5c\u4e1a\u6267\u884c\u547d\u4ee4\u884c","title":"job:script \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e\uff0c\u57fa\u672c\u5c5e\u6027\u53c2\u7167 job:simple \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#joblistener","text":"job:listener \u5fc5\u987b\u914d\u7f6e\u4e3a job:bean \u7684\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u5728\u5b50\u5143\u7d20\u4e2d\u53ea\u5141\u8bb8\u51fa\u73b0\u4e00\u6b21 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 class String \u662f \u524d\u7f6e\u540e\u7f6e\u4efb\u52a1\u76d1\u542c\u5b9e\u73b0\u7c7b\uff0c\u9700\u5b9e\u73b0 ElasticJobListener \u63a5\u53e3","title":"job:listener \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#jobdistributed-listener","text":"job:distributed-listener \u5fc5\u987b\u914d\u7f6e\u4e3a job:bean \u7684\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u5728\u5b50\u5143\u7d20\u4e2d\u53ea\u5141\u8bb8\u51fa\u73b0\u4e00\u6b21 \u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 class String \u662f \u524d\u7f6e\u540e\u7f6e\u4efb\u52a1\u5206\u5e03\u5f0f\u76d1\u542c\u5b9e\u73b0\u7c7b\uff0c\u9700\u7ee7\u627f AbstractDistributeOnceElasticJobListener \u7c7b started-timeout-milliseconds long \u5426 Long.MAX_VALUE \u6700\u540e\u4e00\u4e2a\u4f5c\u4e1a\u6267\u884c\u524d\u7684\u6267\u884c\u65b9\u6cd5\u7684\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 completed-timeout-milliseconds long \u5426 Long.MAX_VALUE \u6700\u540e\u4e00\u4e2a\u4f5c\u4e1a\u6267\u884c\u540e\u7684\u6267\u884c\u65b9\u6cd5\u7684\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2","title":"job:distributed-listener \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#regzookeeper","text":"\u5c5e\u6027\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u7f3a\u7701\u503c \u63cf\u8ff0 id String \u662f \u6ce8\u518c\u4e2d\u5fc3\u5728 Spring \u5bb9\u5668\u4e2d\u7684\u4e3b\u952e server-lists String \u662f \u8fde\u63a5 Zookeeper \u670d\u52a1\u5668\u7684\u5217\u8868 \u5305\u62ec IP \u5730\u5740\u548c\u7aef\u53e3\u53f7 \u591a\u4e2a\u5730\u5740\u7528\u9017\u53f7\u5206\u9694 \u5982: host1:2181,host2:2181 namespace String \u662f Zookeeper \u7684\u547d\u540d\u7a7a\u95f4 base-sleep-time-milliseconds int \u5426 1000 \u7b49\u5f85\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u7684\u521d\u59cb\u503c \u5355\u4f4d\uff1a\u6beb\u79d2 max-sleep-time-milliseconds int \u5426 3000 \u7b49\u5f85\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u7684\u6700\u5927\u503c \u5355\u4f4d\uff1a\u6beb\u79d2 max-retries int \u5426 3 \u6700\u5927\u91cd\u8bd5\u6b21\u6570 session-timeout-milliseconds int \u5426 60000 \u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 connection-timeout-milliseconds int \u5426 15000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\uff1a\u6beb\u79d2 digest String \u5426 \u65e0\u9a8c\u8bc1 \u8fde\u63a5 Zookeeper \u7684\u6743\u9650\u4ee4\u724c \u7f3a\u7701\u4e3a\u4e0d\u9700\u8981\u6743\u9650\u9a8c\u8bc1","title":"reg:zookeeper \u547d\u540d\u7a7a\u95f4\u5c5e\u6027\u8be6\u7ec6\u8bf4\u660e"},{"location":"grus/job/elasticjob/#_1","text":"","title":"\u4f5c\u4e1a\u542f\u52a8"},{"location":"grus/job/elasticjob/#1-java","text":"public class JobDemo { public static void main ( String [] args ) { new JobScheduler ( createRegistryCenter (), createJobConfiguration ()). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } }","title":"1. Java \u542f\u52a8\u65b9\u5f0f"},{"location":"grus/job/elasticjob/#2-spring","text":"\u53c2\u89c1 Spring \u547d\u540d\u7a7a\u95f4","title":"2. Spring \u542f\u52a8\u65b9\u5f0f"},{"location":"grus/job/elasticjob/#_2","text":"","title":"\u5176\u4ed6\u529f\u80fd"},{"location":"grus/job/elasticjob/#1","text":"\u53ef\u901a\u8fc7\u914d\u7f6e\u591a\u4e2a\u4efb\u52a1\u76d1\u542c\u5668\uff0c\u5728\u4efb\u52a1\u6267\u884c\u524d\u548c\u6267\u884c\u540e\u6267\u884c\u76d1\u542c\u7684\u65b9\u6cd5\u3002\u76d1\u542c\u5668\u5206\u4e3a\u6bcf\u53f0\u4f5c\u4e1a\u8282\u70b9\u5747\u6267\u884c\u548c\u5206\u5e03\u5f0f\u573a\u666f\u4e2d\u4ec5\u5355\u4e00\u8282\u70b9\u6267\u884c 2 \u79cd\u3002","title":"1. \u4efb\u52a1\u76d1\u542c"},{"location":"grus/job/elasticjob/#1_1","text":"\u82e5\u4f5c\u4e1a\u5904\u7406\u4f5c\u4e1a\u670d\u52a1\u5668\u7684\u6587\u4ef6\uff0c\u5904\u7406\u5b8c\u6210\u540e\u5220\u9664\u6587\u4ef6\uff0c\u53ef\u8003\u8651\u4f7f\u7528\u6bcf\u4e2a\u8282\u70b9\u5747\u6267\u884c\u6e05\u7406\u4efb\u52a1\u3002\u6b64\u7c7b\u578b\u4efb\u52a1\u5b9e\u73b0\u7b80\u5355\uff0c\u4e14\u65e0\u9700\u8003\u8651\u5168\u5c40\u5206\u5e03\u5f0f\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff0c\u8bf7\u5c3d\u91cf\u4f7f\u7528\u6b64\u7c7b\u578b\u76d1\u542c\u5668\u3002 \u6b65\u9aa4\uff1a \u5b9a\u4e49\u76d1\u542c\u5668 public class MyElasticJobListener implements ElasticJobListener { @Override public void beforeJobExecuted ( ShardingContexts shardingContexts ) { // do something ... } @Override public void afterJobExecuted ( ShardingContexts shardingContexts ) { // do something ... } } \u5c06\u76d1\u542c\u5668\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 JobScheduler public class JobMain { public static void main ( String [] args ) { new JobScheduler ( createRegistryCenter (), createJobConfiguration (), new MyElasticJobListener ()). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } }","title":"1. \u6bcf\u53f0\u4f5c\u4e1a\u8282\u70b9\u5747\u6267\u884c\u7684\u76d1\u542c"},{"location":"grus/job/elasticjob/#2","text":"\u82e5\u4f5c\u4e1a\u5904\u7406\u6570\u636e\u5e93\u6570\u636e\uff0c\u5904\u7406\u5b8c\u6210\u540e\u53ea\u9700\u4e00\u4e2a\u8282\u70b9\u5b8c\u6210\u6570\u636e\u6e05\u7406\u4efb\u52a1\u5373\u53ef\u3002\u6b64\u7c7b\u578b\u4efb\u52a1\u5904\u7406\u590d\u6742\uff0c\u9700\u540c\u6b65\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4f5c\u4e1a\u7684\u72b6\u6001\u540c\u6b65\uff0c\u63d0\u4f9b\u4e86\u8d85\u65f6\u8bbe\u7f6e\u6765\u907f\u514d\u4f5c\u4e1a\u4e0d\u540c\u6b65\u5bfc\u81f4\u7684\u6b7b\u9501\uff0c\u8bf7\u8c28\u614e\u4f7f\u7528\u3002 \u6b65\u9aa4\uff1a \u5b9a\u4e49\u76d1\u542c\u5668 public class TestDistributeOnceElasticJobListener extends AbstractDistributeOnceElasticJobListener { public TestDistributeOnceElasticJobListener ( long startTimeoutMills , long completeTimeoutMills ) { super ( startTimeoutMills , completeTimeoutMills ); } @Override public void doBeforeJobExecutedAtLastStarted ( ShardingContexts shardingContexts ) { // do something ... } @Override public void doAfterJobExecutedAtLastCompleted ( ShardingContexts shardingContexts ) { // do something ... } } \u5c06\u76d1\u542c\u5668\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 JobScheduler public class JobMain { public static void main ( String [] args ) { long startTimeoutMills = 5000L ; long completeTimeoutMills = 10000L ; new JobScheduler ( createRegistryCenter (), createJobConfiguration (), new MyDistributeOnceElasticJobListener ( startTimeoutMills , completeTimeoutMills )). init (); } private static CoordinatorRegistryCenter createRegistryCenter () { CoordinatorRegistryCenter regCenter = new ZookeeperRegistryCenter ( new ZookeeperConfiguration ( \"zk_host:2181\" , \"elastic-job-demo\" )); regCenter . init (); return regCenter ; } private static LiteJobConfiguration createJobConfiguration () { // \u521b\u5efa\u4f5c\u4e1a\u914d\u7f6e ... } }","title":"2. \u5206\u5e03\u5f0f\u573a\u666f\u4e2d\u4ec5\u5355\u4e00\u8282\u70b9\u6267\u884c\u7684\u76d1\u542c"},{"location":"grus/job/elasticjob/#_3","text":"Elastic-Job-Lite \u5b98\u65b9\u6587\u6863","title":"\u53c2\u8003\u8d44\u6599"},{"location":"grus/kafka/","text":"Kafka \u00b6 \u5f53\u5e94\u7528\u4f7f\u7528\u7f13\u5b58\u3001ES\u7684\u65f6\u5019\uff0c\u5b58\u5728\u5982\u4e0b\u7684\u9700\u6c42\uff1a \u6570\u636e\u53d1\u751f\u53d8\u66f4\u7684\u65f6\u5019\uff0c\u7f13\u5b58\u5982\u4f55\u5237\u65b0\uff1f \u6570\u636e\u53d1\u751f\u53d8\u66f4\u7684\u65f6\u5019\uff0cES\u7684\u6570\u636e\u600e\u4e48\u5237\u65b0\uff1f \u6846\u67b6\u5f15\u5165\u4e86 Debezium \u63d0\u4f9b\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 Debezium \u662f\u7528\u4e8e\u6355\u83b7\u53d8\u66f4\u6570\u636e\u7684\u5f00\u6e90\u5206\u5e03\u5f0f\u5e73\u53f0\u3002\u53ef\u4ee5\u54cd\u5e94\u6570\u636e\u5e93\u7684\u6240\u6709\u63d2\u5165\uff0c\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u901a\u8fc7\u76d1\u542c\u5230\u7684 binlog \uff0c\u4ee5\u56fa\u5b9a\u683c\u5f0f\u6d88\u606f\u63a8\u9001\u7ed9 Kafka \u3002Debezium \u7684\u6d88\u606f\u683c\u5f0f \u70b9\u51fb\u67e5\u770b \u3002 \u6846\u67b6\u9488\u5bf9 kafka \u8fdb\u884c\u4e86 Consumer \u80fd\u529b\u7684\u5c01\u88c5\uff0c\u5bf9\u57fa\u4e8e Kafka \u5b9e\u73b0\u7684 Debezium \u6d88\u606f\u5904\u7406\u8fdb\u884c\u4e86\u5c01\u88c5\u3002 \u4f7f\u7528\u8bf4\u660e \u00b6 \u7248\u672c\u8981\u6c42 \u00b6 2021.1.7+ \u00b7 Feature flag \u4f9d\u8d56\u5750\u6807 <dependency> <groupId> com.ciicgat.grus </groupId> <artifactId> grus-kafka </artifactId> </dependency> \u914d\u7f6e\u6d88\u8d39\u8005 \u00b6 @Configuration public class KafkaConfig { @Bean ( \"debeziumMsgProcessor\" ) public DebeziumMsgProcessor debeziumMsgProcessor ( InventoryCategoryMsgProcessor inventoryCategoryMsgProcessor ) { return new DebeziumMsgProcessor ( inventoryCategoryMsgProcessor ); } @ConditionalOnWorkEnv ({ WorkEnv . DEVELOP , WorkEnv . TEST , WorkEnv . PRODUCT }) @Bean ( initMethod = \"start\" , destroyMethod = \"close\" ) public Consumer grusKafkaConsumer ( @Qualifier ( \"debeziumMsgProcessor\" ) KafkaMsgProcessor kafkaMsgProcessor ) { Consumer consumer = Consumer . newBuilder () . setTopics ( kafkaConfig . getAllTopics ()) . setGroupId ( getGroupId ()) . setPullThreadNum ( 2 ) . build (); consumer . setKafkaMsgProcessor ( kafkaMsgProcessor ); return consumer ; } } PS\uff1a \u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u6d88\u8d39 kafka \u6d88\u606f\uff0c\u6d88\u606f\u5904\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 KafkaMsgProcessor ; \u5982\u679c\u76d1\u542c\u7684 kafka topic \u662f\u57fa\u4e8e debezium\u7684\uff0c\u8981\u5b9e\u73b0 DebeziumTableMsgProcessor \uff0c\u5e76\u6784\u5efa DebeziumMsgProcessor \u3002 Debezium \u5b9e\u73b0\u7684 topic \u89c4\u5219\uff1aMysql\u5b9e\u4f8b\u540d.\u6570\u636e\u5e93\u540d.\u8868\u540d\u3002 \u5f00\u53d1\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u56fa\u5b9a\u503c devapp \uff0c\u4f8b\u5982\uff1a devapp.ecommerce_baseproduct.InventoryCategory \u6d4b\u8bd5\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u56fa\u5b9a\u503c testapp \uff0c\u4f8b\u5982\uff1a testapp.ecommerce_baseproduct.InventoryCategory \u751f\u4ea7\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u4e3a\u6570\u636e\u5e93\u6240\u5c5e\u5b9e\u4f8b\u3002\u4f8b\u5982\uff1a commerce.ecommerce_baseproduct.InventoryCategory \uff0c\u6570\u636e\u5e93 ecommerce_baseproduct \u5728 BSPRO-COMMERCE-MYSQL \u3002 \u5df2\u7ecf\u6536\u96c6\u7684Mysql \u5b9e\u4f8b\uff1a \u5b9e\u4f8b\u7ec4\u540d topic \u524d\u7f00 BSPRO-APP-MYSQL app BSPRO-ASSET-MYSQL asset BSPRO-COMMERCE-MYSQL commerce BSPRO-ENDPRODUCT-MYSQL endproduct BSPRO-FINANCE-MYSQL finance BSPRO-INFOMANAGE-MYSQL infomanage BSPRO-MEMBER-MYSQL member BSPRO-PAYMENT-MYSQL payment \u5982\u679c\u4e0d\u77e5\u9053\u6570\u636e\u5e93\u6240\u5c5e\u54ea\u4e2a\u5b9e\u4f8b\u7ec4\u7684\u53ef\u4ee5\u5230 \u8fd9\u91cc \u67e5\u8be2\u3002 \u4f7f\u7528\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898 \u00b6 Decimal (\u5c0f\u6570) \u00b6 debezium \u63cf\u8ff0\uff1a https://debezium.io/documentation/reference/1.5/connectors/mysql.html#mysql-decimal-types \u4e3a\u4e86\u4fdd\u8bc1\u7cbe\u5ea6\uff0c\u8868\u5217\u662f decimal \u7c7b\u578b\u7684\uff0c\u6d88\u606f\u5185\u5bb9\u5bf9\u5e94\u503c\u662f\u5b57\u7b26\u4e32\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @JsonDeserialize(using = DebeziumDecimalDeserializer.class) \u76f4\u63a5\u8f6c\u6210 BigDecimal\u3002 @Data public class Demo { @JsonDeserialize ( using = DebeziumDecimalDeserializer . class ) private BigDecimal weight ; } Date \uff08\u65e5\u671f\uff09 \u00b6 \u65e5\u671f\u65f6\u95f4\u6709 8 \u5c0f\u65f6\u5dee\u8ddd\u3002\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @JsonDeserialize(using = GMTPlus8Deserializer.class) \u3002 @Data public class Demo { @JsonDeserialize ( using = GMTPlus8Deserializer . class ) private Date timeCreated ; } \u521d\u6b21\u4e0a\u7ebf \u00b6 debezium \u5df2\u4e0a\u7ebf3\u4e2a\u6708+\u4e86\uff0c\u751f\u4ea7\u4e0a\u5df2\u7ecf\u6536\u96c6\u4e86\u5f88\u591a\u6d88\u606f\uff0c\u5f53\u521d\u6b21\u4e0a\u7ebf\u7684\u65f6\u5019\u4f1a\u4e00\u6b21\u6027\u6d88\u8d39\u6389\u6240\u6709\u6d88\u606f\uff08 \u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4kafka\u4fdd\u7559\u7684\u76f8\u5173binlog\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u5168\u91cf\u6570\u636e\uff0c\u8bf7\u6ce8\u610f \uff09\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u8003\u8651\u7cfb\u7edf\u538b\u529b\u3002\u7535\u5546\u9047\u5230\u7684\u4e00\u4e2a\u60c5\u51b5\u662f\uff0c\u641c\u7d22\u670d\u52a1\u4e0a\u7ebf\u6253\u5370\u4e86\u6d88\u606f\u65e5\u5fd7\uff0c\u521d\u6b21\u4e0a\u7ebf\u6253\u5370\u65e5\u5fd7\u592a\u591a\uff0c\u5e94\u7528\u672c\u8eab\u6709\u6548\u65e5\u5fd7\u6536\u96c6\u4e0d\u5230\u4e86\u3002 \u4e8b\u4ef6\u9a71\u52a8 \u00b6 \u5c3d\u91cf\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\uff0c\u83b7\u53d6\u5230\u53d8\u66f4\u6d88\u606f\u540e\uff0c\u91cd\u65b0\u4ecedb\u67e5\u8be2\u4fe1\u606f\u6765\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u57fa\u4e8e\u6d88\u606f\u7ed9\u7684\u53c2\u6570\u53d8\u5316\u3002\u56e0\u4e3a\u6d88\u606f\u7684\u6d88\u8d39\u7edd\u5bf9\u662f\u6709\u5ef6\u540e\u7684\uff0c\u5b8c\u5168\u57fa\u4e8ebinlog\u7684\u6570\u636e\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u4e1a\u52a1\u6570\u636e\u5f02\u5e38","title":"Kafka"},{"location":"grus/kafka/#kafka","text":"\u5f53\u5e94\u7528\u4f7f\u7528\u7f13\u5b58\u3001ES\u7684\u65f6\u5019\uff0c\u5b58\u5728\u5982\u4e0b\u7684\u9700\u6c42\uff1a \u6570\u636e\u53d1\u751f\u53d8\u66f4\u7684\u65f6\u5019\uff0c\u7f13\u5b58\u5982\u4f55\u5237\u65b0\uff1f \u6570\u636e\u53d1\u751f\u53d8\u66f4\u7684\u65f6\u5019\uff0cES\u7684\u6570\u636e\u600e\u4e48\u5237\u65b0\uff1f \u6846\u67b6\u5f15\u5165\u4e86 Debezium \u63d0\u4f9b\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 Debezium \u662f\u7528\u4e8e\u6355\u83b7\u53d8\u66f4\u6570\u636e\u7684\u5f00\u6e90\u5206\u5e03\u5f0f\u5e73\u53f0\u3002\u53ef\u4ee5\u54cd\u5e94\u6570\u636e\u5e93\u7684\u6240\u6709\u63d2\u5165\uff0c\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u901a\u8fc7\u76d1\u542c\u5230\u7684 binlog \uff0c\u4ee5\u56fa\u5b9a\u683c\u5f0f\u6d88\u606f\u63a8\u9001\u7ed9 Kafka \u3002Debezium \u7684\u6d88\u606f\u683c\u5f0f \u70b9\u51fb\u67e5\u770b \u3002 \u6846\u67b6\u9488\u5bf9 kafka \u8fdb\u884c\u4e86 Consumer \u80fd\u529b\u7684\u5c01\u88c5\uff0c\u5bf9\u57fa\u4e8e Kafka \u5b9e\u73b0\u7684 Debezium \u6d88\u606f\u5904\u7406\u8fdb\u884c\u4e86\u5c01\u88c5\u3002","title":"Kafka"},{"location":"grus/kafka/#_1","text":"","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/kafka/#_2","text":"2021.1.7+ \u00b7 Feature flag \u4f9d\u8d56\u5750\u6807 <dependency> <groupId> com.ciicgat.grus </groupId> <artifactId> grus-kafka </artifactId> </dependency>","title":"\u7248\u672c\u8981\u6c42"},{"location":"grus/kafka/#_3","text":"@Configuration public class KafkaConfig { @Bean ( \"debeziumMsgProcessor\" ) public DebeziumMsgProcessor debeziumMsgProcessor ( InventoryCategoryMsgProcessor inventoryCategoryMsgProcessor ) { return new DebeziumMsgProcessor ( inventoryCategoryMsgProcessor ); } @ConditionalOnWorkEnv ({ WorkEnv . DEVELOP , WorkEnv . TEST , WorkEnv . PRODUCT }) @Bean ( initMethod = \"start\" , destroyMethod = \"close\" ) public Consumer grusKafkaConsumer ( @Qualifier ( \"debeziumMsgProcessor\" ) KafkaMsgProcessor kafkaMsgProcessor ) { Consumer consumer = Consumer . newBuilder () . setTopics ( kafkaConfig . getAllTopics ()) . setGroupId ( getGroupId ()) . setPullThreadNum ( 2 ) . build (); consumer . setKafkaMsgProcessor ( kafkaMsgProcessor ); return consumer ; } } PS\uff1a \u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u6d88\u8d39 kafka \u6d88\u606f\uff0c\u6d88\u606f\u5904\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 KafkaMsgProcessor ; \u5982\u679c\u76d1\u542c\u7684 kafka topic \u662f\u57fa\u4e8e debezium\u7684\uff0c\u8981\u5b9e\u73b0 DebeziumTableMsgProcessor \uff0c\u5e76\u6784\u5efa DebeziumMsgProcessor \u3002 Debezium \u5b9e\u73b0\u7684 topic \u89c4\u5219\uff1aMysql\u5b9e\u4f8b\u540d.\u6570\u636e\u5e93\u540d.\u8868\u540d\u3002 \u5f00\u53d1\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u56fa\u5b9a\u503c devapp \uff0c\u4f8b\u5982\uff1a devapp.ecommerce_baseproduct.InventoryCategory \u6d4b\u8bd5\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u56fa\u5b9a\u503c testapp \uff0c\u4f8b\u5982\uff1a testapp.ecommerce_baseproduct.InventoryCategory \u751f\u4ea7\u73af\u5883\uff1a\u5b9e\u4f8b\u540d\u4e3a\u6570\u636e\u5e93\u6240\u5c5e\u5b9e\u4f8b\u3002\u4f8b\u5982\uff1a commerce.ecommerce_baseproduct.InventoryCategory \uff0c\u6570\u636e\u5e93 ecommerce_baseproduct \u5728 BSPRO-COMMERCE-MYSQL \u3002 \u5df2\u7ecf\u6536\u96c6\u7684Mysql \u5b9e\u4f8b\uff1a \u5b9e\u4f8b\u7ec4\u540d topic \u524d\u7f00 BSPRO-APP-MYSQL app BSPRO-ASSET-MYSQL asset BSPRO-COMMERCE-MYSQL commerce BSPRO-ENDPRODUCT-MYSQL endproduct BSPRO-FINANCE-MYSQL finance BSPRO-INFOMANAGE-MYSQL infomanage BSPRO-MEMBER-MYSQL member BSPRO-PAYMENT-MYSQL payment \u5982\u679c\u4e0d\u77e5\u9053\u6570\u636e\u5e93\u6240\u5c5e\u54ea\u4e2a\u5b9e\u4f8b\u7ec4\u7684\u53ef\u4ee5\u5230 \u8fd9\u91cc \u67e5\u8be2\u3002","title":"\u914d\u7f6e\u6d88\u8d39\u8005"},{"location":"grus/kafka/#_4","text":"","title":"\u4f7f\u7528\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898"},{"location":"grus/kafka/#decimal","text":"debezium \u63cf\u8ff0\uff1a https://debezium.io/documentation/reference/1.5/connectors/mysql.html#mysql-decimal-types \u4e3a\u4e86\u4fdd\u8bc1\u7cbe\u5ea6\uff0c\u8868\u5217\u662f decimal \u7c7b\u578b\u7684\uff0c\u6d88\u606f\u5185\u5bb9\u5bf9\u5e94\u503c\u662f\u5b57\u7b26\u4e32\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @JsonDeserialize(using = DebeziumDecimalDeserializer.class) \u76f4\u63a5\u8f6c\u6210 BigDecimal\u3002 @Data public class Demo { @JsonDeserialize ( using = DebeziumDecimalDeserializer . class ) private BigDecimal weight ; }","title":"Decimal (\u5c0f\u6570)"},{"location":"grus/kafka/#date","text":"\u65e5\u671f\u65f6\u95f4\u6709 8 \u5c0f\u65f6\u5dee\u8ddd\u3002\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @JsonDeserialize(using = GMTPlus8Deserializer.class) \u3002 @Data public class Demo { @JsonDeserialize ( using = GMTPlus8Deserializer . class ) private Date timeCreated ; }","title":"Date \uff08\u65e5\u671f\uff09"},{"location":"grus/kafka/#_5","text":"debezium \u5df2\u4e0a\u7ebf3\u4e2a\u6708+\u4e86\uff0c\u751f\u4ea7\u4e0a\u5df2\u7ecf\u6536\u96c6\u4e86\u5f88\u591a\u6d88\u606f\uff0c\u5f53\u521d\u6b21\u4e0a\u7ebf\u7684\u65f6\u5019\u4f1a\u4e00\u6b21\u6027\u6d88\u8d39\u6389\u6240\u6709\u6d88\u606f\uff08 \u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4kafka\u4fdd\u7559\u7684\u76f8\u5173binlog\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u5168\u91cf\u6570\u636e\uff0c\u8bf7\u6ce8\u610f \uff09\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u8003\u8651\u7cfb\u7edf\u538b\u529b\u3002\u7535\u5546\u9047\u5230\u7684\u4e00\u4e2a\u60c5\u51b5\u662f\uff0c\u641c\u7d22\u670d\u52a1\u4e0a\u7ebf\u6253\u5370\u4e86\u6d88\u606f\u65e5\u5fd7\uff0c\u521d\u6b21\u4e0a\u7ebf\u6253\u5370\u65e5\u5fd7\u592a\u591a\uff0c\u5e94\u7528\u672c\u8eab\u6709\u6548\u65e5\u5fd7\u6536\u96c6\u4e0d\u5230\u4e86\u3002","title":"\u521d\u6b21\u4e0a\u7ebf"},{"location":"grus/kafka/#_6","text":"\u5c3d\u91cf\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\uff0c\u83b7\u53d6\u5230\u53d8\u66f4\u6d88\u606f\u540e\uff0c\u91cd\u65b0\u4ecedb\u67e5\u8be2\u4fe1\u606f\u6765\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u57fa\u4e8e\u6d88\u606f\u7ed9\u7684\u53c2\u6570\u53d8\u5316\u3002\u56e0\u4e3a\u6d88\u606f\u7684\u6d88\u8d39\u7edd\u5bf9\u662f\u6709\u5ef6\u540e\u7684\uff0c\u5b8c\u5168\u57fa\u4e8ebinlog\u7684\u6570\u636e\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u4e1a\u52a1\u6570\u636e\u5f02\u5e38","title":"\u4e8b\u4ef6\u9a71\u52a8"},{"location":"grus/limit/","text":"Grus \u5fae\u670d\u52a1\u6d41\u91cf\u63a7\u5236 \u00b6 \u89e3\u51b3\u548c\u9002\u7528\u7684\u573a\u666f \u00b6 \u968f\u7740\u5fae\u670d\u52a1\u7684\u6d41\u884c\uff0c\u670d\u52a1\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u7a33\u5b9a\u6027\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u6211\u4eec\u4e3b\u8981\u9762\u5411\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u7684**\u8f7b\u91cf\u7ea7**\u6d41\u91cf\u63a7\u5236\u6846\u67b6\uff0c\u4e3b\u8981\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u6d41\u91cf\u63a7\u5236\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u6765\u5e2e\u52a9\u60a8\u4fdd\u62a4\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002 \u5173\u7231\u901a\u7684\u670d\u52a1\uff0c\u4e3b\u8981\u662f\u4e24\u5c42\uff1aweb \u548c service\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6d41\u91cf\u63a7\u5236\uff0c\u4e3b\u8981\u7528\u4e8e web \u5c42\u3002\u7528\u4e8e web \u5c42\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a \u53ef\u4ee5\u76f4\u63a5\u628a\u5916\u90e8\u7684\u6d41\u91cf\u9650\u5236\u6216\u8005\u6321\u4f4f\u3002\u4e00\u4e2a web \u8bf7\u6c42\uff0c\u5230\u540e\u7aef\u4e00\u822c\u4f1a\u653e\u5927 N \u500d\u3002\u62e6\u622a\u6700\u5916\u5c42\u7684\u6700\u6709\u6548\u3002 \u5728\u6d41\u91cf\u963b\u585e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed9\u7ec8\u7aef\u7528\u6237\u3002\u5047\u5982\u662f service \u5c42\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u4e0a\u9762\u7684\u8c03\u7528\u548c UI \u652f\u6301\u6d41\u91cf\u53d7\u9650\u7684\u8fd4\u56de\u9519\u8bef\u7c7b\u578b\uff0c\u800c\u4e14\u9700\u8981\u4e00\u76f4\u900f\u4f20\u3002 web \u5c42\u53ef\u4ee5\u505a\u5230\u7528\u6237\u7ea7\u522b(UV)\u7684\u9650\u6d41\u3002 \u5f53\u7136\uff0c\u4e5f\u4e0d\u662f\u8bf4 service \u5c42\u7684\u5e94\u7528\u4e0d\u80fd\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u3002\u5b83\u9700\u8981\u89e3\u51b3\u4e00\u4e0b\u95ee\u9898\uff1a \u4e00\u822c\u7684\uff0c\u4e00\u4e2a\u6838\u5fc3\u670d\u52a1\uff0c\u4e0d\u80fd\u5168\u5c40\u9650\u6d41\u6216\u8005\u7194\u65ad\u3002\u6bd4\u5982\u8bf4\u4f1a\u5458\u6240\u6709 http \u7aef\u70b9\u90fd\u7194\u65ad\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u7f51\u7ad9\u4e5f\u5c31\u6302\u4e86\u3002\u53ea\u80fd\u9488\u5bf9\u67d0\u4e2a\u7aef\u70b9\uff0c\u6bd4\u5982 /getAddressById \u9047\u5230\u6d41\u91cf\u963b\u585e\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u9700\u8981\u6574\u4e2a\u8c03\u7528\u94fe\u8def\u900f\u4f20\u5230\u6700\u4e0a\u5c42\uff0c\u7136\u540e\u6700\u4e0a\u5c42 UI \u80fd\u591f\u63d0\u793a\u7528\u6237 \u672c\u6587\u4f1a\u628a\u89c4\u5219\u5236\u5b9a\u4e0b\u6765\u3002 \u6211\u4eec\u4e3b\u8981\u57fa\u4e8e\u963f\u91cc Sentinel \u6765\u5b9e\u73b0 Sentinel \u00b6 \u963f\u91cc\u5df4\u5df4 sentinel \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u4e14\u8f7b\u91cf\u7ea7\u7684\u6d41\u91cf\u63a7\u5236\u5b9e\u73b0\u3002\u5927\u5bb6\u53ef\u4ee5 \u70b9\u51fb\u8fd9\u91cc \u67e5\u770b\u4ecb\u7ecd\u548c\u6587\u6863\u3002 \u7531\u4e8e\u5185\u5bb9\u8fc7\u4e30\u5bcc\uff0c\u4e3b\u8981\u4ecb\u7ecd\u6211\u4eec\u5c06\u5982\u4f55\u4f7f\u7528 sentinel \uff1a \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u589e\u52a0 maven \u4f9d\u8d56\uff1a <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId> </dependency> sentinel \u6838\u5fc3\u662f\u901a\u8fc7 filter \u6765\u8fbe\u5230\u6d41\u91cf\u63a7\u5236\u7684\u76ee\u7684\uff1a @Override public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException { HttpServletRequest sRequest = (HttpServletRequest) request; Entry entry = null; Entry methodEntry = null; try { String target = FilterUtil.filterTarget(sRequest); // Clean and unify the URL. // For REST APIs, you have to clean the URL (e.g. `/foo/1` and `/foo/2` -> `/foo/:id`), or // the amount of context and resources will exceed the threshold. UrlCleaner urlCleaner = WebCallbackManager.getUrlCleaner(); if (urlCleaner != null) { target = urlCleaner.clean(target); } // Parse the request origin using registered origin parser. String origin = parseOrigin(sRequest); ContextUtil.enter(target, origin); entry = SphU.entry(target, EntryType.IN); // Add method specification if necessary if (httpMethodSpecify) { methodEntry = SphU.entry(sRequest.getMethod().toUpperCase() + COLON + target, EntryType.IN); } chain.doFilter(request, response); } catch (BlockException e) { //\u5f53\u524d\u670d\u52a1\u89e6\u53d1\u6d41\u91cf\u63a7\u5236 HttpServletResponse sResponse = (HttpServletResponse) response; // Return the block page, or redirect to another URL. WebCallbackManager.getUrlBlockHandler().blocked(sRequest, sResponse, e); //\u6e32\u67d3\u7ed3\u679c\u8fd4\u56de\uff0c\u8fd9\u91cc\u53ef\u4ee5\u81ea\u5b9a\u4e49 } catch (IOException e2) { Tracer.trace(e2); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e2; } catch (ServletException e3) { Tracer.trace(e3); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e3; } catch (RuntimeException e4) { Tracer.trace(e4); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e4; } finally { if (methodEntry != null) { methodEntry.exit(); } if (entry != null) { entry.exit(); } ContextUtil.exit(); } } \u6211\u4eec\u6846\u67b6\uff0c\u5b9e\u73b0\u4e86 UrlBlockHandler\uff1a public class GrusUrlBlockHandler implements UrlBlockHandler { private static final String DEFAULT_BLOCK_MSG = ApiResponse.fail(ErrorCode.REQUEST_BLOCK).toString(); private GrusRuntimeConfig grusRuntimeConfig = GrusFramework.getGrusRuntimeManager().getGrusRuntimeConfig(); @Override public void blocked(HttpServletRequest request, HttpServletResponse response, BlockException ex) throws IOException { String blockPage = grusRuntimeConfig.getStringValue(\"grus.sentinel.web.servlet.block.page\", null); if (blockPage == null) { response.addHeader(\"Content-Type\", \"application/json;charset=utf-8\"); PrintWriter out = response.getWriter(); out.print(DEFAULT_BLOCK_MSG); out.flush(); out.close(); return; } StringBuffer url = request.getRequestURL(); if (\"GET\".equals(request.getMethod()) && StringUtil.isNotBlank(request.getQueryString())) { url.append(\"?\").append(request.getQueryString()); } String redirectUrl = blockPage + \"?http_referer=\" + url.toString(); // Redirect to the customized block page. response.sendRedirect(redirectUrl); } } \u5176\u4e2d\uff1a ErrorCode REQUEST_BLOCK = new BaseErrorCode(-1001, \"\u5f53\u524d\u8bbf\u95ee\u91cf\u8fc7\u5927\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\"); \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5728 sentinel \u7684 dashborad \u4e0a\uff0c\u52a0\u4e0a\u9650\u6d41\u6216\u8005\u7194\u65ad\u89c4\u5219\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u8fd4\u56de { \"code\": -1001, \"data\": null, \"msg\": \"\u5f53\u524d\u8bbf\u95ee\u91cf\u8fc7\u5927\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\" } \u4e00\u822c\u7684\uff0c\u8fd9\u4e2a\u4f1a\u76f4\u63a5\u900f\u4f20\u7684\u6700\u4e0a\u5c42 web\u3002 \u5982\u679c\u9700\u8981\u9875\u9762\u8fd4\u56de\uff0c\u90a3\u4e48\u5728\u81ea\u5df1\u5e94\u7528\u7684 gconf \u4e2d\uff0c\u589e\u52a0 grus-config.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u6dfb\u52a0 grus.sentinel.web.servlet.block.page \u7684\u914d\u7f6e\u5373\u53ef\uff0c\u5176\u503c\u4e3a\u9700\u8981 302 \u8df3\u8f6c\u7684\u9875\u9762\u3002","title":"Grus \u5fae\u670d\u52a1\u6d41\u91cf\u63a7\u5236"},{"location":"grus/limit/#grus","text":"","title":"Grus \u5fae\u670d\u52a1\u6d41\u91cf\u63a7\u5236"},{"location":"grus/limit/#_1","text":"\u968f\u7740\u5fae\u670d\u52a1\u7684\u6d41\u884c\uff0c\u670d\u52a1\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u7a33\u5b9a\u6027\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u6211\u4eec\u4e3b\u8981\u9762\u5411\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u7684**\u8f7b\u91cf\u7ea7**\u6d41\u91cf\u63a7\u5236\u6846\u67b6\uff0c\u4e3b\u8981\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u6d41\u91cf\u63a7\u5236\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u6765\u5e2e\u52a9\u60a8\u4fdd\u62a4\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002 \u5173\u7231\u901a\u7684\u670d\u52a1\uff0c\u4e3b\u8981\u662f\u4e24\u5c42\uff1aweb \u548c service\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6d41\u91cf\u63a7\u5236\uff0c\u4e3b\u8981\u7528\u4e8e web \u5c42\u3002\u7528\u4e8e web \u5c42\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a \u53ef\u4ee5\u76f4\u63a5\u628a\u5916\u90e8\u7684\u6d41\u91cf\u9650\u5236\u6216\u8005\u6321\u4f4f\u3002\u4e00\u4e2a web \u8bf7\u6c42\uff0c\u5230\u540e\u7aef\u4e00\u822c\u4f1a\u653e\u5927 N \u500d\u3002\u62e6\u622a\u6700\u5916\u5c42\u7684\u6700\u6709\u6548\u3002 \u5728\u6d41\u91cf\u963b\u585e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed9\u7ec8\u7aef\u7528\u6237\u3002\u5047\u5982\u662f service \u5c42\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u4e0a\u9762\u7684\u8c03\u7528\u548c UI \u652f\u6301\u6d41\u91cf\u53d7\u9650\u7684\u8fd4\u56de\u9519\u8bef\u7c7b\u578b\uff0c\u800c\u4e14\u9700\u8981\u4e00\u76f4\u900f\u4f20\u3002 web \u5c42\u53ef\u4ee5\u505a\u5230\u7528\u6237\u7ea7\u522b(UV)\u7684\u9650\u6d41\u3002 \u5f53\u7136\uff0c\u4e5f\u4e0d\u662f\u8bf4 service \u5c42\u7684\u5e94\u7528\u4e0d\u80fd\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u3002\u5b83\u9700\u8981\u89e3\u51b3\u4e00\u4e0b\u95ee\u9898\uff1a \u4e00\u822c\u7684\uff0c\u4e00\u4e2a\u6838\u5fc3\u670d\u52a1\uff0c\u4e0d\u80fd\u5168\u5c40\u9650\u6d41\u6216\u8005\u7194\u65ad\u3002\u6bd4\u5982\u8bf4\u4f1a\u5458\u6240\u6709 http \u7aef\u70b9\u90fd\u7194\u65ad\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u7f51\u7ad9\u4e5f\u5c31\u6302\u4e86\u3002\u53ea\u80fd\u9488\u5bf9\u67d0\u4e2a\u7aef\u70b9\uff0c\u6bd4\u5982 /getAddressById \u9047\u5230\u6d41\u91cf\u963b\u585e\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u9700\u8981\u6574\u4e2a\u8c03\u7528\u94fe\u8def\u900f\u4f20\u5230\u6700\u4e0a\u5c42\uff0c\u7136\u540e\u6700\u4e0a\u5c42 UI \u80fd\u591f\u63d0\u793a\u7528\u6237 \u672c\u6587\u4f1a\u628a\u89c4\u5219\u5236\u5b9a\u4e0b\u6765\u3002 \u6211\u4eec\u4e3b\u8981\u57fa\u4e8e\u963f\u91cc Sentinel \u6765\u5b9e\u73b0","title":"\u89e3\u51b3\u548c\u9002\u7528\u7684\u573a\u666f"},{"location":"grus/limit/#sentinel","text":"\u963f\u91cc\u5df4\u5df4 sentinel \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u4e14\u8f7b\u91cf\u7ea7\u7684\u6d41\u91cf\u63a7\u5236\u5b9e\u73b0\u3002\u5927\u5bb6\u53ef\u4ee5 \u70b9\u51fb\u8fd9\u91cc \u67e5\u770b\u4ecb\u7ecd\u548c\u6587\u6863\u3002 \u7531\u4e8e\u5185\u5bb9\u8fc7\u4e30\u5bcc\uff0c\u4e3b\u8981\u4ecb\u7ecd\u6211\u4eec\u5c06\u5982\u4f55\u4f7f\u7528 sentinel \uff1a \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u589e\u52a0 maven \u4f9d\u8d56\uff1a <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId> </dependency> sentinel \u6838\u5fc3\u662f\u901a\u8fc7 filter \u6765\u8fbe\u5230\u6d41\u91cf\u63a7\u5236\u7684\u76ee\u7684\uff1a @Override public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException { HttpServletRequest sRequest = (HttpServletRequest) request; Entry entry = null; Entry methodEntry = null; try { String target = FilterUtil.filterTarget(sRequest); // Clean and unify the URL. // For REST APIs, you have to clean the URL (e.g. `/foo/1` and `/foo/2` -> `/foo/:id`), or // the amount of context and resources will exceed the threshold. UrlCleaner urlCleaner = WebCallbackManager.getUrlCleaner(); if (urlCleaner != null) { target = urlCleaner.clean(target); } // Parse the request origin using registered origin parser. String origin = parseOrigin(sRequest); ContextUtil.enter(target, origin); entry = SphU.entry(target, EntryType.IN); // Add method specification if necessary if (httpMethodSpecify) { methodEntry = SphU.entry(sRequest.getMethod().toUpperCase() + COLON + target, EntryType.IN); } chain.doFilter(request, response); } catch (BlockException e) { //\u5f53\u524d\u670d\u52a1\u89e6\u53d1\u6d41\u91cf\u63a7\u5236 HttpServletResponse sResponse = (HttpServletResponse) response; // Return the block page, or redirect to another URL. WebCallbackManager.getUrlBlockHandler().blocked(sRequest, sResponse, e); //\u6e32\u67d3\u7ed3\u679c\u8fd4\u56de\uff0c\u8fd9\u91cc\u53ef\u4ee5\u81ea\u5b9a\u4e49 } catch (IOException e2) { Tracer.trace(e2); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e2; } catch (ServletException e3) { Tracer.trace(e3); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e3; } catch (RuntimeException e4) { Tracer.trace(e4); //\u7528\u4e8e\u964d\u7ea7\u5f02\u5e38\u7684\u81ea\u52a8\u7edf\u8ba1 throw e4; } finally { if (methodEntry != null) { methodEntry.exit(); } if (entry != null) { entry.exit(); } ContextUtil.exit(); } } \u6211\u4eec\u6846\u67b6\uff0c\u5b9e\u73b0\u4e86 UrlBlockHandler\uff1a public class GrusUrlBlockHandler implements UrlBlockHandler { private static final String DEFAULT_BLOCK_MSG = ApiResponse.fail(ErrorCode.REQUEST_BLOCK).toString(); private GrusRuntimeConfig grusRuntimeConfig = GrusFramework.getGrusRuntimeManager().getGrusRuntimeConfig(); @Override public void blocked(HttpServletRequest request, HttpServletResponse response, BlockException ex) throws IOException { String blockPage = grusRuntimeConfig.getStringValue(\"grus.sentinel.web.servlet.block.page\", null); if (blockPage == null) { response.addHeader(\"Content-Type\", \"application/json;charset=utf-8\"); PrintWriter out = response.getWriter(); out.print(DEFAULT_BLOCK_MSG); out.flush(); out.close(); return; } StringBuffer url = request.getRequestURL(); if (\"GET\".equals(request.getMethod()) && StringUtil.isNotBlank(request.getQueryString())) { url.append(\"?\").append(request.getQueryString()); } String redirectUrl = blockPage + \"?http_referer=\" + url.toString(); // Redirect to the customized block page. response.sendRedirect(redirectUrl); } } \u5176\u4e2d\uff1a ErrorCode REQUEST_BLOCK = new BaseErrorCode(-1001, \"\u5f53\u524d\u8bbf\u95ee\u91cf\u8fc7\u5927\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\"); \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5728 sentinel \u7684 dashborad \u4e0a\uff0c\u52a0\u4e0a\u9650\u6d41\u6216\u8005\u7194\u65ad\u89c4\u5219\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u8fd4\u56de { \"code\": -1001, \"data\": null, \"msg\": \"\u5f53\u524d\u8bbf\u95ee\u91cf\u8fc7\u5927\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\" } \u4e00\u822c\u7684\uff0c\u8fd9\u4e2a\u4f1a\u76f4\u63a5\u900f\u4f20\u7684\u6700\u4e0a\u5c42 web\u3002 \u5982\u679c\u9700\u8981\u9875\u9762\u8fd4\u56de\uff0c\u90a3\u4e48\u5728\u81ea\u5df1\u5e94\u7528\u7684 gconf \u4e2d\uff0c\u589e\u52a0 grus-config.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u6dfb\u52a0 grus.sentinel.web.servlet.block.page \u7684\u914d\u7f6e\u5373\u53ef\uff0c\u5176\u503c\u4e3a\u9700\u8981 302 \u8df3\u8f6c\u7684\u9875\u9762\u3002","title":"Sentinel"},{"location":"grus/others/","text":"\u5176\u4ed6 \u00b6 httpclient \u00b6 \u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u6846\u67b6\u5c01\u88c5\u7684httpclient\u3002 \u6846\u67b6\u76ee\u524d\u7edf\u4e00\u63d0\u4f9b\u4e86 httpClient \u7684\u5de5\u5177\u7c7b com.ciicgat.sdk.util.http.HttpClientHelper \uff0c\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u80fd\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u7684\u4f7f\u7528\u573a\u666f\u3002\u5185\u7f6e\u4e86\u5982\u4e0b\u529f\u80fd\uff1a \u4f18\u5316\u597d\u4e86\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\uff0c\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\uff1b \u5e95\u5c42\u5b8c\u5168\u4f7f\u7528 okhttp \u5b9e\u73b0\uff0c\u79fb\u9664\u4e86 apache http \u4f9d\u8d56\uff0c\u4ee5\u540e\u7981\u6b62\u5927\u5bb6\u5728\u81ea\u5df1\u7684\u5e94\u7528\u91cc\u624b\u52a8\u6dfb\u52a0 apache http \uff1b \u9488\u5bf9Dns\u5904\u7406\u8fdb\u884c\u4e86\u4e00\u5b9a\u4f18\u5316\uff0c\u89c1 com.ciicgat.sdk.util.http.CacheDns \uff1b \u6dfb\u52a0\u4e86 trace \u548c\u76d1\u63a7\u62a5\u8b66\uff0c\u9488\u5bf9\u6162\u8bf7\u6c42\u4f1a\u8bb0\u5f55\u5e76\u770b\u60c5\u51b5\u8fdb\u884cfrigate\u62a5\u8b66\uff08\u4f01\u4e1a\u5fae\u4fe1\u6536\u5230\u901a\u77e5\uff09\uff1b \u4fe1\u4efb\u5173\u7231\u901a\u5404\u4e2a\u73af\u5883\u8bc1\u4e66\uff1b \u9ed8\u8ba4\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\uff0c\u4e5f\u652f\u6301\u901a\u8fc7 HttpClientHelper.request \u81ea\u5b9a\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u6839\u636ehttp\u54cd\u5e94\u7801\u5904\u7406\u6216\u8005\u83b7\u53d6header\u4e2d\u7684\u6570\u636e,\u5b8c\u6210\u7279\u6b8a\u573a\u666f\u4e0b\u7684http\u8bf7\u6c42\u8c03\u7528\uff1b \u652f\u6301\u9488\u5bf9\u67d0\u4e2a\u8bf7\u6c42\uff0c\u901a\u8fc7 HttpTimeout \u72ec\u7acb\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff1b \u8fd4\u56de\u8fdb\u884c\u8fc7\u5904\u7406\uff0c\u4e0d\u5c06 Response \u76f4\u63a5\u8fd4\u56de\u7ed9\u4f7f\u7528\u65b9\uff0c\u907f\u514d\u56e0\u4e3a**\u4f7f\u7528\u8005\u5904\u7406\u4e0d\u5f53\uff0c\u672a\u5173\u95ed\u6d41\u800c\u5bfc\u81f4\u7ebf\u4e0a\u95ee\u9898**\u3002 \u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u89c1\u7684 HttpClientHelper \u4f7f\u7528\u65b9\u5f0f\u4ecb\u7ecd\uff1a public class AppTest { private static final Logger log = LoggerFactory . getLogger ( AppTest . class ); @Test public void test () { Map < String , Object > params = new TreeMap <> (); params . put ( \"grant_type\" , \"client_credential\" ); params . put ( \"timestamp\" , String . valueOf ( System . currentTimeMillis () / 1000 )); String url = \"https://openapi.guanaitong.tech/token/create\" ; // \u666e\u901a\u7684\u8868\u5355\u8bf7\u6c42 // public static String postForm(String url, Map<String, ? extends Object> formParameters) String response1 = HttpClientHelper . postForm ( url , params ); log . info ( \"response1={}\" , response1 ); // \u81ea\u5b9a\u4e49\u8d85\u65f6\u65f6\u95f4\u7684\u8bf7\u6c42 // public static String postForm(String url, Map<String, ? extends Object> formParameters, Map<String, String> headers, HttpTimeout httpTimeout) HttpTimeout httpTimeout = new HttpTimeout (). connectTimeout ( Duration . ofSeconds ( 5 )); String response2 = HttpClientHelper . postForm ( url , params , null , httpTimeout ); log . info ( \"response2={}\" , response2 ); // \u666e\u901a\u7684json\u8bf7\u6c42 // public static String postJson(String url, String jsonBody) String response3 = HttpClientHelper . postJson ( url , JSON . toJSONString ( params )); log . info ( \"response3={}\" , response3 ); // \u81ea\u5b9a\u4e49handler\u8bf7\u6c42\uff0c\u9488\u5bf9\u9700\u8981\u5bf9httpStatus\u8fdb\u884c\u5224\u65ad\uff0c\u6216\u8005\u522b\u7684\u9700\u6c42\uff0c\u8fd9\u662f\u4e00\u4e2a\u8868\u5355\u8bf7\u6c42\u7684\u793a\u4f8b // public static <T> T request(Request request, ResponseHandler<? extends T> responseHandler) FormBody . Builder formBody = new FormBody . Builder ( StandardCharsets . UTF_8 ); params . forEach (( key , value ) -> { if ( Objects . isNull ( key ) || Objects . isNull ( value )) { return ; } formBody . add ( key , value . toString ()); }); Request . Builder formRequest = new Request . Builder (). post ( formBody . build ()). url ( url ); Result response4 = HttpClientHelper . request ( formRequest . build (), response -> { // \u6b64\u5904response\u5c31\u662fokhttp\u8fd4\u56de\u7684Response int httpStatus = response . code (); Result result = new Result (); result . setHttpStatus ( httpStatus ); if ( response . isSuccessful ()) { try { if ( response . body () != null ) { String string = response . body (). string (); result = JSON . parse ( string , Result . class ); result . setHttpStatus ( httpStatus ); } } catch ( IOException e ) { log . warn ( \"something wrong\" ); } } else { // \u54cd\u5e94\u7801\u4e0d\u6b63\u5e38\uff0cdo something result . setMsg ( \"do something\" ); } return result ; }); log . info ( \"response4={}\" , response4 ); } public static class Result { private int httpStatus ; private Integer code ; private String msg ; public int getHttpStatus () { return httpStatus ; } public void setHttpStatus ( int httpStatus ) { this . httpStatus = httpStatus ; } public Integer getCode () { return code ; } public void setCode ( Integer code ) { this . code = code ; } public String getMsg () { return msg ; } public void setMsg ( String msg ) { this . msg = msg ; } @Override public String toString () { return JSON . toJSONString ( this ); } } } \u7ebf\u7a0b\u6c60\u7684trace \u00b6 \u5728\u7ebf\u4e0a\u6392\u67e5\u65e5\u5fd7\u65f6\uff0ctraceId\u662f\u975e\u5e38\u597d\u7528\u7684\u5de5\u5177\u3002\u4f46\u662ftraceId\u4e00\u822c\u4ec5\u5728\u5f53\u524d\u7ebf\u7a0b\u5b58\u5728\uff0c\u5f53\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u7ebf\u7a0b\u6c60\u65f6\uff0ctraceId\u5c31\u4e22\u5931\u4e86\uff0c\u4e0d\u5229\u4e8e\u540e\u671f\u95ee\u9898\u7684\u6392\u67e5\u3002 \u6b64\u65f6\uff0c\u9879\u76ee\u4e2d\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u6c60\u9700\u8981\u4f7f\u7528\u6846\u67b6\u5c01\u88c5\u7684 TraceThreadPoolExecutor.wrap \u5305\u88c5\u4e0b\uff0c\u4f7f\u7528\u59d4\u6258\u7c7b\uff0c\u6216\u8005\u76f4\u63a5\u5c31\u4f7f\u7528 TraceThreadPoolExecutor \u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u3002 \u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u4e5f\u652f\u6301 trace \u7684\u672c\u8d28\u662f\u5bf9 Runnable \u8fdb\u884c\u4e86\u5305\u88c5\uff0c\u5728\u65b9\u6cd5\u8c03\u7528\u524d\uff0c\u81ea\u52a8\u5728\u5f53\u524d\u7ebf\u7a0b\u7684 MDC \u4e0b\u8bbe\u7f6e\u76f8\u5173\u5b57\u6bb5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public class TraceRunnable extends ThreadTraceHolder implements Runnable { private final Runnable runnable ; public TraceRunnable ( Runnable runnable ) { this . runnable = runnable ; } public void run () { this . traceInject (); this . runnable . run (); } } public class TraceThreadPoolExecutor extends ThreadPoolExecutor { public void execute ( Runnable command ) { if ( command instanceof TraceRunnable ) { super . execute ( command ); } else { super . execute ( new TraceRunnable ( command )); } } public static Executor wrap ( Executor executor ) { return executor instanceof TraceThreadPoolExecutor ? executor : ( command ) -> { if ( command instanceof TraceRunnable ) { executor . execute ( command ); } else { executor . execute ( new TraceRunnable ( command )); } }; } } \u4f7f\u7528@Async\u6ce8\u89e3\u7684\u6ce8\u610f\u70b9 \u00b6 \u4f7f\u7528 @Async \u6ce8\u89e3\u65f6\uff0c\u4f7f\u7528\u7684\u4e0d\u662f ThreadPoolExecutor \uff0c\u662f ThreadPoolTaskExecutor \uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u73b0\u6210\u8fdb\u884c\u5305\u88c5\u64cd\u4f5c\uff0c\u5982\u4e0b\uff1a @Configuration @EnableAsync public class AsyncExecutorConfiguration implements AsyncConfigurer { private static final Logger LOGGER = LoggerFactory . getLogger ( AsyncExecutorConfiguration . class ); @Override public Executor getAsyncExecutor () { ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor (); executor . setCorePoolSize ( 50 ); executor . setThreadNamePrefix ( \"AsyncExecutor-\" ); executor . setTaskDecorator ( r -> { if ( r instanceof TraceRunnable ) { return r ; } else { return new TraceRunnable ( r ); } }); executor . setRejectedExecutionHandler ( new ThreadPoolExecutor . CallerRunsPolicy ()); executor . initialize (); return executor ; } @Override public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler () { return ( arg0 , arg1 , arg2 ) -> { LOGGER . error ( \"async execute exception:\" + arg0 . getMessage (), arg0 ); LOGGER . error ( \"async execute exception method:{}\" , arg1 . getName ()); }; } } security \u00b6 \u63a8\u8350\u5927\u5bb6\u4f7f\u7528 spring-security \u6765\u52a0\u56fa\u4f60\u7684 web \u7a0b\u5e8f\uff0c\u5904\u7406 CSRF \u3001 XSS \u7b49\u653b\u51fb\u3002 Apache Shiro \u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 \u589e\u52a0\u4f9d\u8d56\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-security </artifactId> </dependency> \u6587\u6863\uff1a https://docs.spring.io/spring-security/site/docs/5.1.5.RELEASE/reference/htmlsingle/ devtool \u00b6 spring \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a spring-boot-devtools \u7684\u6a21\u5757\u6765\u4f7f Spring Boot \u5e94\u7528\u652f\u6301\u70ed\u90e8\u7f72\uff0c\u63d0\u9ad8\u5f00\u53d1\u8005\u7684\u5f00\u53d1\u6548\u7387\uff0c\u65e0\u9700\u624b\u52a8\u91cd\u542f Spring Boot \u5e94\u7528\u3002 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-devtools </artifactId> <optional> true </optional> </dependency> \u53c2\u8003\u6587\u6863\uff1a https://blog.csdn.net/jaydenwang5310/article/details/78738847 \u5176\u4ed6 \u00b6 spring.main.allow-bean-definition-overriding \u9ed8\u8ba4\u4e3a false\uff0c\u8fd9\u4e2a\u5bf9\u5927\u90e8\u5206\u4eba\u6ca1\u6709\u5f71\u54cd\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u6210\u529f\u8fc1\u79fb\u5230\u65b0\u6846\u67b6\uff0c\u90a3\u4e48 maven \u4f9d\u8d56\u4e2d\uff0c\u5e94\u8be5\u662f\u6ca1\u6709\u4efb\u4f55\u8001\u6846\u67b6\u7684 jar\u3002\u56e0\u4e3a\u65b0\u6846\u67b6\u5b8c\u5168\u5305\u542b\u8001\u6846\u67b6\u7684\u529f\u80fd\u3002\u5426\u5219\uff0c\u8bf4\u660e\u4f60\u7684\u8fc1\u79fb\u8fd8\u4e0d\u5b8c\u6574","title":"\u5176\u4ed6"},{"location":"grus/others/#_1","text":"","title":"\u5176\u4ed6"},{"location":"grus/others/#httpclient","text":"\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u6846\u67b6\u5c01\u88c5\u7684httpclient\u3002 \u6846\u67b6\u76ee\u524d\u7edf\u4e00\u63d0\u4f9b\u4e86 httpClient \u7684\u5de5\u5177\u7c7b com.ciicgat.sdk.util.http.HttpClientHelper \uff0c\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u80fd\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u7684\u4f7f\u7528\u573a\u666f\u3002\u5185\u7f6e\u4e86\u5982\u4e0b\u529f\u80fd\uff1a \u4f18\u5316\u597d\u4e86\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\uff0c\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\uff1b \u5e95\u5c42\u5b8c\u5168\u4f7f\u7528 okhttp \u5b9e\u73b0\uff0c\u79fb\u9664\u4e86 apache http \u4f9d\u8d56\uff0c\u4ee5\u540e\u7981\u6b62\u5927\u5bb6\u5728\u81ea\u5df1\u7684\u5e94\u7528\u91cc\u624b\u52a8\u6dfb\u52a0 apache http \uff1b \u9488\u5bf9Dns\u5904\u7406\u8fdb\u884c\u4e86\u4e00\u5b9a\u4f18\u5316\uff0c\u89c1 com.ciicgat.sdk.util.http.CacheDns \uff1b \u6dfb\u52a0\u4e86 trace \u548c\u76d1\u63a7\u62a5\u8b66\uff0c\u9488\u5bf9\u6162\u8bf7\u6c42\u4f1a\u8bb0\u5f55\u5e76\u770b\u60c5\u51b5\u8fdb\u884cfrigate\u62a5\u8b66\uff08\u4f01\u4e1a\u5fae\u4fe1\u6536\u5230\u901a\u77e5\uff09\uff1b \u4fe1\u4efb\u5173\u7231\u901a\u5404\u4e2a\u73af\u5883\u8bc1\u4e66\uff1b \u9ed8\u8ba4\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\uff0c\u4e5f\u652f\u6301\u901a\u8fc7 HttpClientHelper.request \u81ea\u5b9a\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u6839\u636ehttp\u54cd\u5e94\u7801\u5904\u7406\u6216\u8005\u83b7\u53d6header\u4e2d\u7684\u6570\u636e,\u5b8c\u6210\u7279\u6b8a\u573a\u666f\u4e0b\u7684http\u8bf7\u6c42\u8c03\u7528\uff1b \u652f\u6301\u9488\u5bf9\u67d0\u4e2a\u8bf7\u6c42\uff0c\u901a\u8fc7 HttpTimeout \u72ec\u7acb\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff1b \u8fd4\u56de\u8fdb\u884c\u8fc7\u5904\u7406\uff0c\u4e0d\u5c06 Response \u76f4\u63a5\u8fd4\u56de\u7ed9\u4f7f\u7528\u65b9\uff0c\u907f\u514d\u56e0\u4e3a**\u4f7f\u7528\u8005\u5904\u7406\u4e0d\u5f53\uff0c\u672a\u5173\u95ed\u6d41\u800c\u5bfc\u81f4\u7ebf\u4e0a\u95ee\u9898**\u3002 \u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u89c1\u7684 HttpClientHelper \u4f7f\u7528\u65b9\u5f0f\u4ecb\u7ecd\uff1a public class AppTest { private static final Logger log = LoggerFactory . getLogger ( AppTest . class ); @Test public void test () { Map < String , Object > params = new TreeMap <> (); params . put ( \"grant_type\" , \"client_credential\" ); params . put ( \"timestamp\" , String . valueOf ( System . currentTimeMillis () / 1000 )); String url = \"https://openapi.guanaitong.tech/token/create\" ; // \u666e\u901a\u7684\u8868\u5355\u8bf7\u6c42 // public static String postForm(String url, Map<String, ? extends Object> formParameters) String response1 = HttpClientHelper . postForm ( url , params ); log . info ( \"response1={}\" , response1 ); // \u81ea\u5b9a\u4e49\u8d85\u65f6\u65f6\u95f4\u7684\u8bf7\u6c42 // public static String postForm(String url, Map<String, ? extends Object> formParameters, Map<String, String> headers, HttpTimeout httpTimeout) HttpTimeout httpTimeout = new HttpTimeout (). connectTimeout ( Duration . ofSeconds ( 5 )); String response2 = HttpClientHelper . postForm ( url , params , null , httpTimeout ); log . info ( \"response2={}\" , response2 ); // \u666e\u901a\u7684json\u8bf7\u6c42 // public static String postJson(String url, String jsonBody) String response3 = HttpClientHelper . postJson ( url , JSON . toJSONString ( params )); log . info ( \"response3={}\" , response3 ); // \u81ea\u5b9a\u4e49handler\u8bf7\u6c42\uff0c\u9488\u5bf9\u9700\u8981\u5bf9httpStatus\u8fdb\u884c\u5224\u65ad\uff0c\u6216\u8005\u522b\u7684\u9700\u6c42\uff0c\u8fd9\u662f\u4e00\u4e2a\u8868\u5355\u8bf7\u6c42\u7684\u793a\u4f8b // public static <T> T request(Request request, ResponseHandler<? extends T> responseHandler) FormBody . Builder formBody = new FormBody . Builder ( StandardCharsets . UTF_8 ); params . forEach (( key , value ) -> { if ( Objects . isNull ( key ) || Objects . isNull ( value )) { return ; } formBody . add ( key , value . toString ()); }); Request . Builder formRequest = new Request . Builder (). post ( formBody . build ()). url ( url ); Result response4 = HttpClientHelper . request ( formRequest . build (), response -> { // \u6b64\u5904response\u5c31\u662fokhttp\u8fd4\u56de\u7684Response int httpStatus = response . code (); Result result = new Result (); result . setHttpStatus ( httpStatus ); if ( response . isSuccessful ()) { try { if ( response . body () != null ) { String string = response . body (). string (); result = JSON . parse ( string , Result . class ); result . setHttpStatus ( httpStatus ); } } catch ( IOException e ) { log . warn ( \"something wrong\" ); } } else { // \u54cd\u5e94\u7801\u4e0d\u6b63\u5e38\uff0cdo something result . setMsg ( \"do something\" ); } return result ; }); log . info ( \"response4={}\" , response4 ); } public static class Result { private int httpStatus ; private Integer code ; private String msg ; public int getHttpStatus () { return httpStatus ; } public void setHttpStatus ( int httpStatus ) { this . httpStatus = httpStatus ; } public Integer getCode () { return code ; } public void setCode ( Integer code ) { this . code = code ; } public String getMsg () { return msg ; } public void setMsg ( String msg ) { this . msg = msg ; } @Override public String toString () { return JSON . toJSONString ( this ); } } }","title":"httpclient"},{"location":"grus/others/#trace","text":"\u5728\u7ebf\u4e0a\u6392\u67e5\u65e5\u5fd7\u65f6\uff0ctraceId\u662f\u975e\u5e38\u597d\u7528\u7684\u5de5\u5177\u3002\u4f46\u662ftraceId\u4e00\u822c\u4ec5\u5728\u5f53\u524d\u7ebf\u7a0b\u5b58\u5728\uff0c\u5f53\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u7ebf\u7a0b\u6c60\u65f6\uff0ctraceId\u5c31\u4e22\u5931\u4e86\uff0c\u4e0d\u5229\u4e8e\u540e\u671f\u95ee\u9898\u7684\u6392\u67e5\u3002 \u6b64\u65f6\uff0c\u9879\u76ee\u4e2d\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u6c60\u9700\u8981\u4f7f\u7528\u6846\u67b6\u5c01\u88c5\u7684 TraceThreadPoolExecutor.wrap \u5305\u88c5\u4e0b\uff0c\u4f7f\u7528\u59d4\u6258\u7c7b\uff0c\u6216\u8005\u76f4\u63a5\u5c31\u4f7f\u7528 TraceThreadPoolExecutor \u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u3002 \u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u4e5f\u652f\u6301 trace \u7684\u672c\u8d28\u662f\u5bf9 Runnable \u8fdb\u884c\u4e86\u5305\u88c5\uff0c\u5728\u65b9\u6cd5\u8c03\u7528\u524d\uff0c\u81ea\u52a8\u5728\u5f53\u524d\u7ebf\u7a0b\u7684 MDC \u4e0b\u8bbe\u7f6e\u76f8\u5173\u5b57\u6bb5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public class TraceRunnable extends ThreadTraceHolder implements Runnable { private final Runnable runnable ; public TraceRunnable ( Runnable runnable ) { this . runnable = runnable ; } public void run () { this . traceInject (); this . runnable . run (); } } public class TraceThreadPoolExecutor extends ThreadPoolExecutor { public void execute ( Runnable command ) { if ( command instanceof TraceRunnable ) { super . execute ( command ); } else { super . execute ( new TraceRunnable ( command )); } } public static Executor wrap ( Executor executor ) { return executor instanceof TraceThreadPoolExecutor ? executor : ( command ) -> { if ( command instanceof TraceRunnable ) { executor . execute ( command ); } else { executor . execute ( new TraceRunnable ( command )); } }; } }","title":"\u7ebf\u7a0b\u6c60\u7684trace"},{"location":"grus/others/#async","text":"\u4f7f\u7528 @Async \u6ce8\u89e3\u65f6\uff0c\u4f7f\u7528\u7684\u4e0d\u662f ThreadPoolExecutor \uff0c\u662f ThreadPoolTaskExecutor \uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u73b0\u6210\u8fdb\u884c\u5305\u88c5\u64cd\u4f5c\uff0c\u5982\u4e0b\uff1a @Configuration @EnableAsync public class AsyncExecutorConfiguration implements AsyncConfigurer { private static final Logger LOGGER = LoggerFactory . getLogger ( AsyncExecutorConfiguration . class ); @Override public Executor getAsyncExecutor () { ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor (); executor . setCorePoolSize ( 50 ); executor . setThreadNamePrefix ( \"AsyncExecutor-\" ); executor . setTaskDecorator ( r -> { if ( r instanceof TraceRunnable ) { return r ; } else { return new TraceRunnable ( r ); } }); executor . setRejectedExecutionHandler ( new ThreadPoolExecutor . CallerRunsPolicy ()); executor . initialize (); return executor ; } @Override public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler () { return ( arg0 , arg1 , arg2 ) -> { LOGGER . error ( \"async execute exception:\" + arg0 . getMessage (), arg0 ); LOGGER . error ( \"async execute exception method:{}\" , arg1 . getName ()); }; } }","title":"\u4f7f\u7528@Async\u6ce8\u89e3\u7684\u6ce8\u610f\u70b9"},{"location":"grus/others/#security","text":"\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 spring-security \u6765\u52a0\u56fa\u4f60\u7684 web \u7a0b\u5e8f\uff0c\u5904\u7406 CSRF \u3001 XSS \u7b49\u653b\u51fb\u3002 Apache Shiro \u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 \u589e\u52a0\u4f9d\u8d56\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-security </artifactId> </dependency> \u6587\u6863\uff1a https://docs.spring.io/spring-security/site/docs/5.1.5.RELEASE/reference/htmlsingle/","title":"security"},{"location":"grus/others/#devtool","text":"spring \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a spring-boot-devtools \u7684\u6a21\u5757\u6765\u4f7f Spring Boot \u5e94\u7528\u652f\u6301\u70ed\u90e8\u7f72\uff0c\u63d0\u9ad8\u5f00\u53d1\u8005\u7684\u5f00\u53d1\u6548\u7387\uff0c\u65e0\u9700\u624b\u52a8\u91cd\u542f Spring Boot \u5e94\u7528\u3002 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-devtools </artifactId> <optional> true </optional> </dependency> \u53c2\u8003\u6587\u6863\uff1a https://blog.csdn.net/jaydenwang5310/article/details/78738847","title":"devtool"},{"location":"grus/others/#_2","text":"spring.main.allow-bean-definition-overriding \u9ed8\u8ba4\u4e3a false\uff0c\u8fd9\u4e2a\u5bf9\u5927\u90e8\u5206\u4eba\u6ca1\u6709\u5f71\u54cd\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u6210\u529f\u8fc1\u79fb\u5230\u65b0\u6846\u67b6\uff0c\u90a3\u4e48 maven \u4f9d\u8d56\u4e2d\uff0c\u5e94\u8be5\u662f\u6ca1\u6709\u4efb\u4f55\u8001\u6846\u67b6\u7684 jar\u3002\u56e0\u4e3a\u65b0\u6846\u67b6\u5b8c\u5168\u5305\u542b\u8001\u6846\u67b6\u7684\u529f\u80fd\u3002\u5426\u5219\uff0c\u8bf4\u660e\u4f60\u7684\u8fc1\u79fb\u8fd8\u4e0d\u5b8c\u6574","title":"\u5176\u4ed6"},{"location":"grus/others/grus-17/","text":"Java17\u5347\u7ea7\u6307\u5357 \u00b6 \u4f7f\u7528 https://adoptium.net/ \u4e0b\u8f7d jdk17 \u3002\u5b83\u539f\u6765\u53eb adoptopenjdk \uff0c\u540e\u6765\u9879\u76ee\u5f52\u5230 eclipse \u65d7\u4e0b\uff0c\u6539\u540d\u4e3a eclipse temurin \uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u7ebf\u4e0a\u91c7\u7528\u7684\u53d1\u884c\u7248\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 idea \u81ea\u5e26\u7684jdk\u4e0b\u8f7d\u529f\u80fd\u4e0b\u8f7d\uff0c\u9009\u62e9 Eclipse Temurin \uff08idea\u6700\u597d\u914d\u7f6e\u4e0b\u7ffb\u5899\u7684http proxy\uff09\u3002 POM\u4fee\u6539 \u00b6 grus\u7248\u672c\u5fc5\u987b\u4f7f\u7528 2021.2.0-SNAPTSHOT pom.xml \u91cc\u589e\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a <project> <properties> <java.version> 17 </java.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> </project> maven-compiler-plugin\u91cc\u768411\u914d\u7f6e\u8981\u53bb\u6389\uff08\u5982\u679c\u6709\uff09\uff1a old new <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.8.0 </version> <configuration> <source> 11 </source> <target> 11 </target> <encoding> UTF-8 </encoding> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> </plugin> \u5927\u5bb6\u53ef\u4ee5\u67e5\u770b\u793a\u4f8b\u9879\u76ee open-business-travel \u4f9d\u8d56\u9879\u5347\u7ea7 \u00b6 junit\u5347\u7ea7\u52305\uff1b elasticJob\u5347\u7ea7\u4e3a\u6700\u65b0\u7684 shardingsphere elasticjob \uff0c\u76f8\u5173\u5305\u9700\u8981\u6539\u4e3a org.apache.shardingsphere.elasticjob \uff1b feign\u5347\u7ea7\u4e3a11.6\u7248\u672c\uff1b TODO \u517c\u5bb9\u95ee\u9898 \u00b6 TODO:\u5176\u4ed6\u517c\u5bb9\u6027\u95ee\u9898\u5e26\u8865\u5145","title":"Java17\u5347\u7ea7\u6307\u5357"},{"location":"grus/others/grus-17/#java17","text":"\u4f7f\u7528 https://adoptium.net/ \u4e0b\u8f7d jdk17 \u3002\u5b83\u539f\u6765\u53eb adoptopenjdk \uff0c\u540e\u6765\u9879\u76ee\u5f52\u5230 eclipse \u65d7\u4e0b\uff0c\u6539\u540d\u4e3a eclipse temurin \uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u7ebf\u4e0a\u91c7\u7528\u7684\u53d1\u884c\u7248\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 idea \u81ea\u5e26\u7684jdk\u4e0b\u8f7d\u529f\u80fd\u4e0b\u8f7d\uff0c\u9009\u62e9 Eclipse Temurin \uff08idea\u6700\u597d\u914d\u7f6e\u4e0b\u7ffb\u5899\u7684http proxy\uff09\u3002","title":"Java17\u5347\u7ea7\u6307\u5357"},{"location":"grus/others/grus-17/#pom","text":"grus\u7248\u672c\u5fc5\u987b\u4f7f\u7528 2021.2.0-SNAPTSHOT pom.xml \u91cc\u589e\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a <project> <properties> <java.version> 17 </java.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-agg </artifactId> <version> 2.0-SNAPSHOT </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> </project> maven-compiler-plugin\u91cc\u768411\u914d\u7f6e\u8981\u53bb\u6389\uff08\u5982\u679c\u6709\uff09\uff1a old new <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.8.0 </version> <configuration> <source> 11 </source> <target> 11 </target> <encoding> UTF-8 </encoding> </configuration> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> </plugin> \u5927\u5bb6\u53ef\u4ee5\u67e5\u770b\u793a\u4f8b\u9879\u76ee open-business-travel","title":"POM\u4fee\u6539"},{"location":"grus/others/grus-17/#_1","text":"junit\u5347\u7ea7\u52305\uff1b elasticJob\u5347\u7ea7\u4e3a\u6700\u65b0\u7684 shardingsphere elasticjob \uff0c\u76f8\u5173\u5305\u9700\u8981\u6539\u4e3a org.apache.shardingsphere.elasticjob \uff1b feign\u5347\u7ea7\u4e3a11.6\u7248\u672c\uff1b TODO","title":"\u4f9d\u8d56\u9879\u5347\u7ea7"},{"location":"grus/others/grus-17/#_2","text":"TODO:\u5176\u4ed6\u517c\u5bb9\u6027\u95ee\u9898\u5e26\u8865\u5145","title":"\u517c\u5bb9\u95ee\u9898"},{"location":"grus/others/grus-core/","text":"Bean \u590d\u5236\u5de5\u5177 \u00b6 bean \u590d\u5236\u4f7f\u7528 cglib \u5e93\u7684 API \u5b9e\u73b0\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a BeanDTO dto = new BeanDTO (); BeanBO bo = BeanCopyUtil . copy ( dto , BeanBO . class ); List < BeanDTO > dtoList = new ArrayList (); List < BeanBO > bo = BeanCopyUtil . copyList ( dtoList , BeanBO . class ); \u6709\u65f6\u6211\u4eec\u4f1a\u9047\u5230\u4e24\u4e2a\u5bf9\u8c61\u5927\u90e8\u5206\u5b57\u6bb5\u4e00\u81f4\uff0c\u4e00\u4e24\u4e2a\u5b57\u6bb5\u7684\u547d\u540d\u4e0d\u540c\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u8f6c\u6362\u65b9\u6cd5\u3002\u5728\u76f8\u540c\u5b57\u6bb5\u62f7\u8d1d\u540e\uff0c\u4f1a\u6267\u884c\u8be5\u8f6c\u6362\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u9700\u8981\u7684\u5b57\u6bb5\u3002 public class TestExtraConverter implements BeanExtraConverter < BeanDTO , BeanBO > { @Override public void afterProcess ( BeanDTO dto , BeanBO bo ) { bo . setName ( dto . getPersonName ()); } } public void copyList () { TestExtraConverter converter = new TestExtraConverter (); List < BeanDTO > dtoList = new ArrayList (); List < BeanBO > bo = BeanCopyUtil . copyList ( dtoList , BeanBO . class , converter ); } \u989d\u5916\u8f6c\u6362\u65b9\u6cd5\u5728 List \u8f6c\u6362\u65f6\u5c24\u4e3a\u6709\u7528\uff0c\u4e0d\u9700\u8981\u589e\u52a0\u989d\u5916\u7684 for \u5faa\u73af\u5373\u80fd\u5b8c\u6210\u5217\u8868\u7684\u989d\u5916\u8f6c\u6362\u3002 Bean \u548c Map \u4e92\u8f6c\u5de5\u5177 \u00b6 bean \u548c map \u7684\u4e92\u8f6c\u4e5f\u5e38\u5e38\u88ab\u7528\u5230\uff0ccglib \u4e5f\u6709 API \u652f\u6301\uff0c\u5c01\u88c5\u540e\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a Bean bean = new Bean (); Map < String , Object > beanMap = BeanMapUtil . bean2Map ( bean ); Map < String , Object > beanMap = new HashMap <> (); Bean bean = BeanMapUtil . map2Bean ( beanMap , Bean . class );","title":"bean\u590d\u5236\u5de5\u5177"},{"location":"grus/others/grus-core/#bean","text":"bean \u590d\u5236\u4f7f\u7528 cglib \u5e93\u7684 API \u5b9e\u73b0\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a BeanDTO dto = new BeanDTO (); BeanBO bo = BeanCopyUtil . copy ( dto , BeanBO . class ); List < BeanDTO > dtoList = new ArrayList (); List < BeanBO > bo = BeanCopyUtil . copyList ( dtoList , BeanBO . class ); \u6709\u65f6\u6211\u4eec\u4f1a\u9047\u5230\u4e24\u4e2a\u5bf9\u8c61\u5927\u90e8\u5206\u5b57\u6bb5\u4e00\u81f4\uff0c\u4e00\u4e24\u4e2a\u5b57\u6bb5\u7684\u547d\u540d\u4e0d\u540c\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u989d\u5916\u7684\u8f6c\u6362\u65b9\u6cd5\u3002\u5728\u76f8\u540c\u5b57\u6bb5\u62f7\u8d1d\u540e\uff0c\u4f1a\u6267\u884c\u8be5\u8f6c\u6362\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u9700\u8981\u7684\u5b57\u6bb5\u3002 public class TestExtraConverter implements BeanExtraConverter < BeanDTO , BeanBO > { @Override public void afterProcess ( BeanDTO dto , BeanBO bo ) { bo . setName ( dto . getPersonName ()); } } public void copyList () { TestExtraConverter converter = new TestExtraConverter (); List < BeanDTO > dtoList = new ArrayList (); List < BeanBO > bo = BeanCopyUtil . copyList ( dtoList , BeanBO . class , converter ); } \u989d\u5916\u8f6c\u6362\u65b9\u6cd5\u5728 List \u8f6c\u6362\u65f6\u5c24\u4e3a\u6709\u7528\uff0c\u4e0d\u9700\u8981\u589e\u52a0\u989d\u5916\u7684 for \u5faa\u73af\u5373\u80fd\u5b8c\u6210\u5217\u8868\u7684\u989d\u5916\u8f6c\u6362\u3002","title":"Bean \u590d\u5236\u5de5\u5177"},{"location":"grus/others/grus-core/#bean-map","text":"bean \u548c map \u7684\u4e92\u8f6c\u4e5f\u5e38\u5e38\u88ab\u7528\u5230\uff0ccglib \u4e5f\u6709 API \u652f\u6301\uff0c\u5c01\u88c5\u540e\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a Bean bean = new Bean (); Map < String , Object > beanMap = BeanMapUtil . bean2Map ( bean ); Map < String , Object > beanMap = new HashMap <> (); Bean bean = BeanMapUtil . map2Bean ( beanMap , Bean . class );","title":"Bean \u548c Map \u4e92\u8f6c\u5de5\u5177"},{"location":"grus/others/grus-json/","text":"JSON \u4f7f\u7528\u8bf4\u660e \u00b6 \u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528 jackson \u5e93\u505a json \u7684\u5904\u7406\u3002\u50cf fastjson\uff0c\u56e0\u4e3a\u6f0f\u6d1e\u592a\u591a\u4e86\uff0c\u5927\u5bb6\u4e0d\u8981\u4f7f\u7528\u3002 \u4e3a\u4e86\u4f7f\u5927\u5bb6\u4f7f\u7528\u7b80\u5355\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u5de5\u5177\u7c7b\u548c\u793a\u4f8b\uff0c\u6240\u6709\u793a\u4f8b\u5728 \u5355\u5143\u6d4b\u8bd5 \u4e2d\u90fd\u53ef\u4ee5\u627e\u5230\uff1a \u5de5\u5177\u7c7b\u4e3a\uff1a com.ciicgat.grus.json.JSON \u5927\u5bb6\u5728\u8fc1\u79fb\u65f6\uff0c\u9700\u8981\u91cd\u70b9\u6ce8\u610f date \u7c7b\u578b\u7684\u5904\u7406 \u5c3d\u91cf\u4f7f\u7528 class \u6765\u505a\u6620\u5c04\uff0c\u5b83\u80fd\u6ee1\u8db3 90%\u4ee5\u4e0a\u7684\u573a\u666f\uff0c\u4e0d\u8981\u4f7f\u7528 JsonNode\u3002\u5982\u679c\u8981\u7528 JsonNode\uff0c\u8bf7\u628a\u6587\u6863\u548c\u5355\u5143\u6d4b\u8bd5\u5f7b\u5e95\u7406\u89e3\u901a\u900f\u540e\u518d\u7528\u3002 \u5c06\u5bf9\u8c61\u8f93\u51fa\u4e3a JSON \u5b57\u7b26\u4e32 \u00b6 /** * \u5c06\u5bf9\u8c61\u8f93\u51fa\u4e3ajson\u5b57\u7b26\u4e32 * * @param object * @return */ public static String toJSONString ( Object object ) { try { return OBJECT_MAPPER . writeValueAsString ( object ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a User user = new User ( 1 , \"a\" , new Date ()); String s = JSON . toJSONString ( user ); System . out . println ( s ); //\u901a\u7528\u573a\u666f\uff0c\u4f7f\u7528map\u6216\u8005list Map < String , Object > jsonObject = new LinkedHashMap <> (); jsonObject . put ( \"code\" , 0 ); jsonObject . put ( \"msg\" , \"OK\" ); jsonObject . put ( \"data\" , true ); System . out . println ( JSON . toJSONString ( jsonObject )); \u89e3\u6790\u4e3a\u6307\u5b9a\u7684\u7c7b \u00b6 /** * \u89e3\u6790\u4e3a\u6307\u5b9a\u7c7b * * @param text * @param clazz * @param <T> * @return */ public static < T > T parse ( String text , Class < T > clazz ) { try { return OBJECT_MAPPER . readValue ( text , clazz ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u793a\u4f8b\uff1a User u1 = JSON . parse ( s , User . class ); \u5904\u7406\u6cdb\u578b \u00b6 \u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u9047\u5230\u6cdb\u578b\u5d4c\u5957\u65f6\uff08\u6bd4\u5982\u8bf4 List\u3001Map\uff09\uff0c\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u65b9\u6cd5\uff1a /** * \u7528\u4e8e\u5904\u7406\u5e26\u6cdb\u578b\u5d4c\u5957\u7684\u7c7b * * @param text * @param typeReference * @param <T> * @return */ public static < T > T parse ( String text , TypeReference < T > typeReference ) { try { return OBJECT_MAPPER . readValue ( text , typeReference ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u793a\u4f8b\uff1a List < User > users = new ArrayList <> (); users . add ( new User ( 1 , \"a\" )); users . add ( new User ( 2 , \"b\" )); String s = JSON . toJSONString ( users ); System . out . println ( s ); List < User > list = JSON . parse ( s , new com . fasterxml . jackson . core . type . TypeReference <> () { }); Assert . assertEquals ( users , list ); \u8f6c\u5316\u4e3a\u6811\u7ed3\u6784 JsonNode \u00b6 \u6709\u65f6\uff0c\u5927\u5bb6\u4e0d\u60f3\u5199\u6216\u8005\u65e0\u6cd5\u5199\u4e00\u4e2a\u7c7b\u4e0e json \u505a\u6620\u5c04\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 JsonNode /** * \u89e3\u6790\u4e3a\u901a\u7528\u7684\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u7528\u548c\u5bf9\u8c61\u505a\u6620\u5c04 * * @param text * @return */ public static JsonNode parse ( String text ) { try { return OBJECT_MAPPER . readTree ( text ); } catch ( Throwable e ) { throw new JSONException ( e ); } } JsonNode \u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\uff1a User user = new User ( 1 , \"a\" , new Date ()); String s = JSON . toJSONString ( user ); JsonNode jsonNode = JSON . parse ( s ); Assert . assertTrue ( jsonNode . isObject ()); Assert . assertNotNull ( jsonNode . get ( \"id\" )); //\u53d6id\u8282\u70b9 Assert . assertNull ( jsonNode . get ( \"id1\" )); //\u4e0d\u5b58\u5728id1\u8282\u70b9\uff0c\u6240\u4ee5\u8fd4\u56de\u4e3anull Assert . assertEquals ( jsonNode . get ( \"id\" ). asInt (), 1 ); //\u53d6id\u7684\u503c Assert . assertEquals ( jsonNode . get ( \"name\" ). asText (), \"a\" ); //\u53d6name\u7684\u503c \u904d\u5386 JsonNode Iterator < Map . Entry < String , JsonNode >> fields = jsonNode . fields (); for ( Iterator < Map . Entry < String , JsonNode >> it = fields ; it . hasNext (); ) { Map . Entry < String , JsonNode > entry = it . next (); System . out . println ( entry . getKey ()); System . out . println ( entry . getValue ()); } \u5f53 JsonNode \u662f\u6570\u7ec4\u65f6\uff1a List < User > users = new ArrayList <> (); users . add ( new User ( 1 , \"a\" )); users . add ( new User ( 2 , \"b\" )); String s = JSON . toJSONString ( users ); JsonNode jsonNode = JSON . parse ( s ); Assert . assertTrue ( jsonNode . isArray ()); //\u901a\u8fc7\u8fed\u4ee3\u5668\u904d\u5386 for ( Iterator < JsonNode > it = jsonNode . iterator (); it . hasNext (); ) { JsonNode node = it . next (); JsonNode idJsonNode = node . get ( \"id\" ); JsonNode nameJsonNode = node . get ( \"name\" ); Assert . assertTrue ( idJsonNode . isInt ()); Assert . assertTrue ( nameJsonNode . isTextual ()); } //\u901a\u8fc7index\u904d\u5386 for ( int i = 0 ; i < jsonNode . size (); i ++ ) { JsonNode node = jsonNode . get ( i ); JsonNode idJsonNode = node . get ( \"id\" ); JsonNode nameJsonNode = node . get ( \"name\" ); Assert . assertTrue ( idJsonNode . isInt ()); Assert . assertTrue ( nameJsonNode . isTextual ()); } JsonNode \u4e3a\u7a7a\u65f6\u5904\u7406 \u00b6 JsonNode \u672c\u8eab\u53ef\u80fd\u4e3a null\uff0c\u8fd8\u53ef\u80fd\u4e3a NullNode\u3002\u4e0b\u9762\u6f14\u793a\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a String s = \"{\\\"1\\\":123,\\\"2\\\":null}\" ; JsonNode jsonNode = JSON . parse ( s ); //1\u8282\u70b9\u5b58\u5728 Assert . assertNotNull ( jsonNode . get ( \"1\" )); Assert . assertFalse ( jsonNode . get ( \"1\" ). isNull ()); //2\u8282\u70b9\u5b58\u5728\uff0c\u4f46\u662f\u503c\u4e3anull\uff0c\u5bf9\u5e94jsonnode\u7c7b\u578b\u4e3aNullNode\uff0c\u5b83\u4e0d\u662fnull Assert . assertNotNull ( jsonNode . get ( \"2\" )); Assert . assertNotNull ( jsonNode . get ( \"2\" ). isNull ()); Assert . assertTrue ( jsonNode . get ( \"2\" ) == NullNode . getInstance ()); Assert . assertEquals ( jsonNode . get ( \"2\" ). asText (), \"null\" ); //\u4e0d\u5b58\u5728\u76843\u8282\u70b9\u4e3anull Assert . assertNull ( jsonNode . get ( \"3\" )); \u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528 JSON.of \u65b9\u6cd5\uff0c\u5904\u7406 null \u6216\u8005 NullNode \u7684\u60c5\u51b5\uff0c\u907f\u514d\u5f88\u591a if \u5224\u65ad\uff1a /** * \u65b9\u4fbf\u5904\u7406jsonNode\u4e3aNullNode\u60c5\u51b5 * * @param jsonNode * @return */ public static Optional < JsonNode > of ( JsonNode jsonNode ) { if ( jsonNode == null || jsonNode . isNull ()) { return Optional . empty (); } return Optional . of ( jsonNode ); } \u4e0b\u9762\u6f14\u793a JSON.of \u65b9\u6cd5\u7684\u4f7f\u7528\uff1a int v1 = JSON . of ( jsonNode . get ( \"1\" )). map ( JsonNode :: asInt ). orElse ( 0 ); Assert . assertEquals ( 123 , v1 ); String v2 = JSON . of ( jsonNode . get ( \"2\" )). map ( JsonNode :: asText ). orElse ( \"defaultValue\" ); Assert . assertEquals ( \"defaultValue\" , v2 ); JsonNode \u8f6c\u5316\u4e3a Java \u5bf9\u8c61 \u00b6 \u5f88\u591a\u65f6\u5019\uff0c\u5927\u5bb6\u5728\u83b7\u53d6\u4e00\u4e2a jsonNode \u7684\u5b50 jsonNode \u4e4b\u540e\uff0c\u53ef\u80fd\u6709\u9700\u6c42\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u8c61\u3002 \u53ef\u4ee5\u4f7f\u7528 toJavaObject \u5904\u7406\uff1a /** * \u7528\u4e8e\u5c06jsonNode\u8f6c\u6362\u4e3ajava\u5bf9\u8c61 * * @param jsonNode * @param tClass * @param <T> * @return */ public static < T > T toJavaObject ( JsonNode jsonNode , Class < T > tClass ) { try { JsonParser jsonParser = OBJECT_MAPPER . treeAsTokens ( jsonNode ); return OBJECT_MAPPER . readValue ( jsonParser , tClass ); } catch ( Throwable e ) { throw new JSONException ( e ); } } /** * \u7528\u4e8e\u5c06jsonNode\u8f6c\u6362\u4e3ajava\u5bf9\u8c61 * * @param jsonNode * @param typeReference * @param <T> * @return */ public static < T > T toJavaObject ( JsonNode jsonNode , TypeReference < T > typeReference ) { try { JsonParser jsonParser = OBJECT_MAPPER . treeAsTokens ( jsonNode ); return OBJECT_MAPPER . readValue ( jsonParser , typeReference ); } catch ( Throwable e ) { throw new JSONException ( e ); } }","title":"JSON\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/others/grus-json/#json","text":"\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528 jackson \u5e93\u505a json \u7684\u5904\u7406\u3002\u50cf fastjson\uff0c\u56e0\u4e3a\u6f0f\u6d1e\u592a\u591a\u4e86\uff0c\u5927\u5bb6\u4e0d\u8981\u4f7f\u7528\u3002 \u4e3a\u4e86\u4f7f\u5927\u5bb6\u4f7f\u7528\u7b80\u5355\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u5de5\u5177\u7c7b\u548c\u793a\u4f8b\uff0c\u6240\u6709\u793a\u4f8b\u5728 \u5355\u5143\u6d4b\u8bd5 \u4e2d\u90fd\u53ef\u4ee5\u627e\u5230\uff1a \u5de5\u5177\u7c7b\u4e3a\uff1a com.ciicgat.grus.json.JSON \u5927\u5bb6\u5728\u8fc1\u79fb\u65f6\uff0c\u9700\u8981\u91cd\u70b9\u6ce8\u610f date \u7c7b\u578b\u7684\u5904\u7406 \u5c3d\u91cf\u4f7f\u7528 class \u6765\u505a\u6620\u5c04\uff0c\u5b83\u80fd\u6ee1\u8db3 90%\u4ee5\u4e0a\u7684\u573a\u666f\uff0c\u4e0d\u8981\u4f7f\u7528 JsonNode\u3002\u5982\u679c\u8981\u7528 JsonNode\uff0c\u8bf7\u628a\u6587\u6863\u548c\u5355\u5143\u6d4b\u8bd5\u5f7b\u5e95\u7406\u89e3\u901a\u900f\u540e\u518d\u7528\u3002","title":"JSON \u4f7f\u7528\u8bf4\u660e"},{"location":"grus/others/grus-json/#json_1","text":"/** * \u5c06\u5bf9\u8c61\u8f93\u51fa\u4e3ajson\u5b57\u7b26\u4e32 * * @param object * @return */ public static String toJSONString ( Object object ) { try { return OBJECT_MAPPER . writeValueAsString ( object ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a User user = new User ( 1 , \"a\" , new Date ()); String s = JSON . toJSONString ( user ); System . out . println ( s ); //\u901a\u7528\u573a\u666f\uff0c\u4f7f\u7528map\u6216\u8005list Map < String , Object > jsonObject = new LinkedHashMap <> (); jsonObject . put ( \"code\" , 0 ); jsonObject . put ( \"msg\" , \"OK\" ); jsonObject . put ( \"data\" , true ); System . out . println ( JSON . toJSONString ( jsonObject ));","title":"\u5c06\u5bf9\u8c61\u8f93\u51fa\u4e3a JSON \u5b57\u7b26\u4e32"},{"location":"grus/others/grus-json/#_1","text":"/** * \u89e3\u6790\u4e3a\u6307\u5b9a\u7c7b * * @param text * @param clazz * @param <T> * @return */ public static < T > T parse ( String text , Class < T > clazz ) { try { return OBJECT_MAPPER . readValue ( text , clazz ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u793a\u4f8b\uff1a User u1 = JSON . parse ( s , User . class );","title":"\u89e3\u6790\u4e3a\u6307\u5b9a\u7684\u7c7b"},{"location":"grus/others/grus-json/#_2","text":"\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u9047\u5230\u6cdb\u578b\u5d4c\u5957\u65f6\uff08\u6bd4\u5982\u8bf4 List\u3001Map\uff09\uff0c\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u65b9\u6cd5\uff1a /** * \u7528\u4e8e\u5904\u7406\u5e26\u6cdb\u578b\u5d4c\u5957\u7684\u7c7b * * @param text * @param typeReference * @param <T> * @return */ public static < T > T parse ( String text , TypeReference < T > typeReference ) { try { return OBJECT_MAPPER . readValue ( text , typeReference ); } catch ( Throwable e ) { throw new JSONException ( e ); } } \u4f7f\u7528\u793a\u4f8b\uff1a List < User > users = new ArrayList <> (); users . add ( new User ( 1 , \"a\" )); users . add ( new User ( 2 , \"b\" )); String s = JSON . toJSONString ( users ); System . out . println ( s ); List < User > list = JSON . parse ( s , new com . fasterxml . jackson . core . type . TypeReference <> () { }); Assert . assertEquals ( users , list );","title":"\u5904\u7406\u6cdb\u578b"},{"location":"grus/others/grus-json/#jsonnode","text":"\u6709\u65f6\uff0c\u5927\u5bb6\u4e0d\u60f3\u5199\u6216\u8005\u65e0\u6cd5\u5199\u4e00\u4e2a\u7c7b\u4e0e json \u505a\u6620\u5c04\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 JsonNode /** * \u89e3\u6790\u4e3a\u901a\u7528\u7684\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u7528\u548c\u5bf9\u8c61\u505a\u6620\u5c04 * * @param text * @return */ public static JsonNode parse ( String text ) { try { return OBJECT_MAPPER . readTree ( text ); } catch ( Throwable e ) { throw new JSONException ( e ); } } JsonNode \u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\uff1a User user = new User ( 1 , \"a\" , new Date ()); String s = JSON . toJSONString ( user ); JsonNode jsonNode = JSON . parse ( s ); Assert . assertTrue ( jsonNode . isObject ()); Assert . assertNotNull ( jsonNode . get ( \"id\" )); //\u53d6id\u8282\u70b9 Assert . assertNull ( jsonNode . get ( \"id1\" )); //\u4e0d\u5b58\u5728id1\u8282\u70b9\uff0c\u6240\u4ee5\u8fd4\u56de\u4e3anull Assert . assertEquals ( jsonNode . get ( \"id\" ). asInt (), 1 ); //\u53d6id\u7684\u503c Assert . assertEquals ( jsonNode . get ( \"name\" ). asText (), \"a\" ); //\u53d6name\u7684\u503c \u904d\u5386 JsonNode Iterator < Map . Entry < String , JsonNode >> fields = jsonNode . fields (); for ( Iterator < Map . Entry < String , JsonNode >> it = fields ; it . hasNext (); ) { Map . Entry < String , JsonNode > entry = it . next (); System . out . println ( entry . getKey ()); System . out . println ( entry . getValue ()); } \u5f53 JsonNode \u662f\u6570\u7ec4\u65f6\uff1a List < User > users = new ArrayList <> (); users . add ( new User ( 1 , \"a\" )); users . add ( new User ( 2 , \"b\" )); String s = JSON . toJSONString ( users ); JsonNode jsonNode = JSON . parse ( s ); Assert . assertTrue ( jsonNode . isArray ()); //\u901a\u8fc7\u8fed\u4ee3\u5668\u904d\u5386 for ( Iterator < JsonNode > it = jsonNode . iterator (); it . hasNext (); ) { JsonNode node = it . next (); JsonNode idJsonNode = node . get ( \"id\" ); JsonNode nameJsonNode = node . get ( \"name\" ); Assert . assertTrue ( idJsonNode . isInt ()); Assert . assertTrue ( nameJsonNode . isTextual ()); } //\u901a\u8fc7index\u904d\u5386 for ( int i = 0 ; i < jsonNode . size (); i ++ ) { JsonNode node = jsonNode . get ( i ); JsonNode idJsonNode = node . get ( \"id\" ); JsonNode nameJsonNode = node . get ( \"name\" ); Assert . assertTrue ( idJsonNode . isInt ()); Assert . assertTrue ( nameJsonNode . isTextual ()); }","title":"\u8f6c\u5316\u4e3a\u6811\u7ed3\u6784 JsonNode"},{"location":"grus/others/grus-json/#jsonnode_1","text":"JsonNode \u672c\u8eab\u53ef\u80fd\u4e3a null\uff0c\u8fd8\u53ef\u80fd\u4e3a NullNode\u3002\u4e0b\u9762\u6f14\u793a\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a String s = \"{\\\"1\\\":123,\\\"2\\\":null}\" ; JsonNode jsonNode = JSON . parse ( s ); //1\u8282\u70b9\u5b58\u5728 Assert . assertNotNull ( jsonNode . get ( \"1\" )); Assert . assertFalse ( jsonNode . get ( \"1\" ). isNull ()); //2\u8282\u70b9\u5b58\u5728\uff0c\u4f46\u662f\u503c\u4e3anull\uff0c\u5bf9\u5e94jsonnode\u7c7b\u578b\u4e3aNullNode\uff0c\u5b83\u4e0d\u662fnull Assert . assertNotNull ( jsonNode . get ( \"2\" )); Assert . assertNotNull ( jsonNode . get ( \"2\" ). isNull ()); Assert . assertTrue ( jsonNode . get ( \"2\" ) == NullNode . getInstance ()); Assert . assertEquals ( jsonNode . get ( \"2\" ). asText (), \"null\" ); //\u4e0d\u5b58\u5728\u76843\u8282\u70b9\u4e3anull Assert . assertNull ( jsonNode . get ( \"3\" )); \u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528 JSON.of \u65b9\u6cd5\uff0c\u5904\u7406 null \u6216\u8005 NullNode \u7684\u60c5\u51b5\uff0c\u907f\u514d\u5f88\u591a if \u5224\u65ad\uff1a /** * \u65b9\u4fbf\u5904\u7406jsonNode\u4e3aNullNode\u60c5\u51b5 * * @param jsonNode * @return */ public static Optional < JsonNode > of ( JsonNode jsonNode ) { if ( jsonNode == null || jsonNode . isNull ()) { return Optional . empty (); } return Optional . of ( jsonNode ); } \u4e0b\u9762\u6f14\u793a JSON.of \u65b9\u6cd5\u7684\u4f7f\u7528\uff1a int v1 = JSON . of ( jsonNode . get ( \"1\" )). map ( JsonNode :: asInt ). orElse ( 0 ); Assert . assertEquals ( 123 , v1 ); String v2 = JSON . of ( jsonNode . get ( \"2\" )). map ( JsonNode :: asText ). orElse ( \"defaultValue\" ); Assert . assertEquals ( \"defaultValue\" , v2 );","title":"JsonNode \u4e3a\u7a7a\u65f6\u5904\u7406"},{"location":"grus/others/grus-json/#jsonnode-java","text":"\u5f88\u591a\u65f6\u5019\uff0c\u5927\u5bb6\u5728\u83b7\u53d6\u4e00\u4e2a jsonNode \u7684\u5b50 jsonNode \u4e4b\u540e\uff0c\u53ef\u80fd\u6709\u9700\u6c42\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u8c61\u3002 \u53ef\u4ee5\u4f7f\u7528 toJavaObject \u5904\u7406\uff1a /** * \u7528\u4e8e\u5c06jsonNode\u8f6c\u6362\u4e3ajava\u5bf9\u8c61 * * @param jsonNode * @param tClass * @param <T> * @return */ public static < T > T toJavaObject ( JsonNode jsonNode , Class < T > tClass ) { try { JsonParser jsonParser = OBJECT_MAPPER . treeAsTokens ( jsonNode ); return OBJECT_MAPPER . readValue ( jsonParser , tClass ); } catch ( Throwable e ) { throw new JSONException ( e ); } } /** * \u7528\u4e8e\u5c06jsonNode\u8f6c\u6362\u4e3ajava\u5bf9\u8c61 * * @param jsonNode * @param typeReference * @param <T> * @return */ public static < T > T toJavaObject ( JsonNode jsonNode , TypeReference < T > typeReference ) { try { JsonParser jsonParser = OBJECT_MAPPER . treeAsTokens ( jsonNode ); return OBJECT_MAPPER . readValue ( jsonParser , typeReference ); } catch ( Throwable e ) { throw new JSONException ( e ); } }","title":"JsonNode \u8f6c\u5316\u4e3a Java \u5bf9\u8c61"},{"location":"grus/redis/","text":"redis \u6a21\u5757 \u00b6 \u76ee\u524d\uff0c\u9488\u5bf9 redis \u6a21\u5757\uff0c\u6211\u4eec\u7edf\u4e00\u5c01\u88c5\u4e86 grus-boot-starter-redis \uff0c\u89c4\u8303\u5927\u5bb6\u5bf9 redis \u7684\u4f7f\u7528\u3002 grus-boot-starter-server-web \uff0c grus-boot-starter-server-service \u7b49 starter \u4e0d\u518d\u9ed8\u8ba4\u5305\u542b grus-boot-starter-redis \uff0c\u5927\u5bb6\u5982\u679c\u60f3\u4f7f\u7528 redis \u76f8\u5173\u529f\u80fd\uff0c\u8bf7\u5bfc\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a <dependency> <artifactId>grus-boot-starter-redis</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u6b64 starter \u81ea\u52a8\u5305\u542b spring-boot-starter-data-redis \u4f9d\u8d56\uff0c\u4f7f\u7528\u65f6\u9700**\u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e**\u5e94\u7528\u5bf9\u5e94\u7684 redis-config.json \u3002 \u89c4\u8303\u8bf4\u660e \u00b6 \u9274\u4e8e\u8fc7\u53bb redis \u7684\u914d\u7f6e\u90fd\u7531\u5f00\u53d1\u624b\u52a8\u914d\u7f6e\uff0c\u4e0d\u5229\u4e8e\u540e\u671f\u7684\u7ef4\u62a4\u548c\u7ba1\u7406\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u5728\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u518d\u7531\u5f00\u53d1\u624b\u52a8\u914d\u7f6e\uff0c\u7edf\u4e00\u4ea4\u7531\u8fd0\u7ef4\u914d\u7f6e\u3002 \u6211\u4eec\u79fb\u9664\u4e86 com.ciicgat.sdk.redis.RedisConfig \u7c7b\uff0c\u907f\u514d\u5927\u5bb6\u9879\u76ee\u4e2d\u518d\u6709\u5982\u4e0b\u521d\u59cb\u5316 RedisExecutor \u7684\u65b9\u5f0f\uff0c\u8bf7\u4f7f\u7528 grus-boot-starter-redis \u81ea\u52a8\u6ce8\u5165\u7684 redisExecutor \u66ff\u4ee3\u3002 @Bean public RedisExecutor redisExecutor(){ ConfigCollection configCollection = RemoteConfigCollectionFactoryBuilder.getInstance().getConfigCollection(\"xxx\"); RedisConfig redisConfig = configCollection.getBean(\"redis.properties\", RedisConfig.class); return redisConfig.newRedisExecutor(); } \u4e00\u5b9a\u8981\u6ce8\u610f \uff1a\u5982\u679c\u9879\u76ee\u56e0 RedisConfig \u7f3a\u5931\u800c\u62a5\u9519\uff0c\u8bf7\u53ca\u65f6\u6309\u7167\u4e0b\u9762\u7684\u6587\u6863\u4fee\u6539\u3002 redis \u7edf\u4e00\u914d\u7f6e \u00b6 \u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684 datasource.json \uff0c\u6211\u4eec redis \u4e5f\u6709\u7edf\u4e00\u7684 redis-config.json \u3002\u5b83\u7684** \u914d\u7f6e\u683c\u5f0f\u8bf4\u660e\u89c1\u6b64\u5904 \u3002** \u652f\u6301**redis \u5355\u673a**\u548c**sentinel**\u6a21\u5f0f\u7684\uff0c\u5c4f\u853d\u4e86\u5e95\u5c42\u7ec6\u8282\u3002\u53ea\u9700\u8981\u8fd0\u7ef4\u914d\u7f6e\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\u3002 \u5e94\u7528\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u65f6\uff1a \u5f15\u5165\u4e86 grus-boot-starter-redis \u7684 GAV\uff1b gconf \u914d\u7f6e\u4e2d\u5b58\u5728 redis-config.json \uff1b \u90a3\u4e48\u4f1a\u81ea\u52a8\u52a0\u8f7d GrusRedisAutoConfiguration \u3002 @Configuration ( proxyBeanMethods = false ) @ConditionalOnClass ({ RedisOperations . class , RedisClient . class , RedisSetting . class }) @AutoConfigureBefore ( RedisAutoConfiguration . class ) public class GrusRedisAutoConfiguration { private static final Logger LOGGER = LoggerFactory . getLogger ( GrusRedisAutoConfiguration . class ); public static final String DEFAULT_REDIS_CONFIG_KEY = \"redis-config.json\" ; @AppName private String appName ; @Bean ( name = \"redisSetting\" ) @ConditionalOnMissingBean ( name = \"redisSetting\" ) public RedisSetting redisSetting () { return RemoteConfigCollectionFactoryBuilder . getInstance (). getConfigCollection ( appName ). getBean ( DEFAULT_REDIS_CONFIG_KEY , RedisSetting . class ); } @Bean @ConditionalOnBean ( RedisSetting . class ) @ConditionalOnClass ( Jedis . class ) @ConditionalOnMissingBean ( name = \"redisExecutor\" ) public RedisExecutor redisExecutor ( @Qualifier ( \"redisSetting\" ) RedisSetting redisSetting ) { return redisSetting . newRedisExecutor (); } @Bean @ConditionalOnBean ( RedisSetting . class ) @ConditionalOnClass ({ RedisOperations . class , RedisConnectionFactory . class }) @ConditionalOnMissingBean ( name = \"redisConnectionFactory\" ) public RedisConnectionFactory redisConnectionFactory ( @Qualifier ( \"redisSetting\" ) RedisSetting redisSetting ) { return SpringRedisConfCreator . newRedisConnectionFactory ( redisSetting ); } /** * \u521d\u59cb\u5316\u81ea\u5b9a\u4e49 redisService \u65f6\u9700\u8981 * * @param redisConnectionFactory redisConnectionFactory * @return StringRedisTemplate */ @Bean @ConditionalOnMissingBean @ConditionalOnBean ( RedisConnectionFactory . class ) public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) { checkRedisConnection ( redisConnectionFactory ); StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } @Bean @ConditionalOnMissingBean @ConditionalOnBean ( StringRedisTemplate . class ) public RedisService redisService ( StringRedisTemplate stringRedisTemplate ) { return new RedisService ( stringRedisTemplate ); } /** * \u9879\u76ee\u542f\u52a8\u524d\uff0c\u6821\u9a8c\u4e0b redis \u8fde\u63a5\u662f\u5426\u6210\u529f\uff0c\u5931\u8d25\u5219\u9879\u76ee\u542f\u52a8\u5931\u8d25 * * @param redisConnectionFactory redisConnectionFactory */ private void checkRedisConnection ( RedisConnectionFactory redisConnectionFactory ) { RedisConnection redisConnection = null ; try { redisConnection = redisConnectionFactory . getConnection (); redisConnection . ping (); LOGGER . info ( \"GAT Redis connect is normal\" ); } catch ( RuntimeException e ) { LOGGER . error ( \"GAT Redis connect error, please check redis-config.json in gconf or call operations\" , e ); throw e ; } finally { if ( redisConnection != null ) { redisConnection . close (); } } } } \u4e00\u5207\u90fd\u5e2e\u4f60\u81ea\u52a8\u52a0\u8f7d\u597d\u4e86\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528 redis \u76f8\u5173\u7684\u7c7b\u3002 \u4f7f\u7528\u65b9\u5f0f \u00b6 \u4f7f\u7528\u6846\u67b6\u65f6\uff0credis \u5e38\u7528\u64cd\u4f5c\u7c7b\u5df2\u7ecf\u6ce8\u5165\uff0c\u5982: StringRedisTemplate\u3001RedisTemplate \u7b49\u7b49\uff08spring-data-redis \u4e2d\u7684\u7c7b\uff0c\u4f7f\u7528 lettuce\uff09\uff1b RedisExecutor\uff08\u539f\u5148\u6211\u4eec\u5e38\u7528\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528 jedis\uff09\uff1b RedisService\uff08\u7b80\u5355\u7684\u5c01\u88c5\uff0c\u4f7f\u7528 lettuce\uff09\u3002 Demo\uff1a @Slf4j @RestController @RequestMapping public class TestController { @Resource private RedisExecutor redisExecutor ; @Resource private RedisService redisService ; @Resource private StringRedisTemplate stringRedisTemplate ; @GetMapping ( \"/foo\" ) public String foo () { String test = redisExecutor . execute ( jedis -> jedis . get ( \"test-1\" )); return test ; } } \u7279\u522b\u8bf4\u660e \u00b6 \u5f15\u5165\u4e86 grus-boot-starter-redis \uff0c\u5982\u679c\u4e0d\u914d\u7f6e redis-config.json \uff0c\u9879\u76ee\u542f\u52a8\u4f1a\u62a5\u9519\uff1b \u9879\u76ee\u542f\u52a8\u65f6\u4f1a\u7b80\u5355\u6821\u9a8c\u4e0b redis \u7684\u53ef\u7528\u6027\uff0c\u5982\u679c redis \u5f02\u5e38\uff0c\u9879\u76ee\u542f\u52a8\u4f1a\u62a5\u9519\uff0c\u8bf7\u53ca\u65f6\u5904\u7406\uff1b \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5df1\u521d\u59cb\u5316\u7684 RedisConnectionFactory \uff0c\u6240\u4ee5 spring \u9ed8\u8ba4\u7684\u914d\u7f6e\uff08\u5982\u4e0b\uff09\u4e00\u822c\u4e0d\u4f1a\u751f\u6548\u3002 spring.redis.host = redis.servers.dev.ofc spring.redis.port = 6379 spring.redis.database = 15 spring.redis.lettuce.pool.max-active = 30 \u591a\u4e2a redis \u00b6 \u67d0\u4e9b\u9879\u76ee\u56e0\u4e3a\u5386\u53f2\u539f\u56e0\uff0c\u94fe\u63a5\u4e86\u591a\u4e2a redis\u3002\u6846\u67b6\u4e5f\u652f\u6301\u4f7f\u7528\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a \u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e\u591a\u4e2a redis-config.json \u6587\u4ef6\uff0c\u4e00\u822c\u4e3b\u8981\u4f7f\u7528\u7684\u662f redis-config.json\uff0c\u53e6\u5916\u7684\u53eb redis-config-xxx.json\uff1b \u94fe\u63a5\u4e3b redis \u7684\u4f7f\u7528\u65b9\u5f0f\u4e0d\u53d8\uff0credisExecutor\u3001stringRedisTemplate \u4e4b\u7c7b\u7684\u7167\u5e38\u4f7f\u7528\uff1b \u94fe\u63a5\u7b2c\u4e8c\u4e2a redis \u7684\u65b9\u5f0f\uff0c\u4e8b\u4f8b\u5982\u4e0b\uff08\u63a8\u8350\u7b2c\u4e8c\u4e2a redis \u53ea\u7528 redisExecutor \u4f7f\u7528\uff0c\u4e0d\u8981\u4f7f\u7528 stringRedisTemplate\uff0c\u7406\u7531\u89c1\u4e0b\u6587\uff09\uff1a @Configuration public class RedisConfigure { /** * \u540d\u5b57\u4e00\u5b9a\u4e0d\u80fd\u53eb redisSetting\uff0c\u4e0e\u9ed8\u8ba4\u7684\u533a\u5206 */ @Bean public RedisSetting phpRedisSetting () { return RemoteConfigCollectionFactoryBuilder . getInstance (). getConfigCollection ( \"payment\" ). getBean ( \"redis-config-php.json\" , RedisSetting . class ); } /** * \u540d\u5b57\u4e00\u5b9a\u4e0d\u80fd\u53eb redisExecutor\uff0c\u4e0e\u9ed8\u8ba4\u7684\u533a\u5206 */ @Bean public RedisExecutor phpRedisExecutor ( RedisSetting phpRedisSetting ) { return phpRedisSetting . newRedisExecutor (); } } \u4f7f\u7528\u65b9\u5f0f\uff08\u4e00\u5b9a\u8981\u6ce8\u660e bean name \uff09 @Slf4j @RestController @RequestMapping public class TestController { /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis */ @Resource private RedisExecutor redisExecutor ; /** * \u94fe\u63a5 redis-config-php.json \u914d\u7f6e\u7684 redis <br/> * \u5982\u679c\u4f7f\u7528 @Autowire\uff0c\u8bf7\u914d\u5408 @Qualifier \u4e00\u8d77\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a<br/> * @Autowire * @Qualifier(\"phpRedisExecutor\") * private RedisExecutor phpRedisExecutor; */ @Resource private RedisExecutor phpRedisExecutor ; /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis\uff0c\u4e0d\u4f1a\u94fe\u63a5 redis-config-php.json\uff0c\u8bf7\u6ce8\u610f */ @Resource private StringRedisTemplate stringRedisTemplate ; /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis\uff0c\u4e0d\u4f1a\u94fe\u63a5 redis-config-php.json\uff0c\u8bf7\u6ce8\u610f */ @Resource private RedisService RedisService ; @GetMapping ( \"/foo\" ) public String foo () { String test = redisExecutor . execute ( jedis -> jedis . get ( \"test-1\" )); return test ; } } \u5907\u6ce8\uff1a redisExecutor \u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684 jedis \u7684\u8fde\u63a5\u6c60\uff0c\u5e95\u5c42\u7684\u521d\u59cb\u5316\u5e76\u6ca1\u6709\u4f9d\u8d56 spring \u7684 redisConnectionFactory\uff0c\u53ea\u662f\u6700\u540e\u5c06\u5176\u4ea4\u7ed9\u4e86 spring \u7ba1\u7406\u3002\u6240\u4ee5\u6309\u524d\u6587\u521d\u59cb\u5316\u5373\u53ef\u4f7f\u7528\u3002 \u5982\u679c stringRedisTemplate \u6216 redisService\uff0c\u4e5f\u60f3\u652f\u6301\u7b2c\u4e8c\u4e2a redis\uff0c\u4f8b\u5982\uff1aphpRedisService\uff0c\u9700\u8981\u540c\u65f6\u521d\u59cb\u5316\u591a\u4e2a redisConnectionFactory\uff0c\u521d\u59cb\u5316\u591a\u4e2a stringRedisTemplate\uff0c\u914d\u7f6e\u4e0d\u540c\u7684 connection\uff0c\u521d\u59cb\u5316\u591a\u4e2a redisService\uff0c\u914d\u7f6e\u4e0d\u540c\u7684 stringRedisTemplate\u3002\u6574\u4f53**\u6bd4\u8f83\u9ebb\u70e6**\u3002 \u5982\u679c\u4f7f\u7528\uff0c\u8bf7\u4fdd\u8bc1\u521d\u59cb\u5316\u6b63\u786e\uff0c\u907f\u514d\u5ba2\u6237\u7aef\u8fde\u63a5\u9519\u4e86 redis\u3002 RedisTemplate \u4e0e Serializer \u00b6 Springboot \u4e0e redis \u7684\u4ea4\u4e92\u662f\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8fdb\u884c\uff08byte[]\uff09\u3002\u4e3a\u4e86\u652f\u6301 Java \u4e2d\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u8981\u5bf9\u64cd\u4f5c\u7684\u5bf9\u8c61\uff08key\uff0cvalue\uff0chashKey\uff0chashValue...\uff09\u505a\u5e8f\u5217\u5316\u64cd\u4f5c\u3002 redisTemplate \u53ea\u4e3a key value hashKey hashValue \u8bbe\u7f6e serializer \u5e8f\u5217\u5316\u65b9\u6cd5 \u00b6 Springboot \u9ed8\u8ba4\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\uff1a JdkSerializationRedisSerializer\uff08\u9ed8\u8ba4\uff09 StringRedisSerializer Jackson2JsonRedisSerializer GenericJackson2JsonRedisSerializer ...... grus \u9488\u5bf9\u4e00\u4e9b\u5927 key\uff0cvalue\uff0c\u989d\u5916\u63d0\u4f9b\u4e86 GzipRedisSerializer \u6765\u4f7f\u7528\uff0c\u5b58\u50a8\u538b\u7f29\u8fc7\u540e\u7684 key \u548c value\u3002 \u9ed8\u8ba4 Serializer \u00b6 RedisTemplate \u9ed8\u8ba4\u4f7f\u7528 JdkSerializationRedisSerializer \u6765\u8fdb\u884c\uff0c\u652f\u6301\u4efb\u610f\u7c7b\u578b\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e9b\u95ee\u9898\uff1a \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\u4f1a\u5bfc\u81f4 redis \u4e2d\u4fdd\u5b58\u7684 key \u548c value \u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u51fa\u73b0\u4e00\u4e9b\u4e0d\u53ef\u8bfb\u7684 16 \u8fdb\u5236\u5b57\u7b26\u3002\u4f8b\u5982\uff1a \\xAC\\xED\\00\\0x5t\\x00 \u5bf9\u8c61\u9700\u8981\u5b9e\u73b0 java \u7684\u5e8f\u5217\u5316\u63a5\u53e3\uff0c\u5e76\u4e14\u5bf9\u8c61\u6700\u597d\u8bbe\u7f6e serialVersionUID \u4e3a\u6307\u5b9a\u503c\uff08\u4e00\u822c\u4e3a 1L\uff09\uff0c\u4e0d\u7136\u5bf9\u8c61\u65b0\u589e\u6216\u8005\u5220\u9664\u5b57\u6bb5\u540e\uff0c\u5e8f\u5217\u5316\u4f1a\u51fa\u95ee\u9898\u3002 \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316 \u00b6 \u5982\u679c\u5e0c\u671b\u91c7\u7528\u522b\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4f8b\u5982\uff1a Jackson2JsonRedisSerializer \uff0c\u5728 Configuration \u4ee3\u7801\u521d\u59cb\u5316 bean\uff1a @Bean RedisTemplate redisTemplate(RedisConnectionFactory redisConnectionFactory) { RedisTemplate redisTemplate = new RedisTemplate(); redisTemplate.setConnectionFactory(redisConnectionFactory); // \u4f7f\u7528Jackson2JsonRedisSerialize \u66ff\u6362\u9ed8\u8ba4\u5e8f\u5217\u5316(\u9ed8\u8ba4\u91c7\u7528\u7684\u662fJDK\u5e8f\u5217\u5316) Jackson2JsonRedisSerializer<Object> jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer<>(Object.class); ObjectMapper objectMapper = new ObjectMapper(); objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL); objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(objectMapper); redisTemplate.setKeySerializer(new StringRedisSerializer()); redisTemplate.setHashKeySerializer(new StringRedisSerializer()); redisTemplate.setValueSerializer(jackson2JsonRedisSerializer); redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer); return redisTemplate; } redis spring cache \u00b6 spring \u9ed8\u8ba4\u5b9e\u73b0 \u4f7f\u7528 grus-boot-starter-redis \u3002 \u53ea\u9700\u8981\u989d\u5916\u505a\u4ee5\u4e0b\u914d\u7f6e\u5373\u53ef\uff1a cache \u6a21\u5757\u4f9d\u8d56 starter-data-redis \u6a21\u5757\u3002\u5b9e\u73b0\u5927\u5bb6\u53ef\u4ee5\u770b\u7c7b org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration \u548c org.springframework.data.redis.cache.RedisCacheManager \u3002 \u53e6\u5916\uff0c \u9700\u8981\u5728\u542f\u52a8\u7c7b\u4e0a\u52a0\u4e0a @EnableCaching \u6ce8\u89e3 \u4f7f\u7528 spring \u9ed8\u8ba4\u5b9e\u73b0\uff0c \u4f1a\u5b58\u5728\u4e00\u4e9b\u95ee\u9898 \uff1a \u5982\u679c\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6216\u8005\u83b7\u53d6\u6570\u636e\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\u8fd4\u56de\uff0c\u4e0d\u5b58\u5728 fallback\u3002 \u6ca1\u6709\u63a5\u5165\u6211\u4eec\u7684\u6570\u636e\u6e90 grus \u5b9e\u73b0 \u9488\u5bf9\u9ed8\u8ba4\u5b9e\u73b0\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6709\u81ea\u5df1\u7684\u4e00\u5957\u6539\u8fdb\u5b9e\u73b0\uff1a com.ciicgat.sdk.springcache.RedisCacheManager \uff0c\u5bf9\u5e94\u7684 autoconfig \u4e3a: GrusRedisSpringCacheAutoConfiguration \u3002 grus \u5b9e\u73b0\u4f1a\u5728 redis \u8fde\u63a5\u51fa\u73b0\u95ee\u9898\u6216\u8005\u6570\u636e\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u65f6\uff0c\u8d70\u539f\u59cb\u7684\u6570\u636e\u83b7\u53d6\u6e20\u9053\uff08\u5982\u964d\u7ea7\u4e3a\u8bfb mysql \u91cc\u7684\u6570\u636e\uff09 \u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\uff1a @Bean public RedisCacheConfig redisCacheConfig(RedisSetting redisSetting) { RedisCacheConfig redisCacheConfig = new RedisCacheConfig(); redisCacheConfig.setPrefix(\"U_\"); redisCacheConfig.setSerializer(RedisSerializer.java()); redisCacheConfig.setExpirePolicy(name -> 0); redisCacheConfig.setRedisSetting(redisSetting); return redisCacheConfig; } \u6ce8\u610f\uff1a\u4f9d\u7136\u9700\u8981\u5f15\u5165 spring-boot-starter-data-redis \u5305\uff0c\u4f9d\u7136\u9700\u8981\u5728\u542f\u52a8\u7c7b\u4e0a\u52a0\u4e0a @EnableCaching \u6ce8\u89e3 grus \u4e8c\u7ea7\u7f13\u5b58\u5b9e\u73b0 \u4e8c\u7ea7\u7f13\u5b58\u5b9e\u73b0\uff0c\u7b2c\u4e00\u7ea7\u672c\u5730\u7f13\u5b58\uff0c\u4f7f\u7528\u7684\u662f\u73b0\u5728\u4e3b\u6d41\u7684\u9ad8\u6027\u80fd\u7f13\u5b58\u5e93 Caffeine \uff0c grus-core \u4e2d\u9ed8\u8ba4\u4f9d\u8d56\u4e86 caffeine \uff0c\u57fa\u4e8e grus \u6846\u67b6\u5f00\u53d1\u7684\u9879\u76ee\u53ef\u4ee5\u968f\u610f\u4f7f\u7528 caffeine \uff0c\u4e5f\u53ef\u4ee5\u5bf9\u6bd4\u4e0b guava cache \uff0c\u4f7f\u7528\u8fc7 guava cache \u7684\u5f88\u5bb9\u6613\u4e0a\u624b caffeine \uff0c\u8bed\u6cd5\u57fa\u672c\u4e00\u6837\uff1b \u7b2c\u4e8c\u7ea7\u8fd8\u662f redis \u7f13\u5b58\u3002 \u4e8c\u7ea7\u7f13\u5b58\u7248\u672c\u4f9d\u8d56 grus \u7248\u672c 2021.1.0 \u3002 \u4f7f\u7528\u5728\u539f\u6709 RedisCacheConfig \u589e\u52a0\u672c\u5730\u7f13\u5b58\u914d\u7f6e\uff1a redisCacheConfig.getLocalCacheConfig().setEnable(true).setGlobalEvict(true); LocalCacheConfig \u672c\u5730\u7f13\u5b58\u914d\u7f6e\u8be6\u7ec6\u8bf4\u660e\uff1a enable \uff1a\u662f\u5426\u542f\u7528\u672c\u5730\u5185\u5b58\u7f13\u5b58\uff0c\u6240\u6709\u5176\u4ed6\u7684\u914d\u7f6e\u751f\u6548\u7684\u524d\u63d0\u90fd\u662f enable=true\uff1b globalEvict \uff1a\u662f\u5426\u542f\u7528\u5176\u5168\u5c40\u5220\u9664\u673a\u5236\uff08\u76ee\u524d\u5b9e\u73b0\u4f9d\u8d56\u4e8e redis \u7684 pub/sub \u673a\u5236\uff09\uff1b\u89e6\u53d1\u6761\u4ef6\uff1a\u4f7f\u7528\u6ce8\u89e3 @CacheEvit \u6216\u8005\u76f4\u63a5\u8c03\u7528 RedisCache or L2Cache \u7684 evict() \u65b9\u6cd5\uff1b channel \uff1aglobalEvict=true \u65f6\uff0c\u7528\u4e8e\u8ba2\u9605\u5220\u9664 key \u7684\u901a\u9053\u540d\uff0c\u5982\u679c\u4e0d\u586b\u5199\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5e94\u7528\u540d\uff1b serialize \uff1a\u662f\u5426\u5e8f\u5217\u5316 value\uff0c\u5982\u679c\u4e3a\u5426\uff0c\u90a3\u4e48\u7f13\u5b58\u7684 value \u4e3a\u5bf9\u8c61\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u7f13\u5b58\u7684 value \u4e3a\u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u7684\u5b57\u8282\u6570\u7ec4\uff1b\u4e0d\u4f7f\u7528\u5e8f\u5217\u5316\u6027\u80fd\u66f4\u52a0\u9ad8\u3002\u4f46\u662f\u9700\u8981\u4fdd\u8bc1\u8fd4\u56de\u7684\u503c\uff0c\u4e0d\u80fd\u505a\u4fee\u6539\u3002 maximumSize \uff1a\u672c\u5730\u7f13\u5b58\u6700\u5927\u503c\uff0c\u9ed8\u8ba4 102400\u3002 \u6ce8\u610f\uff1a\u672c\u5730\u5185\u5b58\u8fd8\u662f\u5c3d\u91cf\u8981\u8fc7\u671f\uff0c\u4e3b\u8981\u76ee\u7684\u4e3a\u4e86\u5feb\u901f\u5237\u65b0\u7f13\u5b58\uff0c\u6240\u4ee5\u672c\u5730\u7f13\u5b58\u9650\u5236\u4e86\u6700\u5927\u7f13\u5b58\u65f6\u95f4 3600s \u3002\u9ed8\u8ba4\u672c\u5730\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u548c redis \u4e00\u81f4\uff08\u7f13\u5b58\u65f6\u95f4<= 3600s\uff09\u3002\u867d\u7136\u672c\u5730\u7f13\u5b58\u9650\u5236\u4e86\u6700\u5927\u7f13\u5b58\u65f6\u95f4\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\uff0c redis \u7f13\u5b58\u672a\u5931\u6548\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u4e00\u76f4\u90fd\u4f1a\u91cd\u65b0\u585e\u5165\u672c\u5730\u7f13\u5b58\u3002 grus \u7f13\u5b58\u65b0\u5347\u7ea7 \u4f9d\u8d56 grus \u7248\u672c > 2021.1.2 \u3002 \u65b0\u5347\u7ea7\u7684\u7f13\u5b58\u652f\u6301\u4e09\u79cd\uff1a LocalCache \uff08\u672c\u5730\u7f13\u5b58\uff09\u3001 RedisCache \uff08Redis \u7f13\u5b58\uff09\u3001 L2Cache \uff08\u4e8c\u7ea7\u7f13\u5b58\uff09\uff1b\u4e09\u79cd\u7f13\u5b58\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\uff0c\u53ea\u9700\u8981\u6784\u5efa\u5bf9\u5e94\u7684 CacheConfig \u5373\u53ef\u3002 @Bean public RedisCacheConfig redisCacheConfig(RedisSetting redisSetting) { RedisCacheConfig redisCacheConfig = new RedisCacheConfig(); redisCacheConfig.setRedisSetting(redisSetting); redisCacheConfig.setPrefix(\"GRUS_DEMO_3_\"); redisCacheConfig.setSerializer(RedisSerializer.java()); redisCacheConfig.setUseGzip(true); redisCacheConfig.setCacheConfigFunc(name -> { switch (name) { case \"useRedisCache\": return CacheConfig.redis().setExpireSeconds(600); case \"useLocalCacheSerialize\": return CacheConfig.localRedis().setExpireSeconds(600).setLocalExpireSeconds(120).setSerialize(true); case \"useLocalCache\": return CacheConfig.local().setExpireSeconds(60); case \"useLocalCacheNoExpire\": return CacheConfig.local().setExpireSeconds(0); } return CacheConfig.localRedis(); }); return redisCacheConfig; } PS: 1\u3001\u672c\u5730\u7f13\u5b58\u652f\u6301\u957f\u671f\u6709\u6548\uff0c\u53ea\u9700\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\uff1b 2\u3001\u6bcf\u4e2a\u7f13\u5b58\u7684\u914d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u5177\u4f53\u53c2\u89c1 CacheConfig \u7684 Local \u3001 Redis \u3001 LocalRedis \u3002 3\u3001\u4e09\u79cd\u7f13\u5b58\u90fd\u662f\u57fa\u4e8e redis \u7684 pub/sub \u673a\u5236\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u6240\u4ee5\u5373\u4f7f\u53ea\u4f7f\u7528\u672c\u5730\u7f13\u5b58\uff0c\u4e5f\u9700\u8981\u914d\u7f6e redis \u3002 session \u00b6 \u5927\u5bb6\u4f7f\u7528 spring-session-data-redis <dependency> <groupId>org.springframework.session</groupId> <artifactId>spring-session-data-redis</artifactId> </dependency> \u6b64\u6a21\u5757\u540c\u6837\u4f9d\u8d56 starter-data-redis \u6a21\u5757 \u76f8\u5173\u914d\u7f6e\u5982\u4e0b\uff1a server.servlet.session.cookie.name=gsId server.servlet.session.cookie.http-only=true server.servlet.session.cookie.secure=true server.servlet.session.cookie.path=/ server.servlet.session.cookie.max-age=7200s spring.session.store-type=redis spring.session.timeout=1800s spring.session.redis.namespace=grus-demo:session //\u8fd9\u4e2a\u9700\u8981\u4fee\u6539\u6210\u5404\u81ea\u5e94\u7528\u7684\uff0c\u533a\u5206\u5f00\u6765 spring.session.redis.flush-mode=on_save \u540e\u7eed\u4f1a\u5bf9 spring-session-data-redis \u7684\u521d\u59cb\u5316\u8fdb\u4e00\u6b65\u5206\u88c5","title":"redis \u6a21\u5757"},{"location":"grus/redis/#redis","text":"\u76ee\u524d\uff0c\u9488\u5bf9 redis \u6a21\u5757\uff0c\u6211\u4eec\u7edf\u4e00\u5c01\u88c5\u4e86 grus-boot-starter-redis \uff0c\u89c4\u8303\u5927\u5bb6\u5bf9 redis \u7684\u4f7f\u7528\u3002 grus-boot-starter-server-web \uff0c grus-boot-starter-server-service \u7b49 starter \u4e0d\u518d\u9ed8\u8ba4\u5305\u542b grus-boot-starter-redis \uff0c\u5927\u5bb6\u5982\u679c\u60f3\u4f7f\u7528 redis \u76f8\u5173\u529f\u80fd\uff0c\u8bf7\u5bfc\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a <dependency> <artifactId>grus-boot-starter-redis</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u6b64 starter \u81ea\u52a8\u5305\u542b spring-boot-starter-data-redis \u4f9d\u8d56\uff0c\u4f7f\u7528\u65f6\u9700**\u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e**\u5e94\u7528\u5bf9\u5e94\u7684 redis-config.json \u3002","title":"redis \u6a21\u5757"},{"location":"grus/redis/#_1","text":"\u9274\u4e8e\u8fc7\u53bb redis \u7684\u914d\u7f6e\u90fd\u7531\u5f00\u53d1\u624b\u52a8\u914d\u7f6e\uff0c\u4e0d\u5229\u4e8e\u540e\u671f\u7684\u7ef4\u62a4\u548c\u7ba1\u7406\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u5728\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u518d\u7531\u5f00\u53d1\u624b\u52a8\u914d\u7f6e\uff0c\u7edf\u4e00\u4ea4\u7531\u8fd0\u7ef4\u914d\u7f6e\u3002 \u6211\u4eec\u79fb\u9664\u4e86 com.ciicgat.sdk.redis.RedisConfig \u7c7b\uff0c\u907f\u514d\u5927\u5bb6\u9879\u76ee\u4e2d\u518d\u6709\u5982\u4e0b\u521d\u59cb\u5316 RedisExecutor \u7684\u65b9\u5f0f\uff0c\u8bf7\u4f7f\u7528 grus-boot-starter-redis \u81ea\u52a8\u6ce8\u5165\u7684 redisExecutor \u66ff\u4ee3\u3002 @Bean public RedisExecutor redisExecutor(){ ConfigCollection configCollection = RemoteConfigCollectionFactoryBuilder.getInstance().getConfigCollection(\"xxx\"); RedisConfig redisConfig = configCollection.getBean(\"redis.properties\", RedisConfig.class); return redisConfig.newRedisExecutor(); } \u4e00\u5b9a\u8981\u6ce8\u610f \uff1a\u5982\u679c\u9879\u76ee\u56e0 RedisConfig \u7f3a\u5931\u800c\u62a5\u9519\uff0c\u8bf7\u53ca\u65f6\u6309\u7167\u4e0b\u9762\u7684\u6587\u6863\u4fee\u6539\u3002","title":"\u89c4\u8303\u8bf4\u660e"},{"location":"grus/redis/#redis_1","text":"\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684 datasource.json \uff0c\u6211\u4eec redis \u4e5f\u6709\u7edf\u4e00\u7684 redis-config.json \u3002\u5b83\u7684** \u914d\u7f6e\u683c\u5f0f\u8bf4\u660e\u89c1\u6b64\u5904 \u3002** \u652f\u6301**redis \u5355\u673a**\u548c**sentinel**\u6a21\u5f0f\u7684\uff0c\u5c4f\u853d\u4e86\u5e95\u5c42\u7ec6\u8282\u3002\u53ea\u9700\u8981\u8fd0\u7ef4\u914d\u7f6e\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\u3002 \u5e94\u7528\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u65f6\uff1a \u5f15\u5165\u4e86 grus-boot-starter-redis \u7684 GAV\uff1b gconf \u914d\u7f6e\u4e2d\u5b58\u5728 redis-config.json \uff1b \u90a3\u4e48\u4f1a\u81ea\u52a8\u52a0\u8f7d GrusRedisAutoConfiguration \u3002 @Configuration ( proxyBeanMethods = false ) @ConditionalOnClass ({ RedisOperations . class , RedisClient . class , RedisSetting . class }) @AutoConfigureBefore ( RedisAutoConfiguration . class ) public class GrusRedisAutoConfiguration { private static final Logger LOGGER = LoggerFactory . getLogger ( GrusRedisAutoConfiguration . class ); public static final String DEFAULT_REDIS_CONFIG_KEY = \"redis-config.json\" ; @AppName private String appName ; @Bean ( name = \"redisSetting\" ) @ConditionalOnMissingBean ( name = \"redisSetting\" ) public RedisSetting redisSetting () { return RemoteConfigCollectionFactoryBuilder . getInstance (). getConfigCollection ( appName ). getBean ( DEFAULT_REDIS_CONFIG_KEY , RedisSetting . class ); } @Bean @ConditionalOnBean ( RedisSetting . class ) @ConditionalOnClass ( Jedis . class ) @ConditionalOnMissingBean ( name = \"redisExecutor\" ) public RedisExecutor redisExecutor ( @Qualifier ( \"redisSetting\" ) RedisSetting redisSetting ) { return redisSetting . newRedisExecutor (); } @Bean @ConditionalOnBean ( RedisSetting . class ) @ConditionalOnClass ({ RedisOperations . class , RedisConnectionFactory . class }) @ConditionalOnMissingBean ( name = \"redisConnectionFactory\" ) public RedisConnectionFactory redisConnectionFactory ( @Qualifier ( \"redisSetting\" ) RedisSetting redisSetting ) { return SpringRedisConfCreator . newRedisConnectionFactory ( redisSetting ); } /** * \u521d\u59cb\u5316\u81ea\u5b9a\u4e49 redisService \u65f6\u9700\u8981 * * @param redisConnectionFactory redisConnectionFactory * @return StringRedisTemplate */ @Bean @ConditionalOnMissingBean @ConditionalOnBean ( RedisConnectionFactory . class ) public StringRedisTemplate stringRedisTemplate ( RedisConnectionFactory redisConnectionFactory ) { checkRedisConnection ( redisConnectionFactory ); StringRedisTemplate template = new StringRedisTemplate (); template . setConnectionFactory ( redisConnectionFactory ); return template ; } @Bean @ConditionalOnMissingBean @ConditionalOnBean ( StringRedisTemplate . class ) public RedisService redisService ( StringRedisTemplate stringRedisTemplate ) { return new RedisService ( stringRedisTemplate ); } /** * \u9879\u76ee\u542f\u52a8\u524d\uff0c\u6821\u9a8c\u4e0b redis \u8fde\u63a5\u662f\u5426\u6210\u529f\uff0c\u5931\u8d25\u5219\u9879\u76ee\u542f\u52a8\u5931\u8d25 * * @param redisConnectionFactory redisConnectionFactory */ private void checkRedisConnection ( RedisConnectionFactory redisConnectionFactory ) { RedisConnection redisConnection = null ; try { redisConnection = redisConnectionFactory . getConnection (); redisConnection . ping (); LOGGER . info ( \"GAT Redis connect is normal\" ); } catch ( RuntimeException e ) { LOGGER . error ( \"GAT Redis connect error, please check redis-config.json in gconf or call operations\" , e ); throw e ; } finally { if ( redisConnection != null ) { redisConnection . close (); } } } } \u4e00\u5207\u90fd\u5e2e\u4f60\u81ea\u52a8\u52a0\u8f7d\u597d\u4e86\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528 redis \u76f8\u5173\u7684\u7c7b\u3002","title":"redis \u7edf\u4e00\u914d\u7f6e"},{"location":"grus/redis/#_2","text":"\u4f7f\u7528\u6846\u67b6\u65f6\uff0credis \u5e38\u7528\u64cd\u4f5c\u7c7b\u5df2\u7ecf\u6ce8\u5165\uff0c\u5982: StringRedisTemplate\u3001RedisTemplate \u7b49\u7b49\uff08spring-data-redis \u4e2d\u7684\u7c7b\uff0c\u4f7f\u7528 lettuce\uff09\uff1b RedisExecutor\uff08\u539f\u5148\u6211\u4eec\u5e38\u7528\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528 jedis\uff09\uff1b RedisService\uff08\u7b80\u5355\u7684\u5c01\u88c5\uff0c\u4f7f\u7528 lettuce\uff09\u3002 Demo\uff1a @Slf4j @RestController @RequestMapping public class TestController { @Resource private RedisExecutor redisExecutor ; @Resource private RedisService redisService ; @Resource private StringRedisTemplate stringRedisTemplate ; @GetMapping ( \"/foo\" ) public String foo () { String test = redisExecutor . execute ( jedis -> jedis . get ( \"test-1\" )); return test ; } }","title":"\u4f7f\u7528\u65b9\u5f0f"},{"location":"grus/redis/#_3","text":"\u5f15\u5165\u4e86 grus-boot-starter-redis \uff0c\u5982\u679c\u4e0d\u914d\u7f6e redis-config.json \uff0c\u9879\u76ee\u542f\u52a8\u4f1a\u62a5\u9519\uff1b \u9879\u76ee\u542f\u52a8\u65f6\u4f1a\u7b80\u5355\u6821\u9a8c\u4e0b redis \u7684\u53ef\u7528\u6027\uff0c\u5982\u679c redis \u5f02\u5e38\uff0c\u9879\u76ee\u542f\u52a8\u4f1a\u62a5\u9519\uff0c\u8bf7\u53ca\u65f6\u5904\u7406\uff1b \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5df1\u521d\u59cb\u5316\u7684 RedisConnectionFactory \uff0c\u6240\u4ee5 spring \u9ed8\u8ba4\u7684\u914d\u7f6e\uff08\u5982\u4e0b\uff09\u4e00\u822c\u4e0d\u4f1a\u751f\u6548\u3002 spring.redis.host = redis.servers.dev.ofc spring.redis.port = 6379 spring.redis.database = 15 spring.redis.lettuce.pool.max-active = 30","title":"\u7279\u522b\u8bf4\u660e"},{"location":"grus/redis/#redis_2","text":"\u67d0\u4e9b\u9879\u76ee\u56e0\u4e3a\u5386\u53f2\u539f\u56e0\uff0c\u94fe\u63a5\u4e86\u591a\u4e2a redis\u3002\u6846\u67b6\u4e5f\u652f\u6301\u4f7f\u7528\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a \u8054\u7cfb\u8fd0\u7ef4\u914d\u7f6e\u591a\u4e2a redis-config.json \u6587\u4ef6\uff0c\u4e00\u822c\u4e3b\u8981\u4f7f\u7528\u7684\u662f redis-config.json\uff0c\u53e6\u5916\u7684\u53eb redis-config-xxx.json\uff1b \u94fe\u63a5\u4e3b redis \u7684\u4f7f\u7528\u65b9\u5f0f\u4e0d\u53d8\uff0credisExecutor\u3001stringRedisTemplate \u4e4b\u7c7b\u7684\u7167\u5e38\u4f7f\u7528\uff1b \u94fe\u63a5\u7b2c\u4e8c\u4e2a redis \u7684\u65b9\u5f0f\uff0c\u4e8b\u4f8b\u5982\u4e0b\uff08\u63a8\u8350\u7b2c\u4e8c\u4e2a redis \u53ea\u7528 redisExecutor \u4f7f\u7528\uff0c\u4e0d\u8981\u4f7f\u7528 stringRedisTemplate\uff0c\u7406\u7531\u89c1\u4e0b\u6587\uff09\uff1a @Configuration public class RedisConfigure { /** * \u540d\u5b57\u4e00\u5b9a\u4e0d\u80fd\u53eb redisSetting\uff0c\u4e0e\u9ed8\u8ba4\u7684\u533a\u5206 */ @Bean public RedisSetting phpRedisSetting () { return RemoteConfigCollectionFactoryBuilder . getInstance (). getConfigCollection ( \"payment\" ). getBean ( \"redis-config-php.json\" , RedisSetting . class ); } /** * \u540d\u5b57\u4e00\u5b9a\u4e0d\u80fd\u53eb redisExecutor\uff0c\u4e0e\u9ed8\u8ba4\u7684\u533a\u5206 */ @Bean public RedisExecutor phpRedisExecutor ( RedisSetting phpRedisSetting ) { return phpRedisSetting . newRedisExecutor (); } } \u4f7f\u7528\u65b9\u5f0f\uff08\u4e00\u5b9a\u8981\u6ce8\u660e bean name \uff09 @Slf4j @RestController @RequestMapping public class TestController { /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis */ @Resource private RedisExecutor redisExecutor ; /** * \u94fe\u63a5 redis-config-php.json \u914d\u7f6e\u7684 redis <br/> * \u5982\u679c\u4f7f\u7528 @Autowire\uff0c\u8bf7\u914d\u5408 @Qualifier \u4e00\u8d77\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a<br/> * @Autowire * @Qualifier(\"phpRedisExecutor\") * private RedisExecutor phpRedisExecutor; */ @Resource private RedisExecutor phpRedisExecutor ; /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis\uff0c\u4e0d\u4f1a\u94fe\u63a5 redis-config-php.json\uff0c\u8bf7\u6ce8\u610f */ @Resource private StringRedisTemplate stringRedisTemplate ; /** * \u9ed8\u8ba4\u94fe\u63a5 redis-config.json \u914d\u7f6e\u7684 redis\uff0c\u4e0d\u4f1a\u94fe\u63a5 redis-config-php.json\uff0c\u8bf7\u6ce8\u610f */ @Resource private RedisService RedisService ; @GetMapping ( \"/foo\" ) public String foo () { String test = redisExecutor . execute ( jedis -> jedis . get ( \"test-1\" )); return test ; } } \u5907\u6ce8\uff1a redisExecutor \u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684 jedis \u7684\u8fde\u63a5\u6c60\uff0c\u5e95\u5c42\u7684\u521d\u59cb\u5316\u5e76\u6ca1\u6709\u4f9d\u8d56 spring \u7684 redisConnectionFactory\uff0c\u53ea\u662f\u6700\u540e\u5c06\u5176\u4ea4\u7ed9\u4e86 spring \u7ba1\u7406\u3002\u6240\u4ee5\u6309\u524d\u6587\u521d\u59cb\u5316\u5373\u53ef\u4f7f\u7528\u3002 \u5982\u679c stringRedisTemplate \u6216 redisService\uff0c\u4e5f\u60f3\u652f\u6301\u7b2c\u4e8c\u4e2a redis\uff0c\u4f8b\u5982\uff1aphpRedisService\uff0c\u9700\u8981\u540c\u65f6\u521d\u59cb\u5316\u591a\u4e2a redisConnectionFactory\uff0c\u521d\u59cb\u5316\u591a\u4e2a stringRedisTemplate\uff0c\u914d\u7f6e\u4e0d\u540c\u7684 connection\uff0c\u521d\u59cb\u5316\u591a\u4e2a redisService\uff0c\u914d\u7f6e\u4e0d\u540c\u7684 stringRedisTemplate\u3002\u6574\u4f53**\u6bd4\u8f83\u9ebb\u70e6**\u3002 \u5982\u679c\u4f7f\u7528\uff0c\u8bf7\u4fdd\u8bc1\u521d\u59cb\u5316\u6b63\u786e\uff0c\u907f\u514d\u5ba2\u6237\u7aef\u8fde\u63a5\u9519\u4e86 redis\u3002","title":"\u591a\u4e2a redis"},{"location":"grus/redis/#redistemplate-serializer","text":"Springboot \u4e0e redis \u7684\u4ea4\u4e92\u662f\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8fdb\u884c\uff08byte[]\uff09\u3002\u4e3a\u4e86\u652f\u6301 Java \u4e2d\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u8981\u5bf9\u64cd\u4f5c\u7684\u5bf9\u8c61\uff08key\uff0cvalue\uff0chashKey\uff0chashValue...\uff09\u505a\u5e8f\u5217\u5316\u64cd\u4f5c\u3002 redisTemplate \u53ea\u4e3a key value hashKey hashValue \u8bbe\u7f6e serializer","title":"RedisTemplate \u4e0e Serializer"},{"location":"grus/redis/#_4","text":"Springboot \u9ed8\u8ba4\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\uff1a JdkSerializationRedisSerializer\uff08\u9ed8\u8ba4\uff09 StringRedisSerializer Jackson2JsonRedisSerializer GenericJackson2JsonRedisSerializer ...... grus \u9488\u5bf9\u4e00\u4e9b\u5927 key\uff0cvalue\uff0c\u989d\u5916\u63d0\u4f9b\u4e86 GzipRedisSerializer \u6765\u4f7f\u7528\uff0c\u5b58\u50a8\u538b\u7f29\u8fc7\u540e\u7684 key \u548c value\u3002","title":"\u5e8f\u5217\u5316\u65b9\u6cd5"},{"location":"grus/redis/#serializer","text":"RedisTemplate \u9ed8\u8ba4\u4f7f\u7528 JdkSerializationRedisSerializer \u6765\u8fdb\u884c\uff0c\u652f\u6301\u4efb\u610f\u7c7b\u578b\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e9b\u95ee\u9898\uff1a \u8fd9\u79cd\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\u4f1a\u5bfc\u81f4 redis \u4e2d\u4fdd\u5b58\u7684 key \u548c value \u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u51fa\u73b0\u4e00\u4e9b\u4e0d\u53ef\u8bfb\u7684 16 \u8fdb\u5236\u5b57\u7b26\u3002\u4f8b\u5982\uff1a \\xAC\\xED\\00\\0x5t\\x00 \u5bf9\u8c61\u9700\u8981\u5b9e\u73b0 java \u7684\u5e8f\u5217\u5316\u63a5\u53e3\uff0c\u5e76\u4e14\u5bf9\u8c61\u6700\u597d\u8bbe\u7f6e serialVersionUID \u4e3a\u6307\u5b9a\u503c\uff08\u4e00\u822c\u4e3a 1L\uff09\uff0c\u4e0d\u7136\u5bf9\u8c61\u65b0\u589e\u6216\u8005\u5220\u9664\u5b57\u6bb5\u540e\uff0c\u5e8f\u5217\u5316\u4f1a\u51fa\u95ee\u9898\u3002","title":"\u9ed8\u8ba4 Serializer"},{"location":"grus/redis/#_5","text":"\u5982\u679c\u5e0c\u671b\u91c7\u7528\u522b\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4f8b\u5982\uff1a Jackson2JsonRedisSerializer \uff0c\u5728 Configuration \u4ee3\u7801\u521d\u59cb\u5316 bean\uff1a @Bean RedisTemplate redisTemplate(RedisConnectionFactory redisConnectionFactory) { RedisTemplate redisTemplate = new RedisTemplate(); redisTemplate.setConnectionFactory(redisConnectionFactory); // \u4f7f\u7528Jackson2JsonRedisSerialize \u66ff\u6362\u9ed8\u8ba4\u5e8f\u5217\u5316(\u9ed8\u8ba4\u91c7\u7528\u7684\u662fJDK\u5e8f\u5217\u5316) Jackson2JsonRedisSerializer<Object> jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer<>(Object.class); ObjectMapper objectMapper = new ObjectMapper(); objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL); objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(objectMapper); redisTemplate.setKeySerializer(new StringRedisSerializer()); redisTemplate.setHashKeySerializer(new StringRedisSerializer()); redisTemplate.setValueSerializer(jackson2JsonRedisSerializer); redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer); return redisTemplate; }","title":"\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316"},{"location":"grus/redis/#redis-spring-cache","text":"spring \u9ed8\u8ba4\u5b9e\u73b0 \u4f7f\u7528 grus-boot-starter-redis \u3002 \u53ea\u9700\u8981\u989d\u5916\u505a\u4ee5\u4e0b\u914d\u7f6e\u5373\u53ef\uff1a cache \u6a21\u5757\u4f9d\u8d56 starter-data-redis \u6a21\u5757\u3002\u5b9e\u73b0\u5927\u5bb6\u53ef\u4ee5\u770b\u7c7b org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration \u548c org.springframework.data.redis.cache.RedisCacheManager \u3002 \u53e6\u5916\uff0c \u9700\u8981\u5728\u542f\u52a8\u7c7b\u4e0a\u52a0\u4e0a @EnableCaching \u6ce8\u89e3 \u4f7f\u7528 spring \u9ed8\u8ba4\u5b9e\u73b0\uff0c \u4f1a\u5b58\u5728\u4e00\u4e9b\u95ee\u9898 \uff1a \u5982\u679c\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6216\u8005\u83b7\u53d6\u6570\u636e\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\u8fd4\u56de\uff0c\u4e0d\u5b58\u5728 fallback\u3002 \u6ca1\u6709\u63a5\u5165\u6211\u4eec\u7684\u6570\u636e\u6e90 grus \u5b9e\u73b0 \u9488\u5bf9\u9ed8\u8ba4\u5b9e\u73b0\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6709\u81ea\u5df1\u7684\u4e00\u5957\u6539\u8fdb\u5b9e\u73b0\uff1a com.ciicgat.sdk.springcache.RedisCacheManager \uff0c\u5bf9\u5e94\u7684 autoconfig \u4e3a: GrusRedisSpringCacheAutoConfiguration \u3002 grus \u5b9e\u73b0\u4f1a\u5728 redis \u8fde\u63a5\u51fa\u73b0\u95ee\u9898\u6216\u8005\u6570\u636e\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u65f6\uff0c\u8d70\u539f\u59cb\u7684\u6570\u636e\u83b7\u53d6\u6e20\u9053\uff08\u5982\u964d\u7ea7\u4e3a\u8bfb mysql \u91cc\u7684\u6570\u636e\uff09 \u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\uff1a @Bean public RedisCacheConfig redisCacheConfig(RedisSetting redisSetting) { RedisCacheConfig redisCacheConfig = new RedisCacheConfig(); redisCacheConfig.setPrefix(\"U_\"); redisCacheConfig.setSerializer(RedisSerializer.java()); redisCacheConfig.setExpirePolicy(name -> 0); redisCacheConfig.setRedisSetting(redisSetting); return redisCacheConfig; } \u6ce8\u610f\uff1a\u4f9d\u7136\u9700\u8981\u5f15\u5165 spring-boot-starter-data-redis \u5305\uff0c\u4f9d\u7136\u9700\u8981\u5728\u542f\u52a8\u7c7b\u4e0a\u52a0\u4e0a @EnableCaching \u6ce8\u89e3 grus \u4e8c\u7ea7\u7f13\u5b58\u5b9e\u73b0 \u4e8c\u7ea7\u7f13\u5b58\u5b9e\u73b0\uff0c\u7b2c\u4e00\u7ea7\u672c\u5730\u7f13\u5b58\uff0c\u4f7f\u7528\u7684\u662f\u73b0\u5728\u4e3b\u6d41\u7684\u9ad8\u6027\u80fd\u7f13\u5b58\u5e93 Caffeine \uff0c grus-core \u4e2d\u9ed8\u8ba4\u4f9d\u8d56\u4e86 caffeine \uff0c\u57fa\u4e8e grus \u6846\u67b6\u5f00\u53d1\u7684\u9879\u76ee\u53ef\u4ee5\u968f\u610f\u4f7f\u7528 caffeine \uff0c\u4e5f\u53ef\u4ee5\u5bf9\u6bd4\u4e0b guava cache \uff0c\u4f7f\u7528\u8fc7 guava cache \u7684\u5f88\u5bb9\u6613\u4e0a\u624b caffeine \uff0c\u8bed\u6cd5\u57fa\u672c\u4e00\u6837\uff1b \u7b2c\u4e8c\u7ea7\u8fd8\u662f redis \u7f13\u5b58\u3002 \u4e8c\u7ea7\u7f13\u5b58\u7248\u672c\u4f9d\u8d56 grus \u7248\u672c 2021.1.0 \u3002 \u4f7f\u7528\u5728\u539f\u6709 RedisCacheConfig \u589e\u52a0\u672c\u5730\u7f13\u5b58\u914d\u7f6e\uff1a redisCacheConfig.getLocalCacheConfig().setEnable(true).setGlobalEvict(true); LocalCacheConfig \u672c\u5730\u7f13\u5b58\u914d\u7f6e\u8be6\u7ec6\u8bf4\u660e\uff1a enable \uff1a\u662f\u5426\u542f\u7528\u672c\u5730\u5185\u5b58\u7f13\u5b58\uff0c\u6240\u6709\u5176\u4ed6\u7684\u914d\u7f6e\u751f\u6548\u7684\u524d\u63d0\u90fd\u662f enable=true\uff1b globalEvict \uff1a\u662f\u5426\u542f\u7528\u5176\u5168\u5c40\u5220\u9664\u673a\u5236\uff08\u76ee\u524d\u5b9e\u73b0\u4f9d\u8d56\u4e8e redis \u7684 pub/sub \u673a\u5236\uff09\uff1b\u89e6\u53d1\u6761\u4ef6\uff1a\u4f7f\u7528\u6ce8\u89e3 @CacheEvit \u6216\u8005\u76f4\u63a5\u8c03\u7528 RedisCache or L2Cache \u7684 evict() \u65b9\u6cd5\uff1b channel \uff1aglobalEvict=true \u65f6\uff0c\u7528\u4e8e\u8ba2\u9605\u5220\u9664 key \u7684\u901a\u9053\u540d\uff0c\u5982\u679c\u4e0d\u586b\u5199\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5e94\u7528\u540d\uff1b serialize \uff1a\u662f\u5426\u5e8f\u5217\u5316 value\uff0c\u5982\u679c\u4e3a\u5426\uff0c\u90a3\u4e48\u7f13\u5b58\u7684 value \u4e3a\u5bf9\u8c61\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u7f13\u5b58\u7684 value \u4e3a\u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u7684\u5b57\u8282\u6570\u7ec4\uff1b\u4e0d\u4f7f\u7528\u5e8f\u5217\u5316\u6027\u80fd\u66f4\u52a0\u9ad8\u3002\u4f46\u662f\u9700\u8981\u4fdd\u8bc1\u8fd4\u56de\u7684\u503c\uff0c\u4e0d\u80fd\u505a\u4fee\u6539\u3002 maximumSize \uff1a\u672c\u5730\u7f13\u5b58\u6700\u5927\u503c\uff0c\u9ed8\u8ba4 102400\u3002 \u6ce8\u610f\uff1a\u672c\u5730\u5185\u5b58\u8fd8\u662f\u5c3d\u91cf\u8981\u8fc7\u671f\uff0c\u4e3b\u8981\u76ee\u7684\u4e3a\u4e86\u5feb\u901f\u5237\u65b0\u7f13\u5b58\uff0c\u6240\u4ee5\u672c\u5730\u7f13\u5b58\u9650\u5236\u4e86\u6700\u5927\u7f13\u5b58\u65f6\u95f4 3600s \u3002\u9ed8\u8ba4\u672c\u5730\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u548c redis \u4e00\u81f4\uff08\u7f13\u5b58\u65f6\u95f4<= 3600s\uff09\u3002\u867d\u7136\u672c\u5730\u7f13\u5b58\u9650\u5236\u4e86\u6700\u5927\u7f13\u5b58\u65f6\u95f4\uff0c\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\uff0c redis \u7f13\u5b58\u672a\u5931\u6548\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u4e00\u76f4\u90fd\u4f1a\u91cd\u65b0\u585e\u5165\u672c\u5730\u7f13\u5b58\u3002 grus \u7f13\u5b58\u65b0\u5347\u7ea7 \u4f9d\u8d56 grus \u7248\u672c > 2021.1.2 \u3002 \u65b0\u5347\u7ea7\u7684\u7f13\u5b58\u652f\u6301\u4e09\u79cd\uff1a LocalCache \uff08\u672c\u5730\u7f13\u5b58\uff09\u3001 RedisCache \uff08Redis \u7f13\u5b58\uff09\u3001 L2Cache \uff08\u4e8c\u7ea7\u7f13\u5b58\uff09\uff1b\u4e09\u79cd\u7f13\u5b58\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\uff0c\u53ea\u9700\u8981\u6784\u5efa\u5bf9\u5e94\u7684 CacheConfig \u5373\u53ef\u3002 @Bean public RedisCacheConfig redisCacheConfig(RedisSetting redisSetting) { RedisCacheConfig redisCacheConfig = new RedisCacheConfig(); redisCacheConfig.setRedisSetting(redisSetting); redisCacheConfig.setPrefix(\"GRUS_DEMO_3_\"); redisCacheConfig.setSerializer(RedisSerializer.java()); redisCacheConfig.setUseGzip(true); redisCacheConfig.setCacheConfigFunc(name -> { switch (name) { case \"useRedisCache\": return CacheConfig.redis().setExpireSeconds(600); case \"useLocalCacheSerialize\": return CacheConfig.localRedis().setExpireSeconds(600).setLocalExpireSeconds(120).setSerialize(true); case \"useLocalCache\": return CacheConfig.local().setExpireSeconds(60); case \"useLocalCacheNoExpire\": return CacheConfig.local().setExpireSeconds(0); } return CacheConfig.localRedis(); }); return redisCacheConfig; } PS: 1\u3001\u672c\u5730\u7f13\u5b58\u652f\u6301\u957f\u671f\u6709\u6548\uff0c\u53ea\u9700\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\uff1b 2\u3001\u6bcf\u4e2a\u7f13\u5b58\u7684\u914d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u5177\u4f53\u53c2\u89c1 CacheConfig \u7684 Local \u3001 Redis \u3001 LocalRedis \u3002 3\u3001\u4e09\u79cd\u7f13\u5b58\u90fd\u662f\u57fa\u4e8e redis \u7684 pub/sub \u673a\u5236\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u6240\u4ee5\u5373\u4f7f\u53ea\u4f7f\u7528\u672c\u5730\u7f13\u5b58\uff0c\u4e5f\u9700\u8981\u914d\u7f6e redis \u3002","title":"redis spring cache"},{"location":"grus/redis/#session","text":"\u5927\u5bb6\u4f7f\u7528 spring-session-data-redis <dependency> <groupId>org.springframework.session</groupId> <artifactId>spring-session-data-redis</artifactId> </dependency> \u6b64\u6a21\u5757\u540c\u6837\u4f9d\u8d56 starter-data-redis \u6a21\u5757 \u76f8\u5173\u914d\u7f6e\u5982\u4e0b\uff1a server.servlet.session.cookie.name=gsId server.servlet.session.cookie.http-only=true server.servlet.session.cookie.secure=true server.servlet.session.cookie.path=/ server.servlet.session.cookie.max-age=7200s spring.session.store-type=redis spring.session.timeout=1800s spring.session.redis.namespace=grus-demo:session //\u8fd9\u4e2a\u9700\u8981\u4fee\u6539\u6210\u5404\u81ea\u5e94\u7528\u7684\uff0c\u533a\u5206\u5f00\u6765 spring.session.redis.flush-mode=on_save \u540e\u7eed\u4f1a\u5bf9 spring-session-data-redis \u7684\u521d\u59cb\u5316\u8fdb\u4e00\u6b65\u5206\u88c5","title":"session"},{"location":"grus/session/","text":"\u5206\u5e03\u5f0f SESSION \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u767b\u9646\u540e\u7684\u7528\u6237\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 PassportAuth \u5c01\u88c5\u7684\u5355\u70b9\u767b\u5f55\u9274\u6743\u89e3\u51b3\u65b9\u6848\u3002 \u4f46\u662f\u5bf9\u4e8e\u975e\u767b\u5f55\u7528\u6237\uff0c\u6ca1\u6709 GID \u3001\u6ca1\u6709 access-token \uff0c\u6bd4\u5982 Passport \u4e2a\u4eba\u767b\u5f55\u5165\u53e3\u672c\u8eab\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5206\u5e03\u5f0f SESSION \u4e86\u3002 \u8bbe\u8ba1\u8bf4\u660e \u00b6 session \u4ea7\u751f\u6d41\u7a0b\u56fe\uff1a session \u751f\u547d\u5468\u671f \u00b6 session \u7684\u751f\u547d\u5468\u671f\u6700\u957f\u4e3a 6 \u4e2a\u5c0f\u65f6 \u5982\u679c\u7528\u6237\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u90a3\u4e48 1 \u4e2a\u5c0f\u65f6\u4e4b\u540e\uff0csession \u81ea\u52a8\u8fc7\u671f gid \u5bf9\u5e94\u7684 session \u7684\u751f\u547d\u5468\u671f\u540c\u4e0a\u3002 session \u751f\u6210\u9650\u5236 \u00b6 \u5355 IP \u4e00\u5c0f\u65f6\u6700\u591a\u751f\u6210 2 \u4e07\u4e2a session \u5355\u201cip+useragent\u201d\u4e00\u4e2a\u5c0f\u65f6\u6700\u591a\u751f\u6210 1 \u4e07\u4e2a session \u4e00\u5c0f\u65f6\u6700\u591a\u751f\u6210 20 \u4e07\u4e2a session \u4e00\u5206\u949f\u6700\u591a\u751f\u6210 1 \u4e07\u4e2a session \u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62 session \u653b\u51fb\u3002 \u4f7f\u7528\u8bf4\u660e \u00b6 maven \u4f9d\u8d56\uff1a <dependency> <artifactId> ciicgat-sdk-session </artifactId> <groupId> com.ciicgat.sdk </groupId> </dependency> HttpSession httpSession = SessionManager.getCurrentSession(req, resp); httpSession.setAttribute(\"code\",\"123456\"); System.out.println(httpSession.getAttribute(\"code\")); \u6ce8\u610f:setAttribute\u65b9\u6cd5\u4e2d\uff0cvalue\u5fc5\u987b\u5b9e\u73b0java.io.Serializable\u63a5\u53e3\u3002 \u56e0\u4e3a\u9700\u8981\u628a\u5176\u5e8f\u5217\u5316\u5230redis\u4e4b\u4e2d\u3002","title":"\u5206\u5e03\u5f0f SESSION"},{"location":"grus/session/#session","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u767b\u9646\u540e\u7684\u7528\u6237\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 PassportAuth \u5c01\u88c5\u7684\u5355\u70b9\u767b\u5f55\u9274\u6743\u89e3\u51b3\u65b9\u6848\u3002 \u4f46\u662f\u5bf9\u4e8e\u975e\u767b\u5f55\u7528\u6237\uff0c\u6ca1\u6709 GID \u3001\u6ca1\u6709 access-token \uff0c\u6bd4\u5982 Passport \u4e2a\u4eba\u767b\u5f55\u5165\u53e3\u672c\u8eab\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5206\u5e03\u5f0f SESSION \u4e86\u3002","title":"\u5206\u5e03\u5f0f SESSION"},{"location":"grus/session/#_1","text":"session \u4ea7\u751f\u6d41\u7a0b\u56fe\uff1a","title":"\u8bbe\u8ba1\u8bf4\u660e"},{"location":"grus/session/#session_1","text":"session \u7684\u751f\u547d\u5468\u671f\u6700\u957f\u4e3a 6 \u4e2a\u5c0f\u65f6 \u5982\u679c\u7528\u6237\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u90a3\u4e48 1 \u4e2a\u5c0f\u65f6\u4e4b\u540e\uff0csession \u81ea\u52a8\u8fc7\u671f gid \u5bf9\u5e94\u7684 session \u7684\u751f\u547d\u5468\u671f\u540c\u4e0a\u3002","title":"session \u751f\u547d\u5468\u671f"},{"location":"grus/session/#session_2","text":"\u5355 IP \u4e00\u5c0f\u65f6\u6700\u591a\u751f\u6210 2 \u4e07\u4e2a session \u5355\u201cip+useragent\u201d\u4e00\u4e2a\u5c0f\u65f6\u6700\u591a\u751f\u6210 1 \u4e07\u4e2a session \u4e00\u5c0f\u65f6\u6700\u591a\u751f\u6210 20 \u4e07\u4e2a session \u4e00\u5206\u949f\u6700\u591a\u751f\u6210 1 \u4e07\u4e2a session \u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9632\u6b62 session \u653b\u51fb\u3002","title":"session \u751f\u6210\u9650\u5236"},{"location":"grus/session/#_2","text":"maven \u4f9d\u8d56\uff1a <dependency> <artifactId> ciicgat-sdk-session </artifactId> <groupId> com.ciicgat.sdk </groupId> </dependency> HttpSession httpSession = SessionManager.getCurrentSession(req, resp); httpSession.setAttribute(\"code\",\"123456\"); System.out.println(httpSession.getAttribute(\"code\")); \u6ce8\u610f:setAttribute\u65b9\u6cd5\u4e2d\uff0cvalue\u5fc5\u987b\u5b9e\u73b0java.io.Serializable\u63a5\u53e3\u3002 \u56e0\u4e3a\u9700\u8981\u628a\u5176\u5e8f\u5217\u5316\u5230redis\u4e4b\u4e2d\u3002","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/test/","text":"\u5355\u5143\u6d4b\u8bd5\u6a21\u5757 \u00b6 \u5927\u5bb6\u53ef\u4ee5\u770b\u4e0b\u8fd9\u4e2a\u6587\u7ae0\uff1a https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html \u548c springboot \u5b98\u65b9\u7684\u793a\u4f8b\uff1a https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples/spring-boot-sample-test \u672c\u6587\u7684\u793a\u4f8b\uff0c\u90fd\u662f\u4ece\u5b98\u65b9\u793a\u4f8b\u4e2d\u62bd\u53d6\u7684\u3002 \u4ee5\u4e0b\u662f\u6838\u5fc3\u5185\u5bb9\uff1a pom.xml \u91cc\u53ea\u9700\u8981\u52a0\u5165\u4ee5\u4e0b\u4f9d\u8d56\uff1a <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> \u5b83**\u81ea\u52a8\u5305\u542b\u4ee5\u4e0b\u6a21\u5757**\uff1a JUnit 4 Spring Test AssertJ Hamcrest Mockito JSONassert JsonPath \u8fd9\u4e9b\u5b50\u6a21\u5757\uff0c\u8db3\u591f\u5927\u5bb6\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u3002 \u4e0b\u9762\u8be6\u7ec6\u8bb2\u89e3\u51e0\u79cd\u573a\u666f\u6700\u65b0\u7684\u5199\u6cd5 Boot \u5355\u5143\u6d4b\u8bd5\u57fa\u7840 \u00b6 \u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7684 XXApplication,\u7528\u4e8e\u914d\u7f6e @SpringBootTest \u4e2d\u7684 classes\u3002 \u6bd4\u5982\uff1a @SpringBootApplication(exclude = { FeignAutoConfiguration.class, SwaggerAutoConfiguration.class, GrusDataAutoConfiguration.class, DataSourceAutoConfiguration.class, GrusWebAutoConfiguration.class, OpenTracingAutoConfiguration.class, ValidationAutoConfiguration.class}) @EnableElasticJob public class JobApplication { public static void main(String[] args) { new SpringApplicationBuilder(JobApplication.class) .run(args); } } @RunWith(SpringRunner.class) @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE, classes = JobApplication.class, //\u8fd9\u91cc\u7528\u5230\u4e86JobApplication properties = {\"spring.application.name=grus-demo\", \"grus.gconf.appId=grus-demo\", \"grus.job.serverLists=10.101.9.207:2182\", \"grus.job.namespace=grus-test-job\"}) public class JobAutoConfigurationTests { @Autowired private GrusSimpleJob simpleJobTest; @Autowired private GrusSimpleJob2 simpleJobTest2; @Test public void test() { Threads.sleepSeconds(5); Assert.assertTrue(simpleJobTest.getValue() > 0); Assert.assertTrue(simpleJobTest2.getValue() > 0); } } assert \u00b6 \u5927\u5bb6\u7edf\u4e00\u4f7f\u7528 assertj \u6765\u505a\u7ed3\u679c\u671f\u671b\u7684\u5224\u65ad\u3002 \u4e00\u822c\u7684\uff0c\u4f7f\u7528 org.assertj.core.api.Assertions.assertThat \u65b9\u6cd5\u3002\u5f02\u5e38\u4f7f\u7528\u901a\u7528\u7684 org.assertj.core.api.Assertions.assertThatExceptionOfType ,\u4e5f\u53ef\u4ee5\u4f7f\u7528\u51e0\u4e2a\u5e38\u89c1\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u5982 assertThatNullPointerException \u3001 assertThatIllegalArgumentException \u7b49\u3002 \u6bd4\u5982\uff1a https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleServiceTests.java#L77 \u6bd4\u5982\uff1a https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleServiceTests.java#L67 Mock \u00b6 \u5bf9\u4e8e mock \u7684 bean\uff0c\u53ef\u4ee5\u4f7f\u7528 @MockBean \u6765\u6ce8\u5165\uff0c\u5982\uff1a @MockBean private UserVehicleService userVehicleService; \u4f7f\u7528 org.mockito.BDDMockito.given \u6765\u505a mock\uff0c\u5982\uff1a org.mockito.BDDMockito.given(this.vehicleDetailsService.getVehicleDetails(VIN)).willReturn(new VehicleDetails(\"Honda\", \"Civic\")); \u539f\u6765\u8bf8\u5982 Mockito.when(accountService.getById(Mockito.anyInt())).thenReturn(accountDO); \u7684\u5199\u6cd5\u4e0d\u8981\u4f7f\u7528\u4e86\u3002 web \u5c42 \u00b6 MockMvc \u6ce8\u5165\u65b9\u5f0f\uff1a @WebMvcTest(UserVehicleController.class) \u7c7b\u4e0a\uff0c\u589e\u52a0\u9700\u8981\u6d4b\u8bd5\u7684Controller class UserVehicleControllerTests{ @Autowired private MockMvc mvc; //\u76f4\u63a5\u6ce8\u5165mvc\u5373\u53ef } \u4e5f\u53ef\u4ee5\u4f7f\u7528 @AutoConfigureMockMvc \u6ce8\u89e3\uff1a */ @RunWith(SpringRunner.class) @SpringBootTest(classes = ApplicationTest.class) @AutoConfigureMockMvc public class UserVehicleControllerTests { @Autowired private MockMvc mockMvc; } \u5bf9\u4e8e web \u5c42\u7684\u7ed3\u679c\u5224\u65ad\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 andExpect \u65b9\u6cd5\uff0c\u4e0d\u8981\u4f7f\u7528 assertj \u6216\u8005 junit \u7684 assert\u3002 \u6bd4\u5982\uff1a this.mvc.perform(get(\"/sboot/vehicle\").accept(MediaType.TEXT_PLAIN)) .andExpect(status().isOk())//\u5224\u65ad\u8fd4\u56de\u72b6\u6001\u7801 .andExpect(content().string(\"Honda Civic\")); //\u5224\u65ad\u5b57\u7b26\u4e32 this.mvc.perform(get(\"/sboot/vehicle\").accept(MediaType.APPLICATION_JSON)) .andExpect(status().isOk()) .andExpect(content().json(\"{'make':'Honda','model':'Civic'}\")); //\u5224\u65adjson \u4ee5\u4e0a\u793a\u4f8b\u53ef\u4ee5\u89c1\uff1a< https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerTests.java > service \u5c42 \u00b6 \u670d\u52a1\u5c42\u53ef\u4ee5\u628a\u4ee5\u6765\u7684 DAO \u7ed9 mock \u6389\uff0c\u6bd4\u5982\uff1a class UserVehicleServiceTests { private static final VehicleIdentificationNumber VIN = new VehicleIdentificationNumber(\"00000000000000000\"); @Mock private VehicleDetailsService vehicleDetailsService; @Mock private UserRepository userRepository; private UserVehicleService service; @BeforeEach public void setup() { MockitoAnnotations.initMocks(this); this.service = new UserVehicleService(this.userRepository, this.vehicleDetailsService); } @Test void getVehicleDetailsWhenUsernameIsNullShouldThrowException() { assertThatIllegalArgumentException().isThrownBy(() -> this.service.getVehicleDetails(null)) .withMessage(\"Username must not be null\"); } } \u6570\u636e\u5c42 \u00b6 \u6570\u636e\u5c42\u7684\u6d4b\u8bd5\uff0c\u4e00\u822c\u90fd\u662f\u9700\u8981\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u7684\u3002\u6700\u5173\u952e\u7684\u662f\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u6570\u636e\u6e90\u7684\u6ce8\u5165\u548c\u5176 schema \u7684\u521b\u5efa\u3002 \u5199\u6cd5\u4e00\uff1a \u6211\u4eec\u81ea\u5df1\u5df2\u7ecf\u6709\u4e00\u79cd\u5199\u6cd5\uff1a https://guide.wuxingdev.cn/java/grus/grus-data.html#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95 \u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\uff0c\u53ea\u662f\u63d0\u4f9b\u4e86\u6570\u636e\u6e90\uff0c\u5173\u4e8e\u8868\u7684\u521b\u5efa\uff0c\u8fd8\u662f\u9700\u8981\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u521b\u5efa\u3002 \u5199\u6cd5\u4e8c\uff1a SpringBoot \u5b98\u65b9\u63d0\u4f9b\u4e86 @AutoConfigureTestDatabase \u6ce8\u89e3\u3002\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u5176\u7ea6\u5b9a\u5f88\u7b80\u5355\u7684\u5c31\u542f\u52a8\u4e86\u6ce8\u5165\u5d4c\u5165\u5f0f\u6570\u636e\u6e90\uff0c\u540c\u65f6\u5b8c\u6210\u5d4c\u5165\u5f0f\u6570\u636e\u5e93 schema \u7684\u521b\u5efa\u3002 \u6709\u4e09\u4e2a\u5173\u952e\u70b9\uff1a \u6d4b\u8bd5\u7684\u7c7b\u4e0a\u9700\u8981\u52a0\u4e0a @AutoConfigureTestDatabase \u3002 classpath \u4e2d\uff0c\u9700\u8981\u589e\u52a0 h2\u3001derby\u3001hsql \u4e09\u4e2a\u4e2d\u4efb\u610f\u4e00\u4e2a\u5305\u3002 src/test/resouces \u6587\u4ef6\u5939\u4e0b\uff0c\u589e\u52a0 data.sql \u548c schema.sql\u3002 \u8be6\u7ec6\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration \u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\u90fd\u662f OK \u7684\uff0c\u80fd\u8fbe\u5230\u76ee\u7684\u5373\u53ef\u3002 json \u00b6 spring \u63d0\u4f9b\u4e86 JacksonTester\uff0c\u53ef\u4ee5\u4f7f\u7528 @JsonTest \u5e2e\u52a9\u6ce8\u5165\u8be5\u5bf9\u8c61\uff0c\u5982\uff1a @JsonTest class VehicleDetailsJsonTests { @Autowired private JacksonTester<VehicleDetails> json; @Test void serializeJson() throws Exception { VehicleDetails details = new VehicleDetails(\"Honda\", \"Civic\"); assertThat(this.json.write(details)).isEqualTo(\"vehicledetails.json\"); assertThat(this.json.write(details)).isEqualToJson(\"vehicledetails.json\"); assertThat(this.json.write(details)).hasJsonPathStringValue(\"@.make\"); assertThat(this.json.write(details)).extractingJsonPathStringValue(\"@.make\").isEqualTo(\"Honda\"); } @Test void deserializeJson() throws Exception { String content = \"{\\\"make\\\":\\\"Ford\\\",\\\"model\\\":\\\"Focus\\\"}\"; assertThat(this.json.parse(content)).isEqualTo(new VehicleDetails(\"Ford\", \"Focus\")); assertThat(this.json.parseObject(content).getMake()).isEqualTo(\"Ford\"); } } JUNIT 5 \u00b6 junit 5 \u662f junit 4 \u4e0b\u4e00\u4ee3\u7684\u6d4b\u8bd5\u6846\u67b6\uff0cspringboot \u81ea 2.3.* \u7248\u672c\u5f00\u59cb\uff0c\u4e5f\u4e3b\u63a8 junit 5\u3002\u8fd9\u91cc\u7b80\u5355\u8bb2\u8ff0\u4e0b\u5982\u4f55\u4f7f\u7528\uff1a junit 5 \u548c junit 4 \u76f8\u6bd4\uff0c\u540d\u79f0\u4e0e\u529f\u80fd\u57fa\u672c\u4e0d\u53d8\uff0c\u6240\u5c5e\u7684\u5305\u53d8\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u8fdb\u884c\u5347\u7ea7\u64cd\u4f5c\u7684\u8bdd\uff0c\u9700\u8981\u91cd\u65b0\u4fee\u6539 package\u3002 @RunWith \u88ab\u79fb\u9664\uff0c\u7528 @ExtendWith \u66ff\u4ee3 \u57fa\u4e8e grus \u6846\u67b6 2021.1 \u5f00\u59cb\uff0c\u4f7f\u7528 junit 5\uff0c\u4f9d\u8d56\u5982\u4e0b\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> \u57fa\u4e8e spring \u73af\u5883\u6d4b\u8bd5 \u00b6 @SpringBootTest public class FuelCardDaoTest { @Resource FuelCardDao fuelCardDao ; @Test public void testBatchInsert () throws ParseException { List < FuelCardDO > fuelCards = new ArrayList <> (); int expect = 1 ; for ( int i = 0 ; i < expect ; i ++ ) { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setOuterTradeNo ( DateFormatUtils . format ( new Date (), \"MMddHHmm\" )); fuelCardDO . setCardNo ( i + \"\" + new Date (). toString ()); fuelCardDO . setAmount ( new BigDecimal ( \"10\" )); fuelCardDO . setEndDate ( DateUtils . parseDate ( \"2019-12-12\" , \"yyyy-MM-dd\" )); fuelCards . add ( fuelCardDO ); } int actual = fuelCardDao . batchInsert ( fuelCards ); Assertions . assertEquals ( expect , actual ); } @Test public void testListByNos () { List < String > cardNos = Arrays . asList ( \"10000016\" , \"10000016\" , \"10000025\" , \"test\" ); List < FuelCardDO > fuelCardDOS = fuelCardDao . listByNos ( cardNos ); System . out . println ( \"fuelCardDOS = \" + fuelCardDOS ); System . out . println ( \"fuelCardDOS.size() = \" + fuelCardDOS . size ()); Assertions . assertNotNull ( fuelCardDOS ); } } \u4e0d\u518d\u9700\u8981 @RunWith(SpringRunner.class) \u57fa\u4e8e spring \u73af\u5883 mock \u00b6 @SpringBootTest public class FuelCardServiceTest { @Autowired private FuelCardService fuelCardService ; @MockBean ( name = \"fuelCardDao\" ) private FuelCardDao fuelCardDao ; @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"00\" )). willReturn ( null ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); assertThat ( fuelCardDao . getByCardNo ( \"00\" )). isNull (); } } \u56e0\u4e3a mybatis-spring-boot-starter \u7684\u95ee\u9898\uff0c\u76ee\u524d\u5982\u679c\u9700\u8981 mock \u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u6307\u5b9a name\u3002\u8be5\u95ee\u9898\u5c06\u5728\u540e\u7eed grus \u6846\u67b6\u5347\u7ea7\uff08\u5347\u7ea7 mybatis-spring-boot-starter \u7248\u672c\uff09\u540e\u89e3\u51b3\u3002 \u57fa\u4e8e spring \u73af\u5883 mock \u5de8\u7075\u795e \u00b6 @SpringBootTest public class FuelTradeServiceTest { @Autowired private FuelTradeService fuelTradeService ; @MockBean ( name = \"orderDetailDao\" ) private OrderDetailDao orderDetailDao ; @MockBean private FuelTradeAtomService fuelTradeAtomService ; @Mock private ConsumeRecordService consumeRecordService ; @BeforeEach public void init () { ReflectionTestUtils . setField ( fuelTradeService , \"consumeRecordService\" , consumeRecordService ); } @Test public void test_dealOrderNotify_0 () { CardOrderRequest cardOrderRequest = new CardOrderRequest (); cardOrderRequest . setOuterTradeNo ( \"01\" ); String cards = \"{\\\"cardNo\\\":\\\"12\\\",\\\"amount\\\":\\\"500.00\\\",\\\"endDate\\\":\\\"2019-01-01 12:12:12\\\"}\" ; cardOrderRequest . setCards ( cards ); // \u6d88\u8d39\u8bb0\u5f55\u4e0d\u5b58\u5728 given ( consumeRecordService . get ( Mockito . eq ( null ), Mockito . eq ( null ), Mockito . anyString ())). willReturn ( null ); assertThatExceptionOfType ( BusinessRuntimeException . class ) . isThrownBy (() -> fuelTradeService . dealOrderNotify ( cardOrderRequest )) . withMessageContaining ( BusinessErrorCode . OUTER_TRADE_NO_NOT_EXIST . getErrorCode () + \"\" ); } } \u56e0\u4e3a\u901a\u8fc7 @FeignService \u6ce8\u5165\u7684\u670d\u52a1\uff0c\u5e76\u6ca1\u6709\u4ea4\u7ed9 spring \u5bb9\u5668\u7ba1\u7406\uff0c\u800c\u662f\u901a\u8fc7 BeanPostProcessor \uff0c\u5728\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u626b\u63cf\u6bcf\u4e2a class \u4e2d\u6210\u5458\u53d8\u91cf\u7684\u6ce8\u89e3\uff0c\u751f\u6210\u4ee3\u7406\u7c7b\u66ff\u6362\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u7528 @MockBean \u6ce8\u89e3\u3002\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u9700\u8981 mock \u5916\u90e8\u670d\u52a1\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7\u624b\u5de5\u64cd\u4f5c\u7684\u65b9\u5f0f\u89e3\u51b3\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684\uff1a @Mock private ConsumeRecordService consumeRecordService; @BeforeEach public void init() { ReflectionTestUtils.setField(fuelTradeService, \"consumeRecordService\", consumeRecordService); } \u624b\u5de5\u751f\u6210\u5de8\u7075\u795e API \u7684\u4ee3\u7406\u7c7b\uff0c\u5e76\u66ff\u6362\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u3002 \u4e0d\u4f9d\u8d56 spring \u73af\u5883 \u00b6 \u6709\u4e9b\u65f6\u5019\uff0c\u53ea\u60f3\u6d4b\u8bd5\u67d0\u4e2a\u7c7b\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u7684\u4efb\u4f55\u903b\u8f91\uff0c\u53ef\u4ee5\u5b8c\u5168\u4e0d\u5f15\u5165 spring \u7684\u76f8\u5173\u73af\u5883\u3002\uff08\u505a\u4e00\u4e2a\u7eaf\u6b63\u7684\u201d\u5355\u5143\u201c\u6d4b\u8bd5\uff09 @ExtendWith ( MockitoExtension . class ) public class FuelCardServiceTest { @InjectMocks private FuelCardServiceImpl fuelCardService ; @Mock private FuelCardDao fuelCardDao ; @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); } } \u6216\u8005 public class FuelCardServiceTest { @InjectMocks private FuelCardServiceImpl fuelCardService ; @Mock private FuelCardDao fuelCardDao ; @BeforeEach public void initMock () { MockitoAnnotations . initMocks ( this ); } @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); } } \u8fd9\u4e24\u79cd\u521d\u59cb\u5316\u7684\u65b9\u5f0f\u5b8c\u5168\u662f\u4e00\u6837\u7684\u3002","title":"\u5355\u5143\u6d4b\u8bd5\u6a21\u5757"},{"location":"grus/test/#_1","text":"\u5927\u5bb6\u53ef\u4ee5\u770b\u4e0b\u8fd9\u4e2a\u6587\u7ae0\uff1a https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html \u548c springboot \u5b98\u65b9\u7684\u793a\u4f8b\uff1a https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples/spring-boot-sample-test \u672c\u6587\u7684\u793a\u4f8b\uff0c\u90fd\u662f\u4ece\u5b98\u65b9\u793a\u4f8b\u4e2d\u62bd\u53d6\u7684\u3002 \u4ee5\u4e0b\u662f\u6838\u5fc3\u5185\u5bb9\uff1a pom.xml \u91cc\u53ea\u9700\u8981\u52a0\u5165\u4ee5\u4e0b\u4f9d\u8d56\uff1a <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> \u5b83**\u81ea\u52a8\u5305\u542b\u4ee5\u4e0b\u6a21\u5757**\uff1a JUnit 4 Spring Test AssertJ Hamcrest Mockito JSONassert JsonPath \u8fd9\u4e9b\u5b50\u6a21\u5757\uff0c\u8db3\u591f\u5927\u5bb6\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u3002 \u4e0b\u9762\u8be6\u7ec6\u8bb2\u89e3\u51e0\u79cd\u573a\u666f\u6700\u65b0\u7684\u5199\u6cd5","title":"\u5355\u5143\u6d4b\u8bd5\u6a21\u5757"},{"location":"grus/test/#boot","text":"\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7684 XXApplication,\u7528\u4e8e\u914d\u7f6e @SpringBootTest \u4e2d\u7684 classes\u3002 \u6bd4\u5982\uff1a @SpringBootApplication(exclude = { FeignAutoConfiguration.class, SwaggerAutoConfiguration.class, GrusDataAutoConfiguration.class, DataSourceAutoConfiguration.class, GrusWebAutoConfiguration.class, OpenTracingAutoConfiguration.class, ValidationAutoConfiguration.class}) @EnableElasticJob public class JobApplication { public static void main(String[] args) { new SpringApplicationBuilder(JobApplication.class) .run(args); } } @RunWith(SpringRunner.class) @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE, classes = JobApplication.class, //\u8fd9\u91cc\u7528\u5230\u4e86JobApplication properties = {\"spring.application.name=grus-demo\", \"grus.gconf.appId=grus-demo\", \"grus.job.serverLists=10.101.9.207:2182\", \"grus.job.namespace=grus-test-job\"}) public class JobAutoConfigurationTests { @Autowired private GrusSimpleJob simpleJobTest; @Autowired private GrusSimpleJob2 simpleJobTest2; @Test public void test() { Threads.sleepSeconds(5); Assert.assertTrue(simpleJobTest.getValue() > 0); Assert.assertTrue(simpleJobTest2.getValue() > 0); } }","title":"Boot \u5355\u5143\u6d4b\u8bd5\u57fa\u7840"},{"location":"grus/test/#assert","text":"\u5927\u5bb6\u7edf\u4e00\u4f7f\u7528 assertj \u6765\u505a\u7ed3\u679c\u671f\u671b\u7684\u5224\u65ad\u3002 \u4e00\u822c\u7684\uff0c\u4f7f\u7528 org.assertj.core.api.Assertions.assertThat \u65b9\u6cd5\u3002\u5f02\u5e38\u4f7f\u7528\u901a\u7528\u7684 org.assertj.core.api.Assertions.assertThatExceptionOfType ,\u4e5f\u53ef\u4ee5\u4f7f\u7528\u51e0\u4e2a\u5e38\u89c1\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u5982 assertThatNullPointerException \u3001 assertThatIllegalArgumentException \u7b49\u3002 \u6bd4\u5982\uff1a https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleServiceTests.java#L77 \u6bd4\u5982\uff1a https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleServiceTests.java#L67","title":"assert"},{"location":"grus/test/#mock","text":"\u5bf9\u4e8e mock \u7684 bean\uff0c\u53ef\u4ee5\u4f7f\u7528 @MockBean \u6765\u6ce8\u5165\uff0c\u5982\uff1a @MockBean private UserVehicleService userVehicleService; \u4f7f\u7528 org.mockito.BDDMockito.given \u6765\u505a mock\uff0c\u5982\uff1a org.mockito.BDDMockito.given(this.vehicleDetailsService.getVehicleDetails(VIN)).willReturn(new VehicleDetails(\"Honda\", \"Civic\")); \u539f\u6765\u8bf8\u5982 Mockito.when(accountService.getById(Mockito.anyInt())).thenReturn(accountDO); \u7684\u5199\u6cd5\u4e0d\u8981\u4f7f\u7528\u4e86\u3002","title":"Mock"},{"location":"grus/test/#web","text":"MockMvc \u6ce8\u5165\u65b9\u5f0f\uff1a @WebMvcTest(UserVehicleController.class) \u7c7b\u4e0a\uff0c\u589e\u52a0\u9700\u8981\u6d4b\u8bd5\u7684Controller class UserVehicleControllerTests{ @Autowired private MockMvc mvc; //\u76f4\u63a5\u6ce8\u5165mvc\u5373\u53ef } \u4e5f\u53ef\u4ee5\u4f7f\u7528 @AutoConfigureMockMvc \u6ce8\u89e3\uff1a */ @RunWith(SpringRunner.class) @SpringBootTest(classes = ApplicationTest.class) @AutoConfigureMockMvc public class UserVehicleControllerTests { @Autowired private MockMvc mockMvc; } \u5bf9\u4e8e web \u5c42\u7684\u7ed3\u679c\u5224\u65ad\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 andExpect \u65b9\u6cd5\uff0c\u4e0d\u8981\u4f7f\u7528 assertj \u6216\u8005 junit \u7684 assert\u3002 \u6bd4\u5982\uff1a this.mvc.perform(get(\"/sboot/vehicle\").accept(MediaType.TEXT_PLAIN)) .andExpect(status().isOk())//\u5224\u65ad\u8fd4\u56de\u72b6\u6001\u7801 .andExpect(content().string(\"Honda Civic\")); //\u5224\u65ad\u5b57\u7b26\u4e32 this.mvc.perform(get(\"/sboot/vehicle\").accept(MediaType.APPLICATION_JSON)) .andExpect(status().isOk()) .andExpect(content().json(\"{'make':'Honda','model':'Civic'}\")); //\u5224\u65adjson \u4ee5\u4e0a\u793a\u4f8b\u53ef\u4ee5\u89c1\uff1a< https://github.com/spring-projects/spring-boot/blob/master/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerTests.java >","title":"web \u5c42"},{"location":"grus/test/#service","text":"\u670d\u52a1\u5c42\u53ef\u4ee5\u628a\u4ee5\u6765\u7684 DAO \u7ed9 mock \u6389\uff0c\u6bd4\u5982\uff1a class UserVehicleServiceTests { private static final VehicleIdentificationNumber VIN = new VehicleIdentificationNumber(\"00000000000000000\"); @Mock private VehicleDetailsService vehicleDetailsService; @Mock private UserRepository userRepository; private UserVehicleService service; @BeforeEach public void setup() { MockitoAnnotations.initMocks(this); this.service = new UserVehicleService(this.userRepository, this.vehicleDetailsService); } @Test void getVehicleDetailsWhenUsernameIsNullShouldThrowException() { assertThatIllegalArgumentException().isThrownBy(() -> this.service.getVehicleDetails(null)) .withMessage(\"Username must not be null\"); } }","title":"service \u5c42"},{"location":"grus/test/#_2","text":"\u6570\u636e\u5c42\u7684\u6d4b\u8bd5\uff0c\u4e00\u822c\u90fd\u662f\u9700\u8981\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u7684\u3002\u6700\u5173\u952e\u7684\u662f\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u6570\u636e\u6e90\u7684\u6ce8\u5165\u548c\u5176 schema \u7684\u521b\u5efa\u3002 \u5199\u6cd5\u4e00\uff1a \u6211\u4eec\u81ea\u5df1\u5df2\u7ecf\u6709\u4e00\u79cd\u5199\u6cd5\uff1a https://guide.wuxingdev.cn/java/grus/grus-data.html#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95 \u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\uff0c\u53ea\u662f\u63d0\u4f9b\u4e86\u6570\u636e\u6e90\uff0c\u5173\u4e8e\u8868\u7684\u521b\u5efa\uff0c\u8fd8\u662f\u9700\u8981\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u521b\u5efa\u3002 \u5199\u6cd5\u4e8c\uff1a SpringBoot \u5b98\u65b9\u63d0\u4f9b\u4e86 @AutoConfigureTestDatabase \u6ce8\u89e3\u3002\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u5176\u7ea6\u5b9a\u5f88\u7b80\u5355\u7684\u5c31\u542f\u52a8\u4e86\u6ce8\u5165\u5d4c\u5165\u5f0f\u6570\u636e\u6e90\uff0c\u540c\u65f6\u5b8c\u6210\u5d4c\u5165\u5f0f\u6570\u636e\u5e93 schema \u7684\u521b\u5efa\u3002 \u6709\u4e09\u4e2a\u5173\u952e\u70b9\uff1a \u6d4b\u8bd5\u7684\u7c7b\u4e0a\u9700\u8981\u52a0\u4e0a @AutoConfigureTestDatabase \u3002 classpath \u4e2d\uff0c\u9700\u8981\u589e\u52a0 h2\u3001derby\u3001hsql \u4e09\u4e2a\u4e2d\u4efb\u610f\u4e00\u4e2a\u5305\u3002 src/test/resouces \u6587\u4ef6\u5939\u4e0b\uff0c\u589e\u52a0 data.sql \u548c schema.sql\u3002 \u8be6\u7ec6\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration \u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\u90fd\u662f OK \u7684\uff0c\u80fd\u8fbe\u5230\u76ee\u7684\u5373\u53ef\u3002","title":"\u6570\u636e\u5c42"},{"location":"grus/test/#json","text":"spring \u63d0\u4f9b\u4e86 JacksonTester\uff0c\u53ef\u4ee5\u4f7f\u7528 @JsonTest \u5e2e\u52a9\u6ce8\u5165\u8be5\u5bf9\u8c61\uff0c\u5982\uff1a @JsonTest class VehicleDetailsJsonTests { @Autowired private JacksonTester<VehicleDetails> json; @Test void serializeJson() throws Exception { VehicleDetails details = new VehicleDetails(\"Honda\", \"Civic\"); assertThat(this.json.write(details)).isEqualTo(\"vehicledetails.json\"); assertThat(this.json.write(details)).isEqualToJson(\"vehicledetails.json\"); assertThat(this.json.write(details)).hasJsonPathStringValue(\"@.make\"); assertThat(this.json.write(details)).extractingJsonPathStringValue(\"@.make\").isEqualTo(\"Honda\"); } @Test void deserializeJson() throws Exception { String content = \"{\\\"make\\\":\\\"Ford\\\",\\\"model\\\":\\\"Focus\\\"}\"; assertThat(this.json.parse(content)).isEqualTo(new VehicleDetails(\"Ford\", \"Focus\")); assertThat(this.json.parseObject(content).getMake()).isEqualTo(\"Ford\"); } }","title":"json"},{"location":"grus/test/#junit-5","text":"junit 5 \u662f junit 4 \u4e0b\u4e00\u4ee3\u7684\u6d4b\u8bd5\u6846\u67b6\uff0cspringboot \u81ea 2.3.* \u7248\u672c\u5f00\u59cb\uff0c\u4e5f\u4e3b\u63a8 junit 5\u3002\u8fd9\u91cc\u7b80\u5355\u8bb2\u8ff0\u4e0b\u5982\u4f55\u4f7f\u7528\uff1a junit 5 \u548c junit 4 \u76f8\u6bd4\uff0c\u540d\u79f0\u4e0e\u529f\u80fd\u57fa\u672c\u4e0d\u53d8\uff0c\u6240\u5c5e\u7684\u5305\u53d8\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u8fdb\u884c\u5347\u7ea7\u64cd\u4f5c\u7684\u8bdd\uff0c\u9700\u8981\u91cd\u65b0\u4fee\u6539 package\u3002 @RunWith \u88ab\u79fb\u9664\uff0c\u7528 @ExtendWith \u66ff\u4ee3 \u57fa\u4e8e grus \u6846\u67b6 2021.1 \u5f00\u59cb\uff0c\u4f7f\u7528 junit 5\uff0c\u4f9d\u8d56\u5982\u4e0b\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency>","title":"JUNIT 5"},{"location":"grus/test/#spring","text":"@SpringBootTest public class FuelCardDaoTest { @Resource FuelCardDao fuelCardDao ; @Test public void testBatchInsert () throws ParseException { List < FuelCardDO > fuelCards = new ArrayList <> (); int expect = 1 ; for ( int i = 0 ; i < expect ; i ++ ) { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setOuterTradeNo ( DateFormatUtils . format ( new Date (), \"MMddHHmm\" )); fuelCardDO . setCardNo ( i + \"\" + new Date (). toString ()); fuelCardDO . setAmount ( new BigDecimal ( \"10\" )); fuelCardDO . setEndDate ( DateUtils . parseDate ( \"2019-12-12\" , \"yyyy-MM-dd\" )); fuelCards . add ( fuelCardDO ); } int actual = fuelCardDao . batchInsert ( fuelCards ); Assertions . assertEquals ( expect , actual ); } @Test public void testListByNos () { List < String > cardNos = Arrays . asList ( \"10000016\" , \"10000016\" , \"10000025\" , \"test\" ); List < FuelCardDO > fuelCardDOS = fuelCardDao . listByNos ( cardNos ); System . out . println ( \"fuelCardDOS = \" + fuelCardDOS ); System . out . println ( \"fuelCardDOS.size() = \" + fuelCardDOS . size ()); Assertions . assertNotNull ( fuelCardDOS ); } } \u4e0d\u518d\u9700\u8981 @RunWith(SpringRunner.class)","title":"\u57fa\u4e8e spring \u73af\u5883\u6d4b\u8bd5"},{"location":"grus/test/#spring-mock","text":"@SpringBootTest public class FuelCardServiceTest { @Autowired private FuelCardService fuelCardService ; @MockBean ( name = \"fuelCardDao\" ) private FuelCardDao fuelCardDao ; @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"00\" )). willReturn ( null ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); assertThat ( fuelCardDao . getByCardNo ( \"00\" )). isNull (); } } \u56e0\u4e3a mybatis-spring-boot-starter \u7684\u95ee\u9898\uff0c\u76ee\u524d\u5982\u679c\u9700\u8981 mock \u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u6307\u5b9a name\u3002\u8be5\u95ee\u9898\u5c06\u5728\u540e\u7eed grus \u6846\u67b6\u5347\u7ea7\uff08\u5347\u7ea7 mybatis-spring-boot-starter \u7248\u672c\uff09\u540e\u89e3\u51b3\u3002","title":"\u57fa\u4e8e spring \u73af\u5883 mock"},{"location":"grus/test/#spring-mock_1","text":"@SpringBootTest public class FuelTradeServiceTest { @Autowired private FuelTradeService fuelTradeService ; @MockBean ( name = \"orderDetailDao\" ) private OrderDetailDao orderDetailDao ; @MockBean private FuelTradeAtomService fuelTradeAtomService ; @Mock private ConsumeRecordService consumeRecordService ; @BeforeEach public void init () { ReflectionTestUtils . setField ( fuelTradeService , \"consumeRecordService\" , consumeRecordService ); } @Test public void test_dealOrderNotify_0 () { CardOrderRequest cardOrderRequest = new CardOrderRequest (); cardOrderRequest . setOuterTradeNo ( \"01\" ); String cards = \"{\\\"cardNo\\\":\\\"12\\\",\\\"amount\\\":\\\"500.00\\\",\\\"endDate\\\":\\\"2019-01-01 12:12:12\\\"}\" ; cardOrderRequest . setCards ( cards ); // \u6d88\u8d39\u8bb0\u5f55\u4e0d\u5b58\u5728 given ( consumeRecordService . get ( Mockito . eq ( null ), Mockito . eq ( null ), Mockito . anyString ())). willReturn ( null ); assertThatExceptionOfType ( BusinessRuntimeException . class ) . isThrownBy (() -> fuelTradeService . dealOrderNotify ( cardOrderRequest )) . withMessageContaining ( BusinessErrorCode . OUTER_TRADE_NO_NOT_EXIST . getErrorCode () + \"\" ); } } \u56e0\u4e3a\u901a\u8fc7 @FeignService \u6ce8\u5165\u7684\u670d\u52a1\uff0c\u5e76\u6ca1\u6709\u4ea4\u7ed9 spring \u5bb9\u5668\u7ba1\u7406\uff0c\u800c\u662f\u901a\u8fc7 BeanPostProcessor \uff0c\u5728\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u626b\u63cf\u6bcf\u4e2a class \u4e2d\u6210\u5458\u53d8\u91cf\u7684\u6ce8\u89e3\uff0c\u751f\u6210\u4ee3\u7406\u7c7b\u66ff\u6362\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u7528 @MockBean \u6ce8\u89e3\u3002\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u9700\u8981 mock \u5916\u90e8\u670d\u52a1\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7\u624b\u5de5\u64cd\u4f5c\u7684\u65b9\u5f0f\u89e3\u51b3\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684\uff1a @Mock private ConsumeRecordService consumeRecordService; @BeforeEach public void init() { ReflectionTestUtils.setField(fuelTradeService, \"consumeRecordService\", consumeRecordService); } \u624b\u5de5\u751f\u6210\u5de8\u7075\u795e API \u7684\u4ee3\u7406\u7c7b\uff0c\u5e76\u66ff\u6362\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u3002","title":"\u57fa\u4e8e spring \u73af\u5883 mock \u5de8\u7075\u795e"},{"location":"grus/test/#spring_1","text":"\u6709\u4e9b\u65f6\u5019\uff0c\u53ea\u60f3\u6d4b\u8bd5\u67d0\u4e2a\u7c7b\u81ea\u5df1\u7684\u903b\u8f91\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u7684\u4efb\u4f55\u903b\u8f91\uff0c\u53ef\u4ee5\u5b8c\u5168\u4e0d\u5f15\u5165 spring \u7684\u76f8\u5173\u73af\u5883\u3002\uff08\u505a\u4e00\u4e2a\u7eaf\u6b63\u7684\u201d\u5355\u5143\u201c\u6d4b\u8bd5\uff09 @ExtendWith ( MockitoExtension . class ) public class FuelCardServiceTest { @InjectMocks private FuelCardServiceImpl fuelCardService ; @Mock private FuelCardDao fuelCardDao ; @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); } } \u6216\u8005 public class FuelCardServiceTest { @InjectMocks private FuelCardServiceImpl fuelCardService ; @Mock private FuelCardDao fuelCardDao ; @BeforeEach public void initMock () { MockitoAnnotations . initMocks ( this ); } @Test public void test_0_getCardByCardNo () { FuelCardDO fuelCardDO = new FuelCardDO (); fuelCardDO . setId ( 1 ); fuelCardDO . setCardNo ( \"01\" ); fuelCardDO . setOuterTradeNo ( \"000\" ); given ( this . fuelCardDao . getByCardNo ( \"01\" )). willReturn ( fuelCardDO ); FuelCardResponse fuelCardResponse = fuelCardService . getCardByCardNo ( \"01\" ); assertThat ( fuelCardResponse ). isNotNull (); assertThat ( fuelCardResponse . getCardNo ()). isEqualTo ( \"01\" ); assertThat ( fuelCardResponse . getOuterTradeNo ()). isEqualTo ( \"000\" ); } } \u8fd9\u4e24\u79cd\u521d\u59cb\u5316\u7684\u65b9\u5f0f\u5b8c\u5168\u662f\u4e00\u6837\u7684\u3002","title":"\u4e0d\u4f9d\u8d56 spring \u73af\u5883"},{"location":"grus/web/","text":"web \u6a21\u5757 \u00b6 \u6846\u67b6\u9ed8\u8ba4\u63d0\u4f9b\u4e86 GlobalExceptionHandler \u3002\u5f00\u53d1\u65e0\u9700\u518d\u5199 ExceptionHandler\u3002 \u53ef\u4ee5\u901a\u8fc7 grus.web.error-code-prefix=1002 \uff0c\u914d\u7f6e error-code \u524d\u7f00 GlobalExceptionHandler \u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u5982\u679c\u5e94\u7528\u81ea\u5df1\u5df2\u7ecf\u5199\u4e86 ExceptionHandler\uff0c\u90a3\u4e48\u8fd8\u662f\u4f1a\u4f18\u5148\u4f7f\u7528\u81ea\u5df1\u7684\u3002 \u9879\u76ee\u5728\u8fc1\u79fb\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u81ea\u5df1\u5199\u7684 XXBusinessRuntimeException \u7ee7\u627f com.ciicgat.sdk.lang.convert.ErrorCode \uff0c\u7136\u540e\u5220\u9664\u81ea\u5df1\u7684 ExceptionHandler \u5373\u53ef\u3002 grus \u5b9e\u73b0\u539f\u7406\u5982\u4e0b\uff1a @ExceptionHandler public ApiResponse<Object> handleThrowable(HttpServletRequest request, Throwable throwable) { if (throwable instanceof ErrorCode) { //\u4e3a\u4e86\u5e94\u7528\u8fc1\u79fb\u65b9\u4fbf LOGGER.warn(\"errorCode {} errorMsg {}\", ((ErrorCode) throwable).getErrorCode(), ((ErrorCode) throwable).getErrorMsg()); return ApiResponse.fail((ErrorCode) throwable); } StringBuffer requestInfo = request.getRequestURL(); request.getParameterMap().forEach((key, value) -> requestInfo.append(key).append(\":\").append(Arrays.toString(value))); String msg = \"\u53d1\u751f\u5f02\u5e38,\u8bf7\u6c42\u4fe1\u606f\u4e3a\uff1a\" + requestInfo.toString(); FrigateNotifier.sendMessageByAppName(msg, throwable); LOGGER.error(msg, throwable); return ApiResponse.fail(new StandardErrorCode(webProperties.getErrorCodePrefix(), 1, 0, \"\u7cfb\u7edf\u9519\u8bef:\" + throwable.getMessage())); } \u73b0\u5728\u6846\u67b6\u4f1a\u81ea\u52a8\u5e2e\u4f60\u586b\u5145 swagger \u914d\u7f6e\u3002\u4f60\u65e0\u9700\u518d\u5199\u914d\u7f6e\u4e86\u3002\u9884\u53d1\u548c\u751f\u4ea7\u73af\u5883\u4f1a\u5173\u95ed swagger \u529f\u80fd\u3002 application.propertis \u6587\u4ef6\u91cc\uff0cciicgat-api.swagger \u914d\u7f6e\u88ab\u79fb\u9664\uff0c\u66ff\u6362\u6210 grus.swagger \u5bf9\u4e8e web \u5c42\u7684\u5e94\u7528\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u4e00\u7ea7 path\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 contextpath: server.servlet.context-path=limit com.ciicgat.sdk.servlet.CorsFilter \u88ab\u5220\u9664\uff0c\u8bf7\u5927\u5bb6\u4f7f\u7528 Spring \u539f\u751f\u7684 CorsRegistry \uff1a @Bean public WebMvcConfigurer webConfigurer() { return new WebMvcConfigurer() { @Override public void addCorsMappings(CorsRegistry registry) { registry .addMapping(\"/**\") .allowedMethods(\"POST\") .allowedOrigins(\"*\") .allowedHeaders(\"*\"); } }; } \u8bb8\u591a server.* \u5c5e\u6027 ( Servlet \u7279\u6709\u7684) \u5df2\u7ecf\u8f6c\u79fb\u5230 server.servlet \u3002\u6bd4\u5982\uff1a server.context-path -> server.servlet.context-path \uff0c server.servlet-path -> spring.mvc.servlet.path \u52a0\u5165\u4e86\u7b80\u5355\u7684 \u6d41\u91cf\u63a7\u5236 \u529f\u80fd\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u6a21\u677f\u7684\u65f6\u5019\uff0c\u5982\u679c\u60f3\u6539\u4e86\u6a21\u677f\u5b9e\u65f6\u770b\u5230\u6548\u679c\uff0c\u9700\u8981\u5728 idea \u91cc\u7684 main \u51fd\u6570\u8bbe\u7f6e\u91cc\uff0c\u914d\u7f6e\u5982\u4e0b\u53c2\u6570\uff1a \u6846\u67b6\u65e5\u5fd7 \u00b6 \u5bf9\u4e8e Controller \u4e2d\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u6846\u67b6\u901a\u8fc7 AOP \u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u65e5\u5fd7\u8f93\u51fa\u80fd\u529b\u3002\u8f93\u51fa\u683c\u5f0f\u5982\u4e0b WEB_REQ METHOD:TestController.doTest PARAM:[{\"name\":\"aa\",\"age\":18},{\"address\":\"\u6211\u5bb6\"}] WEB_RESP METHOD:TestController.doTest RESULT:{\"code\":0,\"msg\":\"OK\",\"data\":true} WEB_EX TestController.doTest java.lang.NullPointerException at com.ciicgat.TestController.service.(TestService.java:201) \u53ef\u4ee5\u5229\u7528\u65e5\u5fd7\u5173\u952e\u8bcd\u66f4\u9ad8\u6548\u7684\u8fdb\u884c\u65e5\u5fd7\u68c0\u7d22\u3002 Web \u65e5\u5fd7\u529f\u80fd\u9ed8\u8ba4\u662f\u4e0d\u542f\u7528\u7684\uff0c\u60f3\u8981\u6253\u5f00\u8be5\u529f\u80fd\u53ef\u4ee5\u5728 boot \u542f\u52a8\u51fd\u6570\u4e0a\u589e\u52a0 @EnableGrusWebLogJob \u6ce8\u89e3\uff1a @SpringBootApplication @EnableGrusWebLogJob public class TestWebApplication {..} \u65e5\u5fd7\u6253\u5370\u4ec5\u9488\u5bf9 Restful \u7684\u63a5\u53e3\u6709\u6548\uff0c\u5bf9\u4e8e springmvc \u9879\u76ee\uff0c\u89c6\u56fe\u63a5\u53e3\u5c06\u4e0d\u4f1a\u6253\u5370\u5bf9\u5e94\u65e5\u5fd7\u3002\u5bf9\u4e8e\u6709\u7279\u6b8a\u7684\u6709\u654f\u611f\u4fe1\u606f\u7684\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528 @LogExclude \u53d6\u6d88\u63a5\u53e3\u7684\u65e5\u5fd7\u6253\u5370\u3002 @ResponseBody @PostMapping ( \"/test\" ) @LogExclude public ApiResponse < String > getPassword ( String code ); \u5982\u679c\u63a5\u53e3\u7684\u51fa\u53c2\u6216\u5165\u53c2\u8d85\u957f\uff0c\u76ee\u524d\u662f\u8d85\u8fc7 2000 \u5b57\u7b26\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u4f1a\u88ab\u622a\u65ad\uff0c\u4e0d\u4f1a\u88ab\u6253\u5370\u3002","title":"web \u6a21\u5757"},{"location":"grus/web/#web","text":"\u6846\u67b6\u9ed8\u8ba4\u63d0\u4f9b\u4e86 GlobalExceptionHandler \u3002\u5f00\u53d1\u65e0\u9700\u518d\u5199 ExceptionHandler\u3002 \u53ef\u4ee5\u901a\u8fc7 grus.web.error-code-prefix=1002 \uff0c\u914d\u7f6e error-code \u524d\u7f00 GlobalExceptionHandler \u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u5982\u679c\u5e94\u7528\u81ea\u5df1\u5df2\u7ecf\u5199\u4e86 ExceptionHandler\uff0c\u90a3\u4e48\u8fd8\u662f\u4f1a\u4f18\u5148\u4f7f\u7528\u81ea\u5df1\u7684\u3002 \u9879\u76ee\u5728\u8fc1\u79fb\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u81ea\u5df1\u5199\u7684 XXBusinessRuntimeException \u7ee7\u627f com.ciicgat.sdk.lang.convert.ErrorCode \uff0c\u7136\u540e\u5220\u9664\u81ea\u5df1\u7684 ExceptionHandler \u5373\u53ef\u3002 grus \u5b9e\u73b0\u539f\u7406\u5982\u4e0b\uff1a @ExceptionHandler public ApiResponse<Object> handleThrowable(HttpServletRequest request, Throwable throwable) { if (throwable instanceof ErrorCode) { //\u4e3a\u4e86\u5e94\u7528\u8fc1\u79fb\u65b9\u4fbf LOGGER.warn(\"errorCode {} errorMsg {}\", ((ErrorCode) throwable).getErrorCode(), ((ErrorCode) throwable).getErrorMsg()); return ApiResponse.fail((ErrorCode) throwable); } StringBuffer requestInfo = request.getRequestURL(); request.getParameterMap().forEach((key, value) -> requestInfo.append(key).append(\":\").append(Arrays.toString(value))); String msg = \"\u53d1\u751f\u5f02\u5e38,\u8bf7\u6c42\u4fe1\u606f\u4e3a\uff1a\" + requestInfo.toString(); FrigateNotifier.sendMessageByAppName(msg, throwable); LOGGER.error(msg, throwable); return ApiResponse.fail(new StandardErrorCode(webProperties.getErrorCodePrefix(), 1, 0, \"\u7cfb\u7edf\u9519\u8bef:\" + throwable.getMessage())); } \u73b0\u5728\u6846\u67b6\u4f1a\u81ea\u52a8\u5e2e\u4f60\u586b\u5145 swagger \u914d\u7f6e\u3002\u4f60\u65e0\u9700\u518d\u5199\u914d\u7f6e\u4e86\u3002\u9884\u53d1\u548c\u751f\u4ea7\u73af\u5883\u4f1a\u5173\u95ed swagger \u529f\u80fd\u3002 application.propertis \u6587\u4ef6\u91cc\uff0cciicgat-api.swagger \u914d\u7f6e\u88ab\u79fb\u9664\uff0c\u66ff\u6362\u6210 grus.swagger \u5bf9\u4e8e web \u5c42\u7684\u5e94\u7528\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u4e00\u7ea7 path\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 contextpath: server.servlet.context-path=limit com.ciicgat.sdk.servlet.CorsFilter \u88ab\u5220\u9664\uff0c\u8bf7\u5927\u5bb6\u4f7f\u7528 Spring \u539f\u751f\u7684 CorsRegistry \uff1a @Bean public WebMvcConfigurer webConfigurer() { return new WebMvcConfigurer() { @Override public void addCorsMappings(CorsRegistry registry) { registry .addMapping(\"/**\") .allowedMethods(\"POST\") .allowedOrigins(\"*\") .allowedHeaders(\"*\"); } }; } \u8bb8\u591a server.* \u5c5e\u6027 ( Servlet \u7279\u6709\u7684) \u5df2\u7ecf\u8f6c\u79fb\u5230 server.servlet \u3002\u6bd4\u5982\uff1a server.context-path -> server.servlet.context-path \uff0c server.servlet-path -> spring.mvc.servlet.path \u52a0\u5165\u4e86\u7b80\u5355\u7684 \u6d41\u91cf\u63a7\u5236 \u529f\u80fd\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u6a21\u677f\u7684\u65f6\u5019\uff0c\u5982\u679c\u60f3\u6539\u4e86\u6a21\u677f\u5b9e\u65f6\u770b\u5230\u6548\u679c\uff0c\u9700\u8981\u5728 idea \u91cc\u7684 main \u51fd\u6570\u8bbe\u7f6e\u91cc\uff0c\u914d\u7f6e\u5982\u4e0b\u53c2\u6570\uff1a","title":"web \u6a21\u5757"},{"location":"grus/web/#_1","text":"\u5bf9\u4e8e Controller \u4e2d\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u6846\u67b6\u901a\u8fc7 AOP \u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u65e5\u5fd7\u8f93\u51fa\u80fd\u529b\u3002\u8f93\u51fa\u683c\u5f0f\u5982\u4e0b WEB_REQ METHOD:TestController.doTest PARAM:[{\"name\":\"aa\",\"age\":18},{\"address\":\"\u6211\u5bb6\"}] WEB_RESP METHOD:TestController.doTest RESULT:{\"code\":0,\"msg\":\"OK\",\"data\":true} WEB_EX TestController.doTest java.lang.NullPointerException at com.ciicgat.TestController.service.(TestService.java:201) \u53ef\u4ee5\u5229\u7528\u65e5\u5fd7\u5173\u952e\u8bcd\u66f4\u9ad8\u6548\u7684\u8fdb\u884c\u65e5\u5fd7\u68c0\u7d22\u3002 Web \u65e5\u5fd7\u529f\u80fd\u9ed8\u8ba4\u662f\u4e0d\u542f\u7528\u7684\uff0c\u60f3\u8981\u6253\u5f00\u8be5\u529f\u80fd\u53ef\u4ee5\u5728 boot \u542f\u52a8\u51fd\u6570\u4e0a\u589e\u52a0 @EnableGrusWebLogJob \u6ce8\u89e3\uff1a @SpringBootApplication @EnableGrusWebLogJob public class TestWebApplication {..} \u65e5\u5fd7\u6253\u5370\u4ec5\u9488\u5bf9 Restful \u7684\u63a5\u53e3\u6709\u6548\uff0c\u5bf9\u4e8e springmvc \u9879\u76ee\uff0c\u89c6\u56fe\u63a5\u53e3\u5c06\u4e0d\u4f1a\u6253\u5370\u5bf9\u5e94\u65e5\u5fd7\u3002\u5bf9\u4e8e\u6709\u7279\u6b8a\u7684\u6709\u654f\u611f\u4fe1\u606f\u7684\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528 @LogExclude \u53d6\u6d88\u63a5\u53e3\u7684\u65e5\u5fd7\u6253\u5370\u3002 @ResponseBody @PostMapping ( \"/test\" ) @LogExclude public ApiResponse < String > getPassword ( String code ); \u5982\u679c\u63a5\u53e3\u7684\u51fa\u53c2\u6216\u5165\u53c2\u8d85\u957f\uff0c\u76ee\u524d\u662f\u8d85\u8fc7 2000 \u5b57\u7b26\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u4f1a\u88ab\u622a\u65ad\uff0c\u4e0d\u4f1a\u88ab\u6253\u5370\u3002","title":"\u6846\u67b6\u65e5\u5fd7"},{"location":"grus/web/grus-freemarker/","text":"freemarker \u4f7f\u7528 \u00b6 \u524d\u540e\u7aef\u5206\u79bb\u5728\u6211\u4eec\u516c\u53f8\u8fd8\u6ca1\u6709\u5168\u9762\u843d\u5730\uff0c\u5f88\u591a\u9875\u9762\u4f1a\u6709\u4f7f\u7528\u670d\u52a1\u7aef\u6e32\u67d3\u65b9\u5f0f\u5f00\u53d1\u7684\u9700\u8981\u3002\u8fd9\u91cc\u5217\u4e3e\u4e00\u4e9b\u5e38\u7528\u7684 freemarker \u7684\u6280\u5de7\u4e0e\u6ce8\u610f\u4e8b\u9879\u3002 \u914d\u7f6e \u00b6 \u4f7f\u7528\u65f6\uff0c\u76f4\u63a5\u5f15\u5165 GAV \u5373\u53ef\uff08\u65e0\u7279\u6b8a\u9700\u6c42\uff0c\u5927\u591a\u6570 freemarker \u7684\u914d\u7f6e\u65e0\u9700\u914d\u7f6e\uff0c\u91c7\u7528\u9ed8\u8ba4\u5373\u53ef\uff09\u3002 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-freemarker </artifactId> </dependency> \u6a21\u677f\u540e\u7f00 - suffix \u00b6 \u65b0\u7248\u672c spring.freemarker.suffix \uff0c\u9ed8\u8ba4\u4e3a .ftlh \u3002\u8001\u9879\u76ee\u5347\u7ea7\u65f6\u5f97\u6ce8\u610f\uff0c\u5efa\u8bae\u624b\u52a8\u8bbe\u7f6e spring.freemarker.suffix=.ftl \u3002 \u6570\u5b57\u683c\u5f0f\u5316 - number_format \u00b6 freemarker \u9488\u5bf9 Integer \uff0c Long \u7b49\u6570\u5b57\u7c7b\u578b\uff0c\u5728\u6e32\u67d3\u65f6\u4f1a\u9ed8\u8ba4\u6dfb\u52a0\u5343\u4f4d\u5206\u9694\u7b26\uff0c\u4f8b\u5982\uff1a 1000 \u4f1a\u6e32\u67d3\u6210 1,000 \u3002\u8fd9\u5bf9\u540e\u7eed\u9875\u9762\u6570\u636e\u64cd\u4f5c\u548c\u8df3\u8f6c\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u9700\u8981\u53bb\u9664\u3002 \u5355\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ${integer?c} \uff0c\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u5f88\u9ebb\u70e6\uff0c\u5f3a\u70c8\u5efa\u8bae\u8fdb\u884c\u7edf\u4e00\u7684\u8bbe\u7f6e\uff0c\u5982\u4e0b\uff1a spring.freemarker.settings.number_format = 0.## \u610f\u5473\u7740\u6570\u5b57\u5c0f\u6570\u4f4d\u6700\u591a\u5c55\u793a\u4e24\u4f4d\uff0c\u4e3a 0 \u5219\u9690\u85cf\uff0c\u4e0d\u4f1a\u663e\u793a\u5343\u4f4d\u5206\u9694\u7b26\uff0c\u4f8b\u5982\uff1a1001 \u6e32\u67d3\u6210 1001\uff0c1001.1 \u4f1a\u6e32\u67d3\u6210 1001.1\uff0c1001.001 \u4f1a\u6e32\u67d3\u6210 1001\u3002 \u6a21\u677f\u6e32\u67d3\u5f02\u5e38 \u00b6 \u4f7f\u7528 freemark \u6e32\u67d3\u9875\u9762\u65f6\uff0c\u5982\u679c\u6e32\u67d3\u4e0d\u6b63\u786e\uff0c\u9875\u9762\u4e0a\u4f1a\u51fa\u73b0\u9ed8\u8ba4\u7684\u62a5\u9519\u63d0\u793a\uff0c\u53ef\u901a\u8fc7\u5982\u4e0b\u5173\u95ed\uff1a spring.freemarker.settings.template_exception_handler = ignore \u907f\u514d\u8f6c\u4e49 \u00b6 \u5728\u65b0\u7684\u7248\u672c\u4e2d\uff0c\u4e3a\u4e86\u5b89\u5168\uff0c\u5982\u679c\u6e32\u67d3\u7684\u5b57\u7b26\u4e32\u662f html \u65f6\uff0c\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u8f6c\u4e49\u64cd\u4f5c\uff0c\u907f\u514d\u6e32\u67d3\u7684\u5185\u5bb9\u5f62\u6210 dom \u8282\u70b9\u5c55\u793a\u3002 \u4f46\u662f\u6709\u7684\u65f6\u5019\u4f8b\u5982\uff1a\u81ea\u5b9a\u4e49\u6a21\u677f\u7b49\u573a\u666f\uff0c\u5e0c\u671b\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u80fd\u591f\u5f62\u6210\u9875\u9762\uff0c\u9700\u8981\u5173\u95ed\u8f6c\u4e49\u529f\u80fd\uff0c\u5373\uff1a ${previewTemplate?no_esc!''} \u3002 \u901a\u7528\u53c2\u6570 \u00b6 \u5168\u5c40\u53d8\u91cf \u00b6 \u5f00\u53d1\u65f6\uff0c\u6709\u65f6\u9700\u8981\u8bbe\u7f6e\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u6216\u5168\u5c40\u51fd\u6570\uff0c\u4f8b\u5982\uff1a\u9759\u6001\u8d44\u6e90\u5730\u5740\uff0c\u7248\u672c\u53f7\u7b49\u7b49\uff0cfreemarker \u652f\u6301\u76f8\u5173\u5199\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a @Configuration public class FreeMarkerConfig { @Resource private freemarker . template . Configuration configuration ; @Resource private FreeMarkerViewResolver freeMarkerViewResolver ; @Resource private TestUtil testUtil ; @PostConstruct public void setConfiguration () throws TemplateModelException { // \u89e3\u51b3 \u7531\u4e8e\u9ed8\u8ba4\u517c\u5bb9 HTTP 1.0 \u4ea7\u751f\u7684 https \u91cd\u5b9a\u5411\u540e\u53d8\u6210 http \u95ee\u9898 freeMarkerViewResolver . setRedirectHttp10Compatible ( false ); if ( WorkRegion . getCurrentWorkRegion (). isDevelop () || WorkRegion . getCurrentWorkRegion (). isTest ()) { configuration . setSharedVariable ( \"static_env\" , \"tech\" ); } else { configuration . setSharedVariable ( \"static_env\" , \"com\" ); } configuration . setSharedVariable ( \"g_env\" , AppConstant . PUBLIC_DOMAIN_SUFFIX ); configuration . setSharedVariable ( \"version\" , \"1.0.0\" ); configuration . setSharedVariable ( \"testUtil\" , testUtil ); } } \u767b\u5f55\u53d8\u91cf \u00b6 \u6709\u4e9b\u9875\u9762\u6709\u4e00\u4e9b\u516c\u7528\u7684\u5c55\u793a\uff0c\u4f8b\u5982\uff1aPC \u9875\u9762\u5c55\u793a\u7684\u9875\u5934\u7b49\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u91c7\u7528\u767b\u5f55\u62e6\u622a\u5668\u7edf\u4e00\u653e\u7f6e\u5f53\u524d\u767b\u5f55\u7528\u6237\u4fe1\u606f\uff0c\u907f\u514d\u5728\u6bcf\u4e2a controller \u5355\u72ec\u5904\u7406\u3002\u793a\u4f8b\u5982\u4e0b\uff1a @Component public class LoginInterceptor implements HandlerInterceptor { ... @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { if ( modelAndView == null ) { return ; } AppUser currentUser = ContextHolder . getCurrentUser (); modelAndView . addObject ( \"appUser\" , currentUser ); } ... }","title":"Freemarker\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/web/grus-freemarker/#freemarker","text":"\u524d\u540e\u7aef\u5206\u79bb\u5728\u6211\u4eec\u516c\u53f8\u8fd8\u6ca1\u6709\u5168\u9762\u843d\u5730\uff0c\u5f88\u591a\u9875\u9762\u4f1a\u6709\u4f7f\u7528\u670d\u52a1\u7aef\u6e32\u67d3\u65b9\u5f0f\u5f00\u53d1\u7684\u9700\u8981\u3002\u8fd9\u91cc\u5217\u4e3e\u4e00\u4e9b\u5e38\u7528\u7684 freemarker \u7684\u6280\u5de7\u4e0e\u6ce8\u610f\u4e8b\u9879\u3002","title":"freemarker \u4f7f\u7528"},{"location":"grus/web/grus-freemarker/#_1","text":"\u4f7f\u7528\u65f6\uff0c\u76f4\u63a5\u5f15\u5165 GAV \u5373\u53ef\uff08\u65e0\u7279\u6b8a\u9700\u6c42\uff0c\u5927\u591a\u6570 freemarker \u7684\u914d\u7f6e\u65e0\u9700\u914d\u7f6e\uff0c\u91c7\u7528\u9ed8\u8ba4\u5373\u53ef\uff09\u3002 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-freemarker </artifactId> </dependency>","title":"\u914d\u7f6e"},{"location":"grus/web/grus-freemarker/#-suffix","text":"\u65b0\u7248\u672c spring.freemarker.suffix \uff0c\u9ed8\u8ba4\u4e3a .ftlh \u3002\u8001\u9879\u76ee\u5347\u7ea7\u65f6\u5f97\u6ce8\u610f\uff0c\u5efa\u8bae\u624b\u52a8\u8bbe\u7f6e spring.freemarker.suffix=.ftl \u3002","title":"\u6a21\u677f\u540e\u7f00 - suffix"},{"location":"grus/web/grus-freemarker/#-number_format","text":"freemarker \u9488\u5bf9 Integer \uff0c Long \u7b49\u6570\u5b57\u7c7b\u578b\uff0c\u5728\u6e32\u67d3\u65f6\u4f1a\u9ed8\u8ba4\u6dfb\u52a0\u5343\u4f4d\u5206\u9694\u7b26\uff0c\u4f8b\u5982\uff1a 1000 \u4f1a\u6e32\u67d3\u6210 1,000 \u3002\u8fd9\u5bf9\u540e\u7eed\u9875\u9762\u6570\u636e\u64cd\u4f5c\u548c\u8df3\u8f6c\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u9700\u8981\u53bb\u9664\u3002 \u5355\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ${integer?c} \uff0c\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u5f88\u9ebb\u70e6\uff0c\u5f3a\u70c8\u5efa\u8bae\u8fdb\u884c\u7edf\u4e00\u7684\u8bbe\u7f6e\uff0c\u5982\u4e0b\uff1a spring.freemarker.settings.number_format = 0.## \u610f\u5473\u7740\u6570\u5b57\u5c0f\u6570\u4f4d\u6700\u591a\u5c55\u793a\u4e24\u4f4d\uff0c\u4e3a 0 \u5219\u9690\u85cf\uff0c\u4e0d\u4f1a\u663e\u793a\u5343\u4f4d\u5206\u9694\u7b26\uff0c\u4f8b\u5982\uff1a1001 \u6e32\u67d3\u6210 1001\uff0c1001.1 \u4f1a\u6e32\u67d3\u6210 1001.1\uff0c1001.001 \u4f1a\u6e32\u67d3\u6210 1001\u3002","title":"\u6570\u5b57\u683c\u5f0f\u5316 - number_format"},{"location":"grus/web/grus-freemarker/#_2","text":"\u4f7f\u7528 freemark \u6e32\u67d3\u9875\u9762\u65f6\uff0c\u5982\u679c\u6e32\u67d3\u4e0d\u6b63\u786e\uff0c\u9875\u9762\u4e0a\u4f1a\u51fa\u73b0\u9ed8\u8ba4\u7684\u62a5\u9519\u63d0\u793a\uff0c\u53ef\u901a\u8fc7\u5982\u4e0b\u5173\u95ed\uff1a spring.freemarker.settings.template_exception_handler = ignore","title":"\u6a21\u677f\u6e32\u67d3\u5f02\u5e38"},{"location":"grus/web/grus-freemarker/#_3","text":"\u5728\u65b0\u7684\u7248\u672c\u4e2d\uff0c\u4e3a\u4e86\u5b89\u5168\uff0c\u5982\u679c\u6e32\u67d3\u7684\u5b57\u7b26\u4e32\u662f html \u65f6\uff0c\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u8f6c\u4e49\u64cd\u4f5c\uff0c\u907f\u514d\u6e32\u67d3\u7684\u5185\u5bb9\u5f62\u6210 dom \u8282\u70b9\u5c55\u793a\u3002 \u4f46\u662f\u6709\u7684\u65f6\u5019\u4f8b\u5982\uff1a\u81ea\u5b9a\u4e49\u6a21\u677f\u7b49\u573a\u666f\uff0c\u5e0c\u671b\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u80fd\u591f\u5f62\u6210\u9875\u9762\uff0c\u9700\u8981\u5173\u95ed\u8f6c\u4e49\u529f\u80fd\uff0c\u5373\uff1a ${previewTemplate?no_esc!''} \u3002","title":"\u907f\u514d\u8f6c\u4e49"},{"location":"grus/web/grus-freemarker/#_4","text":"","title":"\u901a\u7528\u53c2\u6570"},{"location":"grus/web/grus-freemarker/#_5","text":"\u5f00\u53d1\u65f6\uff0c\u6709\u65f6\u9700\u8981\u8bbe\u7f6e\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u6216\u5168\u5c40\u51fd\u6570\uff0c\u4f8b\u5982\uff1a\u9759\u6001\u8d44\u6e90\u5730\u5740\uff0c\u7248\u672c\u53f7\u7b49\u7b49\uff0cfreemarker \u652f\u6301\u76f8\u5173\u5199\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a @Configuration public class FreeMarkerConfig { @Resource private freemarker . template . Configuration configuration ; @Resource private FreeMarkerViewResolver freeMarkerViewResolver ; @Resource private TestUtil testUtil ; @PostConstruct public void setConfiguration () throws TemplateModelException { // \u89e3\u51b3 \u7531\u4e8e\u9ed8\u8ba4\u517c\u5bb9 HTTP 1.0 \u4ea7\u751f\u7684 https \u91cd\u5b9a\u5411\u540e\u53d8\u6210 http \u95ee\u9898 freeMarkerViewResolver . setRedirectHttp10Compatible ( false ); if ( WorkRegion . getCurrentWorkRegion (). isDevelop () || WorkRegion . getCurrentWorkRegion (). isTest ()) { configuration . setSharedVariable ( \"static_env\" , \"tech\" ); } else { configuration . setSharedVariable ( \"static_env\" , \"com\" ); } configuration . setSharedVariable ( \"g_env\" , AppConstant . PUBLIC_DOMAIN_SUFFIX ); configuration . setSharedVariable ( \"version\" , \"1.0.0\" ); configuration . setSharedVariable ( \"testUtil\" , testUtil ); } }","title":"\u5168\u5c40\u53d8\u91cf"},{"location":"grus/web/grus-freemarker/#_6","text":"\u6709\u4e9b\u9875\u9762\u6709\u4e00\u4e9b\u516c\u7528\u7684\u5c55\u793a\uff0c\u4f8b\u5982\uff1aPC \u9875\u9762\u5c55\u793a\u7684\u9875\u5934\u7b49\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u91c7\u7528\u767b\u5f55\u62e6\u622a\u5668\u7edf\u4e00\u653e\u7f6e\u5f53\u524d\u767b\u5f55\u7528\u6237\u4fe1\u606f\uff0c\u907f\u514d\u5728\u6bcf\u4e2a controller \u5355\u72ec\u5904\u7406\u3002\u793a\u4f8b\u5982\u4e0b\uff1a @Component public class LoginInterceptor implements HandlerInterceptor { ... @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { if ( modelAndView == null ) { return ; } AppUser currentUser = ContextHolder . getCurrentUser (); modelAndView . addObject ( \"appUser\" , currentUser ); } ... }","title":"\u767b\u5f55\u53d8\u91cf"},{"location":"grus/web/grus-swagger/","text":"swagger \u4f7f\u7528\u8bf4\u660e \u00b6 \u6211\u4eec\u76ee\u524d\u4f7f\u7528 springfox-swagger \u6765\u751f\u6210\u6587\u6863\u5c55\u793a\uff0c\u5e76\u4e3a\u516c\u53f8\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u63a5\u53e3\u6807\u51c6\u4e0e\u8bf4\u660e\uff0c\u6240\u4ee5\u5199\u6cd5\u4e00\u5b9a\u8981\u89c4\u8303\u3002 \u7279\u522b\u6ce8\u610f\u4e8b\u9879\uff1a \u00b6 \u9488\u5bf9 form \u6216\u8005 query \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u8fd9\u6837\u5199\uff1a @PostMapping ( \"/hello2/{path}\" ) @ApiOperation ( \"hello2\" ) public ApiResponse < String > hello2 ( @PathVariable ( \"path\" ) String path , @NotBlank @Size ( max = 20 ) String id ) { return ApiResponse . success ( path ); } \u4f46\u662f\u8fd9\u6837\uff0c id \u5728 swagger \u9875\u9762\u4e0a\u7684\u5c55\u793a\u4f1a\u6709\u95ee\u9898\uff0c\u4e0d\u7b26\u5408\u9884\u671f \u3002\u5982\u4e0b\uff1a \u6240\u4ee5\u9488\u5bf9\u6b64\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4e00\u5b9a\u8981\u52a0\u4e0a @RequestParam \u6216\u8005 @RequestPart \uff08\u770b\u4f7f\u7528\u573a\u666f\uff09\uff0c\u5373\uff1a @PostMapping ( \"/hello2/{path}\" ) @ApiOperation ( \"hello2\" ) public ApiResponse < String > hello2 ( @PathVariable ( \"path\" ) String path , @RequestParam @NotBlank @Size ( max = 20 ) String id ) { return ApiResponse . success ( path ); } \u5982\u679c id \u4ec0\u4e48\u6ce8\u89e3\u90fd\u4e0d\u52a0\uff0c\u4e5f\u4f1a\u6b63\u5e38\u5c55\u793a\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u9700\u8981\u5bf9\u53c2\u6570\u8fdb\u884c\u4e00\u4e9b\u6821\u9a8c\uff0c\u6240\u4ee5\u4ecd\u5f3a\u70c8\u63a8\u8350\u52a0 @RequestParam \u6ce8\u89e3\u3002\u524d\u9762\u63d0\u5230\u7684\u5c55\u793a\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u662f swagger \u89e3\u6790\u6ce8\u89e3\u7684\u95ee\u9898\uff0c\u6b64\u5904\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8ba8\u8bba\u3002 \u542f\u7528 \u00b6 swagger \u5f00\u53d1/\u6d4b\u8bd5\u9ed8\u8ba4\u5f00\u542f swagger\uff0c\u751f\u4ea7/\u9884\u53d1\u5173\u95ed\u3002 \u901a\u8fc7 grus.swagger.enabled=true/false \u63a7\u5236\u3002 \u5165\u53e3\u5730\u5740 \u00b6 grus \u7248\u672c\u5c0f\u4e8e 2021.1.1 \uff1a http(s)://{host}/{context-path}/swagger-ui.html grus \u7248\u672c\u4ece 2021.1.1 \u5f00\u59cb\uff0c\u5165\u53e3\u5730\u5740\u53d8\u66f4\u4e3a\uff1a http(s)://{host}/{context-path}/swagger-ui/ \u3002 context-path \u7531 application.properties \u6587\u4ef6\u4e2d\u7684 server.servlet.context-path={context-path} \u51b3\u5b9a\u3002\u5982\u679c\u6ca1\u8bbe\u7f6e\uff0c\u5165\u53e3\u5730\u5740\u5219\u4e3a\uff1a http(s)://{host}/swagger-ui.html \u6216 http(s)://{host}/swagger-ui/ web \u00b6 \u9488\u5bf9 ws \u670d\u52a1\uff0c\u6211\u4eec\u90fd\u7528 host \u6765\u533a\u5206\u670d\u52a1\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u9700\u8981\u8bbe\u7f6e context-path\uff0c\u76f4\u63a5 http(s)://{host}/swagger-ui/ \u5373\u53ef\u8bbf\u95ee\u3002 \u4f46\u662f\u9488\u5bf9 web \u670d\u52a1\uff0c\u6211\u4eec\u4e00\u822c\u7528\u4e00\u7ea7 path \u6765\u533a\u5206\u670d\u52a1\uff0c\u90e8\u7f72\u5230\u5f00\u53d1/\u6d4b\u8bd5\u73af\u5883\u540e\uff0c\u76f4\u63a5 http(s)://{host}/swagger-ui/ \u662f\u8bbf\u95ee\u4e0d\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u82e5\u8981\u4f7f\u7528\uff0c\u4e00\u5b9a\u5f97\u914d\u7f6e context-path \u3002 \u540c\u65f6 web \u670d\u52a1\u5927\u591a\u4f1a\u6709\u62e6\u622a\u5668\uff0c\u5728\u62e6\u622a\u5668\u4e2d\u9700\u8981\u53bb\u9664 swagger \u76f8\u5173\u8def\u5f84\u7684\u62e6\u622a\uff08\u4e5f\u53ef\u4ee5\u4e0d\u53bb\u9664\uff0c\u8981\u6c42\u4e00\u5b9a\u8981\u767b\u5f55\u4e86\u624d\u80fd\u8bbf\u95ee\uff09\u3002\u8981\u6392\u9664\u7684\u5730\u5740\u5927\u81f4\u5982\u4e0b\uff1a 2021.1.1 \u524d\uff1a /swagger-ui.html /webjars/springfox-swagger-ui/** /swagger-resources/** /v2/api-docs 2021.1.1 \u540e\uff1a /swagger-ui/** /swagger-resources/** /v2/api-docs /v3/api-docs validator \u00b6 \u6211\u4eec\u9ed8\u8ba4\u5f15\u5165\u4e86 springfox-bean-validators \u6765\u4f18\u5316 swagger \u7684\u5c55\u793a\uff0c\u6548\u679c\u5982\u4e0b\uff1a \u56fe 1 - \u672a\u4f7f\u7528 javax \u6ce8\u89e3 \u56fe 2 - \u4f7f\u7528\u4e86 javax \u6ce8\u89e3 \u5f53\u6211\u4eec\u4f7f\u7528\u4e86 validator \u6765\u6821\u9a8c\u53c2\u6570\u65f6\uff0cswagger \u4f1a\u540c\u6b65\u5c55\u793a\u51fa\u6765\uff0c\u63d0\u9ad8\u4e86\u53ef\u8bfb\u6027\u3002 \u4f46\u662f\u8be5\u7279\u6027\u652f\u6301 javax \u7684\u6ce8\u89e3\u6bd4\u8f83\u597d\uff0c\u522b\u7684\u6269\u5c55\u6ce8\u89e3\uff0c\u5c55\u793a\u6709\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u76f8\u540c\u529f\u80fd\u4e0b\uff0c\u5c3d\u529b\u4f7f\u7528 javax \u7684\u6ce8\u89e3\u66ff\u4ee3 hibernate\uff0c\u4f8b\u5982\uff1a \u9488\u5bf9 String \uff0c\u4f7f\u7528 @javax.validation.constraints.Size \u66ff\u4ee3 @org.hibernate.validator.constraints.Length \uff1b \u9488\u5bf9 Integer \uff0c\u4f7f\u7528 @javax.validation.constraints.Min \uff0c @javax.validation.constraints.Max \u66ff\u4ee3 @org.hibernate.validator.constraints.Range \uff08\u5c55\u793a\u6709\u70b9\u95ee\u9898\uff09\u3002 \u76ee\u524d\u652f\u6301\u7684\u6ce8\u89e3\u5982\u4e0b\uff1a @DecimalMin/@DecimalMax @Min/@Max @NotBlank @NotNull @Pattern @Size ...\uff08\u522b\u7684\u6269\u5c55\u6ce8\u89e3\uff0c\u4f46\u662f\u5c55\u793a\u6709\u53ef\u80fd\u6709\u95ee\u9898\uff09","title":"Swagger\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/web/grus-swagger/#swagger","text":"\u6211\u4eec\u76ee\u524d\u4f7f\u7528 springfox-swagger \u6765\u751f\u6210\u6587\u6863\u5c55\u793a\uff0c\u5e76\u4e3a\u516c\u53f8\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u63a5\u53e3\u6807\u51c6\u4e0e\u8bf4\u660e\uff0c\u6240\u4ee5\u5199\u6cd5\u4e00\u5b9a\u8981\u89c4\u8303\u3002","title":"swagger \u4f7f\u7528\u8bf4\u660e"},{"location":"grus/web/grus-swagger/#_1","text":"\u9488\u5bf9 form \u6216\u8005 query \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u8fd9\u6837\u5199\uff1a @PostMapping ( \"/hello2/{path}\" ) @ApiOperation ( \"hello2\" ) public ApiResponse < String > hello2 ( @PathVariable ( \"path\" ) String path , @NotBlank @Size ( max = 20 ) String id ) { return ApiResponse . success ( path ); } \u4f46\u662f\u8fd9\u6837\uff0c id \u5728 swagger \u9875\u9762\u4e0a\u7684\u5c55\u793a\u4f1a\u6709\u95ee\u9898\uff0c\u4e0d\u7b26\u5408\u9884\u671f \u3002\u5982\u4e0b\uff1a \u6240\u4ee5\u9488\u5bf9\u6b64\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4e00\u5b9a\u8981\u52a0\u4e0a @RequestParam \u6216\u8005 @RequestPart \uff08\u770b\u4f7f\u7528\u573a\u666f\uff09\uff0c\u5373\uff1a @PostMapping ( \"/hello2/{path}\" ) @ApiOperation ( \"hello2\" ) public ApiResponse < String > hello2 ( @PathVariable ( \"path\" ) String path , @RequestParam @NotBlank @Size ( max = 20 ) String id ) { return ApiResponse . success ( path ); } \u5982\u679c id \u4ec0\u4e48\u6ce8\u89e3\u90fd\u4e0d\u52a0\uff0c\u4e5f\u4f1a\u6b63\u5e38\u5c55\u793a\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u9700\u8981\u5bf9\u53c2\u6570\u8fdb\u884c\u4e00\u4e9b\u6821\u9a8c\uff0c\u6240\u4ee5\u4ecd\u5f3a\u70c8\u63a8\u8350\u52a0 @RequestParam \u6ce8\u89e3\u3002\u524d\u9762\u63d0\u5230\u7684\u5c55\u793a\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u662f swagger \u89e3\u6790\u6ce8\u89e3\u7684\u95ee\u9898\uff0c\u6b64\u5904\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8ba8\u8bba\u3002","title":"\u7279\u522b\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"grus/web/grus-swagger/#_2","text":"swagger \u5f00\u53d1/\u6d4b\u8bd5\u9ed8\u8ba4\u5f00\u542f swagger\uff0c\u751f\u4ea7/\u9884\u53d1\u5173\u95ed\u3002 \u901a\u8fc7 grus.swagger.enabled=true/false \u63a7\u5236\u3002","title":"\u542f\u7528"},{"location":"grus/web/grus-swagger/#_3","text":"grus \u7248\u672c\u5c0f\u4e8e 2021.1.1 \uff1a http(s)://{host}/{context-path}/swagger-ui.html grus \u7248\u672c\u4ece 2021.1.1 \u5f00\u59cb\uff0c\u5165\u53e3\u5730\u5740\u53d8\u66f4\u4e3a\uff1a http(s)://{host}/{context-path}/swagger-ui/ \u3002 context-path \u7531 application.properties \u6587\u4ef6\u4e2d\u7684 server.servlet.context-path={context-path} \u51b3\u5b9a\u3002\u5982\u679c\u6ca1\u8bbe\u7f6e\uff0c\u5165\u53e3\u5730\u5740\u5219\u4e3a\uff1a http(s)://{host}/swagger-ui.html \u6216 http(s)://{host}/swagger-ui/","title":"\u5165\u53e3\u5730\u5740"},{"location":"grus/web/grus-swagger/#web","text":"\u9488\u5bf9 ws \u670d\u52a1\uff0c\u6211\u4eec\u90fd\u7528 host \u6765\u533a\u5206\u670d\u52a1\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u9700\u8981\u8bbe\u7f6e context-path\uff0c\u76f4\u63a5 http(s)://{host}/swagger-ui/ \u5373\u53ef\u8bbf\u95ee\u3002 \u4f46\u662f\u9488\u5bf9 web \u670d\u52a1\uff0c\u6211\u4eec\u4e00\u822c\u7528\u4e00\u7ea7 path \u6765\u533a\u5206\u670d\u52a1\uff0c\u90e8\u7f72\u5230\u5f00\u53d1/\u6d4b\u8bd5\u73af\u5883\u540e\uff0c\u76f4\u63a5 http(s)://{host}/swagger-ui/ \u662f\u8bbf\u95ee\u4e0d\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u82e5\u8981\u4f7f\u7528\uff0c\u4e00\u5b9a\u5f97\u914d\u7f6e context-path \u3002 \u540c\u65f6 web \u670d\u52a1\u5927\u591a\u4f1a\u6709\u62e6\u622a\u5668\uff0c\u5728\u62e6\u622a\u5668\u4e2d\u9700\u8981\u53bb\u9664 swagger \u76f8\u5173\u8def\u5f84\u7684\u62e6\u622a\uff08\u4e5f\u53ef\u4ee5\u4e0d\u53bb\u9664\uff0c\u8981\u6c42\u4e00\u5b9a\u8981\u767b\u5f55\u4e86\u624d\u80fd\u8bbf\u95ee\uff09\u3002\u8981\u6392\u9664\u7684\u5730\u5740\u5927\u81f4\u5982\u4e0b\uff1a 2021.1.1 \u524d\uff1a /swagger-ui.html /webjars/springfox-swagger-ui/** /swagger-resources/** /v2/api-docs 2021.1.1 \u540e\uff1a /swagger-ui/** /swagger-resources/** /v2/api-docs /v3/api-docs","title":"web"},{"location":"grus/web/grus-swagger/#validator","text":"\u6211\u4eec\u9ed8\u8ba4\u5f15\u5165\u4e86 springfox-bean-validators \u6765\u4f18\u5316 swagger \u7684\u5c55\u793a\uff0c\u6548\u679c\u5982\u4e0b\uff1a \u56fe 1 - \u672a\u4f7f\u7528 javax \u6ce8\u89e3 \u56fe 2 - \u4f7f\u7528\u4e86 javax \u6ce8\u89e3 \u5f53\u6211\u4eec\u4f7f\u7528\u4e86 validator \u6765\u6821\u9a8c\u53c2\u6570\u65f6\uff0cswagger \u4f1a\u540c\u6b65\u5c55\u793a\u51fa\u6765\uff0c\u63d0\u9ad8\u4e86\u53ef\u8bfb\u6027\u3002 \u4f46\u662f\u8be5\u7279\u6027\u652f\u6301 javax \u7684\u6ce8\u89e3\u6bd4\u8f83\u597d\uff0c\u522b\u7684\u6269\u5c55\u6ce8\u89e3\uff0c\u5c55\u793a\u6709\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u76f8\u540c\u529f\u80fd\u4e0b\uff0c\u5c3d\u529b\u4f7f\u7528 javax \u7684\u6ce8\u89e3\u66ff\u4ee3 hibernate\uff0c\u4f8b\u5982\uff1a \u9488\u5bf9 String \uff0c\u4f7f\u7528 @javax.validation.constraints.Size \u66ff\u4ee3 @org.hibernate.validator.constraints.Length \uff1b \u9488\u5bf9 Integer \uff0c\u4f7f\u7528 @javax.validation.constraints.Min \uff0c @javax.validation.constraints.Max \u66ff\u4ee3 @org.hibernate.validator.constraints.Range \uff08\u5c55\u793a\u6709\u70b9\u95ee\u9898\uff09\u3002 \u76ee\u524d\u652f\u6301\u7684\u6ce8\u89e3\u5982\u4e0b\uff1a @DecimalMin/@DecimalMax @Min/@Max @NotBlank @NotNull @Pattern @Size ...\uff08\u522b\u7684\u6269\u5c55\u6ce8\u89e3\uff0c\u4f46\u662f\u5c55\u793a\u6709\u53ef\u80fd\u6709\u95ee\u9898\uff09","title":"validator"},{"location":"grus/web/grus-validator/","text":"validator \u6a21\u5757 \u00b6 \u8bf7\u6c42\u53c2\u6570\u6821\u9a8c\u3002 hibernate-validator\uff08\u63a8\u8350\u4f7f\u7528\uff09 \u00b6 hibernate-validator \u5728 spring-boot \u4e2d\u9ed8\u8ba4\u5305\u542b\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c\u652f\u6301\u7ea7\u8054\u6821\u9a8c\uff08\u901a\u8fc7 @javax.validation.Valid \uff09\uff0c\u63a8\u8350\u4f7f\u7528\u3002 validator \u57fa\u7840 \u00b6 \u91c7\u7528 hibernate-validator \u65f6\uff0c\u9700\u8981\u6355\u83b7 ValidationException \u548c BindException \u7b49\u7b49\u5f02\u5e38\uff0c\u5982 @RestControllerAdvice @Component public class ExceptionHandler { @ExceptionHandler ( ConstraintViolationException . class ) public ApiResponse handleValidationException ( ConstraintViolationException validationException ) { Set < ConstraintViolation <?>> violations = validationException . getConstraintViolations (); String errorMsg = \"\u53c2\u6570\u9519\u8bef\" ; for ( ConstraintViolation <?> item : violations ) { errorMsg = item . getMessage (); LOGGER . error ( \"\u8bf7\u6c42\u53c2\u6570\u6821\u9a8c\u9519\u8bef,\u539f\u56e0={}\" , item . getMessage ()); } return ApiResponse . fail ( Errors . PARAMETER_ERROR . getErrorCode (), errorMsg ); } @ExceptionHandler ( BindException . class ) public ApiResponse handleBindException ( BindException e ) { LOGGER . warn ( \"BindException, param validate error: \" + e . getMessage ()); return handleBindingResult ( e . getBindingResult ()); } @ExceptionHandler ( MethodArgumentNotValidException . class ) public ApiResponse handleMethodArgumentNotValidException ( MethodArgumentNotValidException e ) { LOGGER . warn ( \"MethodArgumentNotValidException, param validate error: \" + e . getMessage ()); return handleBindingResult ( e . getBindingResult ()); } } \u9ed8\u8ba4\u7684\u63d0\u4f9b\u7684 GlobalExceptionHandler \u5df2\u7ecf\u5904\u7406\u4e86\u8fd9\u4e9b\u5f02\u5e38\u3002 \u63a8\u8350\u5927\u5bb6\u4f7f\u7528 @org.springframework.validation.annotation.Validated \u6ce8\u89e3\uff0c\u53ef\u4ee5\u52a0\u8f7d Controller \u7c7b\u4e0a\uff0c\u5bf9 RequestParam \u751f\u6548\u3002\u5982\u679c\u4f7f\u7528 @Valid \uff0c\u662f\u6ca1\u6709\u529e\u6cd5\u6821\u9a8c RequestParam \u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u524d\u8005\u8fd8\u53ef\u4ee5\u5bf9 springboot \u914d\u7f6e\u6587\u4ef6\u751f\u6548\uff0c\u540e\u8005\u65e0\u6cd5\u505a\u5230\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a @RestController @org.springframework.validation.annotation.Validated public class TestController { @GetMapping ( name = \"\u5065\u5eb7\u68c0\u67e5\" , value = \"/test\" ) @ResponseBody public ApiResponse < String > test ( @NotEmpty ( message = \"id\u4e0d\u80fd\u4e3a\u7a7a\" ) String id ) { return ApiResponse . success ( id ); } } \u53ef\u4ee5\u4f7f\u7528 BindResult \u6ce8\u5165\uff0c\u81ea\u5b9a\u4e49\u5931\u8d25\u8fd4\u56de\u7ed3\u679c \u7f51\u4e0a\u7684\u6559\u7a0b\u4e00\u5927\u5806\uff0c\u63a8\u8350\u5927\u5bb6\u90fd\u770b\u770b\u3002 https://www.cnblogs.com/mr-yang-localhost/p/7812038.html http://hibernate.org/validator/ grus \u5c01\u88c5 \u00b6 \u9700\u8981\u8bbe\u7f6e\u9519\u8bef\u7801\u524d\u7f00\uff0c\u5426\u5219\u9ed8\u8ba4 1000\uff0c grus.web.error-code-prefix=1001 grus \u5bf9\u5176\u8fdb\u884c\u8fc7\u7b80\u5355\u5c01\u88c5\uff0c\u901a\u8fc7 grus.hibernate.validator.enabled=true \u5f00\u542f\uff0c\u9ed8\u8ba4\u5f00\u542f\u5feb\u901f\u5931\u8d25\uff0c\u540e\u7eed\u6709\u53ef\u80fd\u6dfb\u52a0\u66f4\u591a\u652f\u6301 # \u662f\u5426\u5f00\u542f\uff0c\u9ed8\u8ba4 false grus.hibernate.validator.enabled = true # \u5feb\u901f\u5931\u8d25\uff0c\u9ed8\u8ba4\u4e3a true grus.hibernate.validator.fail-fast = true hibernate \u9ed8\u8ba4\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\u6bd4\u8f83\u7b80\u5355\uff08\u672a\u8bbe\u7f6e message \u7684\u8bdd\uff09\uff0c\u4f8b\u5982\uff1a\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u4e0d\u80fd\u5c0f\u4e8e 1\uff0c\u6ca1\u6709\u5b57\u6bb5\u4fe1\u606f\u3002\u6240\u4ee5\u9ed8\u8ba4\u8fdb\u884c\u4e86\u4e00\u5b9a\u5904\u7406\uff1a \u9488\u5bf9\u4f20\u5165\u53c2\u6570\u662f\u5bf9\u8c61\uff0c\u629b\u51fa\u7684\u4e00\u822c\u662f BindException \u548c MethodArgumentNotValidException \uff0c\u4f1a\u9ed8\u8ba4\u5728 message \u524d\u9762\u8bbe\u7f6e\u5b57\u6bb5\u540d\u79f0 \u5982\u679c\u4f7f\u7528\u4e86 @NotEmpty (message=\"id \u4e0d\u80fd\u4e3a\u7a7a\")\uff0c\u4e5f\u4f1a\u6dfb\u52a0\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u4e3a\u201cid id \u4e0d\u80fd\u4e3a\u7a7a\u201d\uff0c\u8bf7\u6ce8\u610f \u5982\u679c\u4f7f\u7528\u4e86 @NotEmpty \uff0c\u9519\u8bef\u4fe1\u606f\u4f1a\u8fd4\u56de id \u4e0d\u80fd\u4e3a\u7a7a \u901a\u8fc7 RequestParam \u6821\u9a8c\u7684\uff0c\u4e0d\u4f1a\u6dfb\u52a0\u524d\u7f00\uff0c\u8bf7\u6ce8\u610f\uff0c\u6709\u9700\u8981\u8bf7\u4e3b\u52a8\u586b\u5199 message \u9488\u5bf9 web \u6216\u8005 bff\uff0c\u53c2\u6570\u6821\u9a8c\u7684\u8fd4\u56de\u4e00\u822c\u6709\u8981\u6c42\uff0c\u4e0d\u80fd\u8fdb\u884c\u9ed8\u8ba4\u5904\u7406\uff0c\u63d0\u4f9b\u4e86\u914d\u7f6e\u5173\u95ed\u76f8\u5173\u529f\u80fd # \u53c2\u6570\u6821\u9a8c\u5f02\u5e38\u65f6, msg \u524d\u662f\u5426\u6dfb\u52a0 fieldName\uff0c\u9ed8\u8ba4\u4e3a true\uff0c\u6539\u6210 false \u53ef\u5173\u95ed grus.web.show-field-name-in-error = true \u6846\u67b6\u63d0\u4f9b\u7684\u51e0\u4e2a\u901a\u7528 validator \u6ce8\u89e3 \u00b6 grus-core \u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u6ce8\u89e3\uff1a com.ciicgat.grus.validation.constraints.CheckHTMLTag com.ciicgat.grus.validation.constraints.DateStr com.ciicgat.grus.validation.constraints.Decimal com.ciicgat.grus.validation.constraints.EnumValue com.ciicgat.grus.validation.constraints.JsonStr \u5982\u679c\u4f60\u89c9\u5f97\u8fd8\u6709\u54ea\u4e9b\u573a\u666f\u7684 validator \u5f88\u901a\u7528\uff0c\u53ef\u4ee5\u8d21\u732e\u8fdb\u6765\u3002 grus-validation \u4f7f\u7528\u8bf4\u660e\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09 \u00b6 grus-boot-starter-validator \u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\uff0c\u65e5\u540e**\u53ef\u80fd\u8003\u8651\u5e9f\u5f03**\uff0c\u5efa\u8bae\u4f7f\u7528 spring-boot-starter-web \u4e2d\u81ea\u5e26\u7684 hibernate-validator \u66ff\u4ee3\u3002\u8001\u9879\u76ee\u5982\u6b63\u5728\u4f7f\u7528 grus-boot-starter-validator \uff0c\u6700\u597d\u6309\u60c5\u51b5\u9010\u6e10\u66ff\u6362\u3002\u6b64\u5904\u53ea\u662f\u4ecb\u7ecd\u4e0b grus-validation \u7684\u6ce8\u610f\u4e8b\u9879\u3002 application.properties \u6587\u4ef6\u91cc\uff0c\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff1a # \u8bbe\u7f6e\u53c2\u6570\u9519\u8bef\u7684\u9519\u8bef\u7801\uff0810\u4f4d\u9519\u8bef\u7801\u7684\u540e5\u4f4d\uff09\uff0c\u5fc5\u586b grus.validation.error-code = 88888 # \u53c2\u6570\u6821\u9a8c\u62e6\u622a\u7684\u5207\u9762\uff08\u53ef\u9009\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539\uff09\uff0c\u9ed8\u8ba4\u62e6\u622aRequestMapping\uff0c\u4e0d\u4f1a\u62e6\u622a PostMapping grus.validation.point-cut = @annotation(org.springframework.web.bind.annotation.RequestMapping) \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3 @Max \uff0c @Min \uff08 com.ciicgat.boot.validator.annotation \u5305\u4e0b\uff0c\u5426\u5219\u4e0d\u751f\u6548\uff09\uff1b \u5bf9\u8c61\u4e0a\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6ce8\u89e3 @Valid \uff0c\u5426\u5219\u4e0d\u751f\u6548\uff1b \u4e0d\u652f\u6301\u7ea7\u8054\u6821\u9a8c\uff0c\u5373 A \u5bf9\u8c61\u91cc\u5305\u542b B \u5bf9\u8c61\uff0cB \u5bf9\u8c61\u65e0\u6cd5\u6821\u9a8c\uff1b \u53c2\u6570\u6821\u9a8c\u9519\u8bef\u4f1a throw ValidateRuntimeException\uff1b \u9ed8\u8ba4\u7684\uff0c GlobalExceptionHandler \u5df2\u7ecf\u5904\u7406\u4e86\u8fd9\u4e2a\u5f02\u5e38\u3002","title":"Validator\u6a21\u5757"},{"location":"grus/web/grus-validator/#validator","text":"\u8bf7\u6c42\u53c2\u6570\u6821\u9a8c\u3002","title":"validator \u6a21\u5757"},{"location":"grus/web/grus-validator/#hibernate-validator","text":"hibernate-validator \u5728 spring-boot \u4e2d\u9ed8\u8ba4\u5305\u542b\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c\u652f\u6301\u7ea7\u8054\u6821\u9a8c\uff08\u901a\u8fc7 @javax.validation.Valid \uff09\uff0c\u63a8\u8350\u4f7f\u7528\u3002","title":"hibernate-validator\uff08\u63a8\u8350\u4f7f\u7528\uff09"},{"location":"grus/web/grus-validator/#validator_1","text":"\u91c7\u7528 hibernate-validator \u65f6\uff0c\u9700\u8981\u6355\u83b7 ValidationException \u548c BindException \u7b49\u7b49\u5f02\u5e38\uff0c\u5982 @RestControllerAdvice @Component public class ExceptionHandler { @ExceptionHandler ( ConstraintViolationException . class ) public ApiResponse handleValidationException ( ConstraintViolationException validationException ) { Set < ConstraintViolation <?>> violations = validationException . getConstraintViolations (); String errorMsg = \"\u53c2\u6570\u9519\u8bef\" ; for ( ConstraintViolation <?> item : violations ) { errorMsg = item . getMessage (); LOGGER . error ( \"\u8bf7\u6c42\u53c2\u6570\u6821\u9a8c\u9519\u8bef,\u539f\u56e0={}\" , item . getMessage ()); } return ApiResponse . fail ( Errors . PARAMETER_ERROR . getErrorCode (), errorMsg ); } @ExceptionHandler ( BindException . class ) public ApiResponse handleBindException ( BindException e ) { LOGGER . warn ( \"BindException, param validate error: \" + e . getMessage ()); return handleBindingResult ( e . getBindingResult ()); } @ExceptionHandler ( MethodArgumentNotValidException . class ) public ApiResponse handleMethodArgumentNotValidException ( MethodArgumentNotValidException e ) { LOGGER . warn ( \"MethodArgumentNotValidException, param validate error: \" + e . getMessage ()); return handleBindingResult ( e . getBindingResult ()); } } \u9ed8\u8ba4\u7684\u63d0\u4f9b\u7684 GlobalExceptionHandler \u5df2\u7ecf\u5904\u7406\u4e86\u8fd9\u4e9b\u5f02\u5e38\u3002 \u63a8\u8350\u5927\u5bb6\u4f7f\u7528 @org.springframework.validation.annotation.Validated \u6ce8\u89e3\uff0c\u53ef\u4ee5\u52a0\u8f7d Controller \u7c7b\u4e0a\uff0c\u5bf9 RequestParam \u751f\u6548\u3002\u5982\u679c\u4f7f\u7528 @Valid \uff0c\u662f\u6ca1\u6709\u529e\u6cd5\u6821\u9a8c RequestParam \u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u524d\u8005\u8fd8\u53ef\u4ee5\u5bf9 springboot \u914d\u7f6e\u6587\u4ef6\u751f\u6548\uff0c\u540e\u8005\u65e0\u6cd5\u505a\u5230\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a @RestController @org.springframework.validation.annotation.Validated public class TestController { @GetMapping ( name = \"\u5065\u5eb7\u68c0\u67e5\" , value = \"/test\" ) @ResponseBody public ApiResponse < String > test ( @NotEmpty ( message = \"id\u4e0d\u80fd\u4e3a\u7a7a\" ) String id ) { return ApiResponse . success ( id ); } } \u53ef\u4ee5\u4f7f\u7528 BindResult \u6ce8\u5165\uff0c\u81ea\u5b9a\u4e49\u5931\u8d25\u8fd4\u56de\u7ed3\u679c \u7f51\u4e0a\u7684\u6559\u7a0b\u4e00\u5927\u5806\uff0c\u63a8\u8350\u5927\u5bb6\u90fd\u770b\u770b\u3002 https://www.cnblogs.com/mr-yang-localhost/p/7812038.html http://hibernate.org/validator/","title":"validator \u57fa\u7840"},{"location":"grus/web/grus-validator/#grus","text":"\u9700\u8981\u8bbe\u7f6e\u9519\u8bef\u7801\u524d\u7f00\uff0c\u5426\u5219\u9ed8\u8ba4 1000\uff0c grus.web.error-code-prefix=1001 grus \u5bf9\u5176\u8fdb\u884c\u8fc7\u7b80\u5355\u5c01\u88c5\uff0c\u901a\u8fc7 grus.hibernate.validator.enabled=true \u5f00\u542f\uff0c\u9ed8\u8ba4\u5f00\u542f\u5feb\u901f\u5931\u8d25\uff0c\u540e\u7eed\u6709\u53ef\u80fd\u6dfb\u52a0\u66f4\u591a\u652f\u6301 # \u662f\u5426\u5f00\u542f\uff0c\u9ed8\u8ba4 false grus.hibernate.validator.enabled = true # \u5feb\u901f\u5931\u8d25\uff0c\u9ed8\u8ba4\u4e3a true grus.hibernate.validator.fail-fast = true hibernate \u9ed8\u8ba4\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\u6bd4\u8f83\u7b80\u5355\uff08\u672a\u8bbe\u7f6e message \u7684\u8bdd\uff09\uff0c\u4f8b\u5982\uff1a\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u4e0d\u80fd\u5c0f\u4e8e 1\uff0c\u6ca1\u6709\u5b57\u6bb5\u4fe1\u606f\u3002\u6240\u4ee5\u9ed8\u8ba4\u8fdb\u884c\u4e86\u4e00\u5b9a\u5904\u7406\uff1a \u9488\u5bf9\u4f20\u5165\u53c2\u6570\u662f\u5bf9\u8c61\uff0c\u629b\u51fa\u7684\u4e00\u822c\u662f BindException \u548c MethodArgumentNotValidException \uff0c\u4f1a\u9ed8\u8ba4\u5728 message \u524d\u9762\u8bbe\u7f6e\u5b57\u6bb5\u540d\u79f0 \u5982\u679c\u4f7f\u7528\u4e86 @NotEmpty (message=\"id \u4e0d\u80fd\u4e3a\u7a7a\")\uff0c\u4e5f\u4f1a\u6dfb\u52a0\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u4e3a\u201cid id \u4e0d\u80fd\u4e3a\u7a7a\u201d\uff0c\u8bf7\u6ce8\u610f \u5982\u679c\u4f7f\u7528\u4e86 @NotEmpty \uff0c\u9519\u8bef\u4fe1\u606f\u4f1a\u8fd4\u56de id \u4e0d\u80fd\u4e3a\u7a7a \u901a\u8fc7 RequestParam \u6821\u9a8c\u7684\uff0c\u4e0d\u4f1a\u6dfb\u52a0\u524d\u7f00\uff0c\u8bf7\u6ce8\u610f\uff0c\u6709\u9700\u8981\u8bf7\u4e3b\u52a8\u586b\u5199 message \u9488\u5bf9 web \u6216\u8005 bff\uff0c\u53c2\u6570\u6821\u9a8c\u7684\u8fd4\u56de\u4e00\u822c\u6709\u8981\u6c42\uff0c\u4e0d\u80fd\u8fdb\u884c\u9ed8\u8ba4\u5904\u7406\uff0c\u63d0\u4f9b\u4e86\u914d\u7f6e\u5173\u95ed\u76f8\u5173\u529f\u80fd # \u53c2\u6570\u6821\u9a8c\u5f02\u5e38\u65f6, msg \u524d\u662f\u5426\u6dfb\u52a0 fieldName\uff0c\u9ed8\u8ba4\u4e3a true\uff0c\u6539\u6210 false \u53ef\u5173\u95ed grus.web.show-field-name-in-error = true","title":"grus \u5c01\u88c5"},{"location":"grus/web/grus-validator/#validator_2","text":"grus-core \u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u6ce8\u89e3\uff1a com.ciicgat.grus.validation.constraints.CheckHTMLTag com.ciicgat.grus.validation.constraints.DateStr com.ciicgat.grus.validation.constraints.Decimal com.ciicgat.grus.validation.constraints.EnumValue com.ciicgat.grus.validation.constraints.JsonStr \u5982\u679c\u4f60\u89c9\u5f97\u8fd8\u6709\u54ea\u4e9b\u573a\u666f\u7684 validator \u5f88\u901a\u7528\uff0c\u53ef\u4ee5\u8d21\u732e\u8fdb\u6765\u3002","title":"\u6846\u67b6\u63d0\u4f9b\u7684\u51e0\u4e2a\u901a\u7528 validator \u6ce8\u89e3"},{"location":"grus/web/grus-validator/#grus-validation","text":"grus-boot-starter-validator \u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\uff0c\u65e5\u540e**\u53ef\u80fd\u8003\u8651\u5e9f\u5f03**\uff0c\u5efa\u8bae\u4f7f\u7528 spring-boot-starter-web \u4e2d\u81ea\u5e26\u7684 hibernate-validator \u66ff\u4ee3\u3002\u8001\u9879\u76ee\u5982\u6b63\u5728\u4f7f\u7528 grus-boot-starter-validator \uff0c\u6700\u597d\u6309\u60c5\u51b5\u9010\u6e10\u66ff\u6362\u3002\u6b64\u5904\u53ea\u662f\u4ecb\u7ecd\u4e0b grus-validation \u7684\u6ce8\u610f\u4e8b\u9879\u3002 application.properties \u6587\u4ef6\u91cc\uff0c\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff1a # \u8bbe\u7f6e\u53c2\u6570\u9519\u8bef\u7684\u9519\u8bef\u7801\uff0810\u4f4d\u9519\u8bef\u7801\u7684\u540e5\u4f4d\uff09\uff0c\u5fc5\u586b grus.validation.error-code = 88888 # \u53c2\u6570\u6821\u9a8c\u62e6\u622a\u7684\u5207\u9762\uff08\u53ef\u9009\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539\uff09\uff0c\u9ed8\u8ba4\u62e6\u622aRequestMapping\uff0c\u4e0d\u4f1a\u62e6\u622a PostMapping grus.validation.point-cut = @annotation(org.springframework.web.bind.annotation.RequestMapping) \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3 @Max \uff0c @Min \uff08 com.ciicgat.boot.validator.annotation \u5305\u4e0b\uff0c\u5426\u5219\u4e0d\u751f\u6548\uff09\uff1b \u5bf9\u8c61\u4e0a\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6ce8\u89e3 @Valid \uff0c\u5426\u5219\u4e0d\u751f\u6548\uff1b \u4e0d\u652f\u6301\u7ea7\u8054\u6821\u9a8c\uff0c\u5373 A \u5bf9\u8c61\u91cc\u5305\u542b B \u5bf9\u8c61\uff0cB \u5bf9\u8c61\u65e0\u6cd5\u6821\u9a8c\uff1b \u53c2\u6570\u6821\u9a8c\u9519\u8bef\u4f1a throw ValidateRuntimeException\uff1b \u9ed8\u8ba4\u7684\uff0c GlobalExceptionHandler \u5df2\u7ecf\u5904\u7406\u4e86\u8fd9\u4e2a\u5f02\u5e38\u3002","title":"grus-validation \u4f7f\u7528\u8bf4\u660e\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09"},{"location":"grus/web/grus-velocity/","text":"Velocity \u6a21\u5757 \u00b6 \u4ece SpringBoot1.5 \u7248\u672c\u5f00\u59cb\uff0c\u5b98\u65b9\u505c\u6b62\u4e86 velocity \u6a21\u677f\u5f15\u64ce\u7684\u652f\u6301\u3002SpringBoot2.0 \u4e4b\u540e\uff0c\u66f4\u662f\u79fb\u9664\u4e86 velocity \u76f8\u5173\u7684\u9002\u914d\u4ee3\u7801\u3002\u5e78\u4e8f\uff0c\u963f\u91cc\u5df4\u5df4\u5b58\u5728\u5927\u91cf\u7684 velocity \u4ee3\u7801\uff0c\u5176\u8fc1\u79fb\u5230\u5176\u4ed6\u5f15\u64ce\u7684\u6210\u672c\u592a\u9ad8\u3002\u6240\u4ee5\uff0c\u5b83\u5bf9 velocity \u6709\u4e86\u6bd4\u8f83\u6709\u529b\u7684\u652f\u6301\uff1a https://github.com/alibaba/velocity-spring-boot-project \u4e0b\u9762\u662f\u4f7f\u7528\u7684\u4ecb\u7ecd\uff0c\u4e5f\u53ef\u4ee5\u770b\u963f\u91cc Github \u4e0a\u63d0\u4f9b\u7684\u4f7f\u7528\u6587\u6863\u3002\u4f7f\u7528\u4f53\u9a8c\u548c SpringBoot \u5176\u4ed6\u6a21\u5757\u5f15\u64ce\u7c7b\u4f3c\u3002 \u793a\u4f8b\u9879\u76ee\uff1a http://gitlab.wuxingdev.cn/java/giveapp-mgr pom \u5f15\u5165 starter\uff1a <dependency> <artifactId>grus-boot-starter-velocity</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u6ce8\u610f\uff0c\u4e0d\u8981\u76f4\u63a5\u5f15\u7528\u963f\u91cc\u5df4\u5df4\u7684 starter\uff0c\u5426\u5219\u4f60\u8fc1\u79fb\u65f6\u9700\u8981\u6539\u7684\u4e1c\u897f\u5f88\u591a\u3002 application \u914d\u7f6e\u6587\u4ef6\uff1a #velocity spring.velocity.enabled = true spring.velocity.resource-loader-path = classpath:/templates spring.velocity.suffix = .vm #layout\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u4f46\u6211\u4eec\u5927\u90e8\u5206\u9879\u76ee\u6ca1\u6709\u4f7f\u7528layout\uff0c\u6240\u4ee5\u9700\u8981\u5173\u95ed spring.velocity.layout-enabled=false spring.velocity.tools-expose-beans = true #toolbox\u7684\u8def\u5f84 spring.velocity.toolboxConfigLocation = /toolbox/tools.xml \u9879\u76ee\u7ed3\u6784\uff1a toolbox \u6587\u4ef6\u793a\u4f8b\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <tools> <data type=\"number\" key=\"TOOLS_VERSION\" value=\"2.0\"/> <data type=\"boolean\" key=\"GENERIC_TOOLS_AVAILABLE\" value=\"true\"/> <toolbox scope=\"application\"> <tool class=\"org.apache.velocity.tools.generic.NumberTool\"/> <tool class=\"org.apache.velocity.tools.generic.FieldTool\"/> <tool class=\"org.apache.velocity.tools.generic.DateTool\"/> <tool class=\"com.ciicgat.giveapp.mgr.tool.EnvUtil\"/> <tool class=\"com.ciicgat.giveapp.mgr.tool.WebPageUtil\"/> </toolbox> <toolbox scope=\"request\"> <tool class=\"org.apache.velocity.tools.view.ParameterTool\"/> </toolbox> </tools> \u5176\u4e2d\uff0c\u4f60\u81ea\u5df1\u5199\u7684 tool \u7c7b\uff0c\u5fc5\u987b\u52a0\u4e0a @DefaultKey \u6ce8\u89e3\uff0c\u5982\u4e0a\u9762\u7684 com.ciicgat.giveapp.mgr.tool.EnvUtil \uff1a @DefaultKey(\"env\") public class EnvUtil { private static final String ENV = WorkRegion.getCurrentWorkRegion().getPublicDomainSuffix(); public EnvUtil() { // } public String getDomainSuffix() { return ENV; } } \u5fc5\u987b\u5f3a\u8c03\u7684\u662f\uff0ctoolbox \u5fc5\u987b\u4e25\u683c\u4ee5\u4e0a\u9762\u65b9\u5f0f\u6765\u914d\u7f6e\uff0c\u5426\u5219\u4e0d\u4f1a\u751f\u6548 \u3002\uff08\u4e4b\u524d\u5927\u90e8\u5206\u9879\u76ee\u90fd\u6ca1\u6709\u91c7\u53d6\u4ee5\u4e0a\u65b9\u5f0f\uff0c\u9700\u8981\u5927\u5bb6\u624b\u52a8\u8c03\u6574\u4e0b\uff09","title":"Velocity\u4f7f\u7528\u8bf4\u660e"},{"location":"grus/web/grus-velocity/#velocity","text":"\u4ece SpringBoot1.5 \u7248\u672c\u5f00\u59cb\uff0c\u5b98\u65b9\u505c\u6b62\u4e86 velocity \u6a21\u677f\u5f15\u64ce\u7684\u652f\u6301\u3002SpringBoot2.0 \u4e4b\u540e\uff0c\u66f4\u662f\u79fb\u9664\u4e86 velocity \u76f8\u5173\u7684\u9002\u914d\u4ee3\u7801\u3002\u5e78\u4e8f\uff0c\u963f\u91cc\u5df4\u5df4\u5b58\u5728\u5927\u91cf\u7684 velocity \u4ee3\u7801\uff0c\u5176\u8fc1\u79fb\u5230\u5176\u4ed6\u5f15\u64ce\u7684\u6210\u672c\u592a\u9ad8\u3002\u6240\u4ee5\uff0c\u5b83\u5bf9 velocity \u6709\u4e86\u6bd4\u8f83\u6709\u529b\u7684\u652f\u6301\uff1a https://github.com/alibaba/velocity-spring-boot-project \u4e0b\u9762\u662f\u4f7f\u7528\u7684\u4ecb\u7ecd\uff0c\u4e5f\u53ef\u4ee5\u770b\u963f\u91cc Github \u4e0a\u63d0\u4f9b\u7684\u4f7f\u7528\u6587\u6863\u3002\u4f7f\u7528\u4f53\u9a8c\u548c SpringBoot \u5176\u4ed6\u6a21\u5757\u5f15\u64ce\u7c7b\u4f3c\u3002 \u793a\u4f8b\u9879\u76ee\uff1a http://gitlab.wuxingdev.cn/java/giveapp-mgr pom \u5f15\u5165 starter\uff1a <dependency> <artifactId>grus-boot-starter-velocity</artifactId> <groupId>com.ciicgat.grus.boot</groupId> </dependency> \u6ce8\u610f\uff0c\u4e0d\u8981\u76f4\u63a5\u5f15\u7528\u963f\u91cc\u5df4\u5df4\u7684 starter\uff0c\u5426\u5219\u4f60\u8fc1\u79fb\u65f6\u9700\u8981\u6539\u7684\u4e1c\u897f\u5f88\u591a\u3002 application \u914d\u7f6e\u6587\u4ef6\uff1a #velocity spring.velocity.enabled = true spring.velocity.resource-loader-path = classpath:/templates spring.velocity.suffix = .vm #layout\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u4f46\u6211\u4eec\u5927\u90e8\u5206\u9879\u76ee\u6ca1\u6709\u4f7f\u7528layout\uff0c\u6240\u4ee5\u9700\u8981\u5173\u95ed spring.velocity.layout-enabled=false spring.velocity.tools-expose-beans = true #toolbox\u7684\u8def\u5f84 spring.velocity.toolboxConfigLocation = /toolbox/tools.xml \u9879\u76ee\u7ed3\u6784\uff1a toolbox \u6587\u4ef6\u793a\u4f8b\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <tools> <data type=\"number\" key=\"TOOLS_VERSION\" value=\"2.0\"/> <data type=\"boolean\" key=\"GENERIC_TOOLS_AVAILABLE\" value=\"true\"/> <toolbox scope=\"application\"> <tool class=\"org.apache.velocity.tools.generic.NumberTool\"/> <tool class=\"org.apache.velocity.tools.generic.FieldTool\"/> <tool class=\"org.apache.velocity.tools.generic.DateTool\"/> <tool class=\"com.ciicgat.giveapp.mgr.tool.EnvUtil\"/> <tool class=\"com.ciicgat.giveapp.mgr.tool.WebPageUtil\"/> </toolbox> <toolbox scope=\"request\"> <tool class=\"org.apache.velocity.tools.view.ParameterTool\"/> </toolbox> </tools> \u5176\u4e2d\uff0c\u4f60\u81ea\u5df1\u5199\u7684 tool \u7c7b\uff0c\u5fc5\u987b\u52a0\u4e0a @DefaultKey \u6ce8\u89e3\uff0c\u5982\u4e0a\u9762\u7684 com.ciicgat.giveapp.mgr.tool.EnvUtil \uff1a @DefaultKey(\"env\") public class EnvUtil { private static final String ENV = WorkRegion.getCurrentWorkRegion().getPublicDomainSuffix(); public EnvUtil() { // } public String getDomainSuffix() { return ENV; } } \u5fc5\u987b\u5f3a\u8c03\u7684\u662f\uff0ctoolbox \u5fc5\u987b\u4e25\u683c\u4ee5\u4e0a\u9762\u65b9\u5f0f\u6765\u914d\u7f6e\uff0c\u5426\u5219\u4e0d\u4f1a\u751f\u6548 \u3002\uff08\u4e4b\u524d\u5927\u90e8\u5206\u9879\u76ee\u90fd\u6ca1\u6709\u91c7\u53d6\u4ee5\u4e0a\u65b9\u5f0f\uff0c\u9700\u8981\u5927\u5bb6\u624b\u52a8\u8c03\u6574\u4e0b\uff09","title":"Velocity \u6a21\u5757"},{"location":"grus/zk/","text":"Zookeeper \u00b6 \u5982\u9700\u4f7f\u7528 ZK \u76f8\u5173\u7279\u6027\uff0c\u9996\u5148\u5728 POM \u6587\u4ef6\u4e2d\u6dfb\u52a0 <dependency> <artifactId> grus-boot-starter-zk </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency> \u5206\u5e03\u5f0f\u9501 \u00b6 starter \u6240\u5f15\u7528\u7684 autoconfigure \u6a21\u5757\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6ce8\u5165\u53ef\u751f\u6210\u5206\u5e03\u5f0f\u9501\u7684\u5de5\u5382\u7c7b DistLockFactory\uff0c\u5de5\u5382\u7c7b\u53ef\u4ee5\u6307\u5b9a\u4e0a\u9501\u8d44\u6e90\u5e76\u751f\u6210\u9501\u5bf9\u8c61 @Autowired private DistLockFactory distLockFactory ; pubilc void doBiz ( String resourceName ){ // \u901a\u8fc7\u5de5\u5382\u7c7b\u83b7\u53d6\u4e00\u4e2a\u5206\u5e03\u5f0f\u9501 DistLock distLock = distLockFactory . buildLock ( key ); try { // \u9650\u65f6\u83b7\u53d6\u9501\uff0c\u672a\u83b7\u53d6\u5230\u9501\u65f6\u4f1a\u963b\u585e\uff0c\u5728\u8d85\u8fc7\u7ed9\u5b9a\u65f6\u95f4\u540e\u8fd4\u56de\u662f\u5426\u83b7\u53d6\u5230\u9501\u7684\u7ed3\u679c // \u5728zk\u5f02\u5e38\u65f6\uff0c\u83b7\u53d6\u9501\u4e5f\u53ef\u80fd\u629b\u5f02\u5e38\u5904\u7406\uff0c\u6240\u4ee5\u8bf7\u5c06\u7ed3\u679c\u8fd4\u56defalse\u548c\u629b\u5f02\u5e38\u90fd\u5f53\u4f5c\u6ca1\u83b7\u53d6\u5230\u9501\u7684\u6807\u5fd7 boolean result = distLock . tryAcquire ( 1 , TimeUnit . MINUTES ); if ( result ) { // result\u4e3atrue\u8868\u793a\u83b7\u53d6\u5230\u9501\uff0c\u6267\u884c\u4e1a\u52a1\u903b\u8f91 doBizWithResource ( resourceName ); } else { // result \u4e3afalse\u8868\u793a\u672a\u83b7\u53d6\u5230\u9501\uff0c\u6267\u884c\u81ea\u5b9a\u4e49\u903b\u8f91 doSomethingWithNoLock (); } } finally { // \u6b63\u5e38\u6267\u884c\u6216\u53d1\u751f\u5f02\u5e38\u5747\u91ca\u653e\u9501 // \u6700\u597d\u6839\u636e\u83b7\u53d6\u9501\u7684\u7ed3\u679c\u8fdb\u884c\u5224\u65ad\u4e0b\uff0c\u7136\u540e\u518d\u6267\u884c\u91ca\u653e\u9501\u7684\u903b\u8f91\uff0c\u4e0d\u7136\u4f1a\u4ea7\u751f\u5f88\u591a\u65e0\u7528\u7684\u62a5\u9519\u65e5\u5fd7 distLock . release (); } } \u4ee5\u4e0a\u4e3a\u5bf9\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u4f7f\u7528\u524d\u4e0a\u9501\uff0c\u4f7f\u7528\u540e\u91ca\u653e\u7684\u4f8b\u5b50\u3002 \u6846\u67b6\u7684\u53ef\u6269\u5c55\u6027\u8bbe\u8ba1\uff0c\u5f00\u53d1\u8005\u4f7f\u7528\u7684\u662f\u5206\u5e03\u5f0f\u9501\u7684\u63a5\u53e3\uff0c\u5176\u9ed8\u8ba4\u5b9e\u73b0\u662f\u901a\u8fc7 ZK \u6765\u5b8c\u6210\u7684\u3002\u6846\u67b6\u53ef\u4ee5\u900f\u660e\u5730\u5347\u7ea7\u9501\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u5347\u7ea7\u63d0\u4f9b\u57fa\u4e8e\u5176\u4ed6\u4e2d\u95f4\u4ef6\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u9501\uff0c\u5e76\u901a\u8fc7 gconf \u914d\u7f6e\u7075\u6d3b\u6307\u5b9a\u3002 \u5728\u5bf9\u5b9e\u9645\u5bf9\u8d44\u6e90\u52a0\u9501\u65f6\uff0c\u6846\u67b6\u4f1a\u5728 ZK \u751f\u6210\u9501\u8def\u5f84\u65f6\uff0c\u9ed8\u8ba4\u4f20\u5165\u5f53\u524d\u542f\u52a8\u7684\u670d\u52a1\u540d\uff08\u5982 payment\uff09\u3002\u5f00\u53d1\u8005\u4f20\u5165\u7684 key \u540d\u53ea\u9700\u8003\u8651\u670d\u52a1\u5185\u7684\u547d\u540d\u533a\u5206\u3002 \u5206\u5e03\u5f0f ID \u751f\u6210\u5668 \u00b6 starter \u6240\u5f15\u7528\u7684 autoconfigure \u6a21\u5757\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6ce8\u5165 SnowflakeIdGenerator\uff0c\u7528\u96ea\u82b1\u7b97\u6cd5\u751f\u6210 ID\u3002Zookeeper \u8d77\u5230\u7684\u4f5c\u7528\u662f\u4e3a\u670d\u52a1\u5185\u7684\u4e0d\u540c\u673a\u5668\u5206\u914d\u673a\u5668\u7801\u3002 // IdGenerator\u4e3a\u516c\u5171\u63a5\u53e3\uff0cSnowflakeIdGenerator\u4e3a\u5176\u9ed8\u8ba4\u5b9e\u73b0 @Autowired private IdGenerator idGenerator ; public String genOrderNo (){ // \u5e8f\u53f7 = yyyyMMdd + 16\u4f4d\u5341\u8fdb\u5236\u7684\u6574\u6570\uff08\u5de6\u8865\u96f6\uff09 // \u6574\u6570 = \u673a\u5668\u7801 10\u4f4d + \u5929\u79d2\u6570 17\u4f4d + \u5faa\u73af\u81ea\u589e\u5e8f\u5217 17bit + \u968f\u673a\u6570 8bit = 52bit 16\u4f4d\u5341\u8fdb\u5236\u6574\u6570 return idGenerator . makeNo (); } public Long genId (){ // \u6574\u6570 = \u5929\u6570 20\u4f4d + \u5929\u79d2\u6570 17\u4f4d + \u673a\u5668\u7801 10\u4f4d + \u5faa\u73af\u81ea\u589e\u5e8f\u5217 17bit = 64bit return idGenerator . make (); } \u751f\u6210\u5668\u652f\u6301 String \u548c Long \u578b\u4e24\u79cd\u5e8f\u53f7\u7c7b\u578b\uff0c\u5e76\u4e14\u6709\u5176\u5bf9\u5e94\u7684\u751f\u6210\u89c4\u5219\u3002 String \u7c7b\u578b\u7684\u5e8f\u53f7\u751f\u6210\u65f6\uff0c\u65e5\u671f\u524d\u7f00\u652f\u6301\u81ea\u5b9a\u4e49\uff0c\u914d\u7f6e\u9879\u4e3a{grus.idgen.dateFormat}\u3002\u4f46\u65e5\u671f\u5e94\u6700\u5c11\u5305\u542b yyMMdd\uff0c\u4ee5\u4fdd\u8bc1\u5e8f\u53f7\u5728 100 \u5e74\u5185\u4e0d\u4f1a\u53d1\u751f\u91cd\u590d\u3002","title":"Zookeeper"},{"location":"grus/zk/#zookeeper","text":"\u5982\u9700\u4f7f\u7528 ZK \u76f8\u5173\u7279\u6027\uff0c\u9996\u5148\u5728 POM \u6587\u4ef6\u4e2d\u6dfb\u52a0 <dependency> <artifactId> grus-boot-starter-zk </artifactId> <groupId> com.ciicgat.grus.boot </groupId> </dependency>","title":"Zookeeper"},{"location":"grus/zk/#_1","text":"starter \u6240\u5f15\u7528\u7684 autoconfigure \u6a21\u5757\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6ce8\u5165\u53ef\u751f\u6210\u5206\u5e03\u5f0f\u9501\u7684\u5de5\u5382\u7c7b DistLockFactory\uff0c\u5de5\u5382\u7c7b\u53ef\u4ee5\u6307\u5b9a\u4e0a\u9501\u8d44\u6e90\u5e76\u751f\u6210\u9501\u5bf9\u8c61 @Autowired private DistLockFactory distLockFactory ; pubilc void doBiz ( String resourceName ){ // \u901a\u8fc7\u5de5\u5382\u7c7b\u83b7\u53d6\u4e00\u4e2a\u5206\u5e03\u5f0f\u9501 DistLock distLock = distLockFactory . buildLock ( key ); try { // \u9650\u65f6\u83b7\u53d6\u9501\uff0c\u672a\u83b7\u53d6\u5230\u9501\u65f6\u4f1a\u963b\u585e\uff0c\u5728\u8d85\u8fc7\u7ed9\u5b9a\u65f6\u95f4\u540e\u8fd4\u56de\u662f\u5426\u83b7\u53d6\u5230\u9501\u7684\u7ed3\u679c // \u5728zk\u5f02\u5e38\u65f6\uff0c\u83b7\u53d6\u9501\u4e5f\u53ef\u80fd\u629b\u5f02\u5e38\u5904\u7406\uff0c\u6240\u4ee5\u8bf7\u5c06\u7ed3\u679c\u8fd4\u56defalse\u548c\u629b\u5f02\u5e38\u90fd\u5f53\u4f5c\u6ca1\u83b7\u53d6\u5230\u9501\u7684\u6807\u5fd7 boolean result = distLock . tryAcquire ( 1 , TimeUnit . MINUTES ); if ( result ) { // result\u4e3atrue\u8868\u793a\u83b7\u53d6\u5230\u9501\uff0c\u6267\u884c\u4e1a\u52a1\u903b\u8f91 doBizWithResource ( resourceName ); } else { // result \u4e3afalse\u8868\u793a\u672a\u83b7\u53d6\u5230\u9501\uff0c\u6267\u884c\u81ea\u5b9a\u4e49\u903b\u8f91 doSomethingWithNoLock (); } } finally { // \u6b63\u5e38\u6267\u884c\u6216\u53d1\u751f\u5f02\u5e38\u5747\u91ca\u653e\u9501 // \u6700\u597d\u6839\u636e\u83b7\u53d6\u9501\u7684\u7ed3\u679c\u8fdb\u884c\u5224\u65ad\u4e0b\uff0c\u7136\u540e\u518d\u6267\u884c\u91ca\u653e\u9501\u7684\u903b\u8f91\uff0c\u4e0d\u7136\u4f1a\u4ea7\u751f\u5f88\u591a\u65e0\u7528\u7684\u62a5\u9519\u65e5\u5fd7 distLock . release (); } } \u4ee5\u4e0a\u4e3a\u5bf9\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u4f7f\u7528\u524d\u4e0a\u9501\uff0c\u4f7f\u7528\u540e\u91ca\u653e\u7684\u4f8b\u5b50\u3002 \u6846\u67b6\u7684\u53ef\u6269\u5c55\u6027\u8bbe\u8ba1\uff0c\u5f00\u53d1\u8005\u4f7f\u7528\u7684\u662f\u5206\u5e03\u5f0f\u9501\u7684\u63a5\u53e3\uff0c\u5176\u9ed8\u8ba4\u5b9e\u73b0\u662f\u901a\u8fc7 ZK \u6765\u5b8c\u6210\u7684\u3002\u6846\u67b6\u53ef\u4ee5\u900f\u660e\u5730\u5347\u7ea7\u9501\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u5347\u7ea7\u63d0\u4f9b\u57fa\u4e8e\u5176\u4ed6\u4e2d\u95f4\u4ef6\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u9501\uff0c\u5e76\u901a\u8fc7 gconf \u914d\u7f6e\u7075\u6d3b\u6307\u5b9a\u3002 \u5728\u5bf9\u5b9e\u9645\u5bf9\u8d44\u6e90\u52a0\u9501\u65f6\uff0c\u6846\u67b6\u4f1a\u5728 ZK \u751f\u6210\u9501\u8def\u5f84\u65f6\uff0c\u9ed8\u8ba4\u4f20\u5165\u5f53\u524d\u542f\u52a8\u7684\u670d\u52a1\u540d\uff08\u5982 payment\uff09\u3002\u5f00\u53d1\u8005\u4f20\u5165\u7684 key \u540d\u53ea\u9700\u8003\u8651\u670d\u52a1\u5185\u7684\u547d\u540d\u533a\u5206\u3002","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"grus/zk/#id","text":"starter \u6240\u5f15\u7528\u7684 autoconfigure \u6a21\u5757\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6ce8\u5165 SnowflakeIdGenerator\uff0c\u7528\u96ea\u82b1\u7b97\u6cd5\u751f\u6210 ID\u3002Zookeeper \u8d77\u5230\u7684\u4f5c\u7528\u662f\u4e3a\u670d\u52a1\u5185\u7684\u4e0d\u540c\u673a\u5668\u5206\u914d\u673a\u5668\u7801\u3002 // IdGenerator\u4e3a\u516c\u5171\u63a5\u53e3\uff0cSnowflakeIdGenerator\u4e3a\u5176\u9ed8\u8ba4\u5b9e\u73b0 @Autowired private IdGenerator idGenerator ; public String genOrderNo (){ // \u5e8f\u53f7 = yyyyMMdd + 16\u4f4d\u5341\u8fdb\u5236\u7684\u6574\u6570\uff08\u5de6\u8865\u96f6\uff09 // \u6574\u6570 = \u673a\u5668\u7801 10\u4f4d + \u5929\u79d2\u6570 17\u4f4d + \u5faa\u73af\u81ea\u589e\u5e8f\u5217 17bit + \u968f\u673a\u6570 8bit = 52bit 16\u4f4d\u5341\u8fdb\u5236\u6574\u6570 return idGenerator . makeNo (); } public Long genId (){ // \u6574\u6570 = \u5929\u6570 20\u4f4d + \u5929\u79d2\u6570 17\u4f4d + \u673a\u5668\u7801 10\u4f4d + \u5faa\u73af\u81ea\u589e\u5e8f\u5217 17bit = 64bit return idGenerator . make (); } \u751f\u6210\u5668\u652f\u6301 String \u548c Long \u578b\u4e24\u79cd\u5e8f\u53f7\u7c7b\u578b\uff0c\u5e76\u4e14\u6709\u5176\u5bf9\u5e94\u7684\u751f\u6210\u89c4\u5219\u3002 String \u7c7b\u578b\u7684\u5e8f\u53f7\u751f\u6210\u65f6\uff0c\u65e5\u671f\u524d\u7f00\u652f\u6301\u81ea\u5b9a\u4e49\uff0c\u914d\u7f6e\u9879\u4e3a{grus.idgen.dateFormat}\u3002\u4f46\u65e5\u671f\u5e94\u6700\u5c11\u5305\u542b yyMMdd\uff0c\u4ee5\u4fdd\u8bc1\u5e8f\u53f7\u5728 100 \u5e74\u5185\u4e0d\u4f1a\u53d1\u751f\u91cd\u590d\u3002","title":"\u5206\u5e03\u5f0f ID \u751f\u6210\u5668"},{"location":"others/develop-guide/","text":"\u5e94\u7528\u5f00\u53d1\u6307\u5357 \u00b6 \u672c\u7ae0\u7b80\u5355\u63cf\u8ff0\u4e0b\uff0c\u5f00\u53d1\u4e00\u4e2a\u5173\u7231\u901a\u9879\u76ee\u7ecf\u8fc7\u7684\u6d41\u7a0b\u3002 \u9879\u76ee\u7ed3\u6784 \u00b6 \u6211\u4eec\u670d\u52a1/\u5e94\u7528\u4e00\u822c\u5206\u4e3a web\uff08\u516c\u7f51\u53ef\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u94fe\u63a5\u6570\u636e\u5e93\uff09 \u548c ws\uff08\u516c\u7f51\u4e0d\u53ef\u8bbf\u95ee\uff0c\u53ef\u94fe\u63a5\u6570\u636e\u5e93\uff09\uff0cweb \u901a\u8fc7\u8c03\u7528 ws\uff0c\u6765\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6216\u8005\u6267\u884c\u4e00\u4e9b\u903b\u8f91\u3002 \u6211\u4eec\u4f7f\u7528 maven \u6765\u7ba1\u7406\u9879\u76ee\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff08\u5e94\u7528\uff09\uff0c\u5177\u4f53\u89c1 Grus-\u9879\u76ee\u7ed3\u6784 \u3002 \u9664\u6b64\u5916\uff0c\u5e94\u7528\u6309\u7167\u8bbf\u95ee\u5bf9\u8c61\u5212\u5206\uff0c\u53ef\u4ee5\u5206\u4e3a\uff1a \u5458\u5de5\u7528\u6237-web \u4f01\u4e1a\u7ba1\u7406\u5458-web \u5546\u5bb6\u7ba1\u7406\u5458-web GAT-MGR \u7528\u6237 \u5e95\u5c42\u670d\u52a1-ws \u5176\u4ed6\uff0c\u4e0d\u9650\u5236\u8bbf\u95ee\u7528\u6237\u6216\u8005\u81ea\u5b9a\u4e49-web \u5728\u5b9e\u9645\u5f00\u53d1\u4e00\u4e2a\u9879\u76ee\u524d\uff0c\u5f97\u660e\u786e\u8be5\u9879\u76ee\u4f1a\u6709\u51e0\u4e2a\u6a21\u5757\uff08\u90e8\u7f72\u51e0\u4e2a\u5e94\u7528\uff09\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u6a21\u5757\u7684\u9879\u76ee\u793a\u4f8b\uff1a mall --mall-service\uff08ws\uff0c\u5e95\u5c42\u670d\u52a1\uff09 --mall-mobile\uff08web\uff0c\u5458\u5de5\u7528\u6237\u8bbf\u95ee\uff09 --mall-mgr-bff\uff08ws\uff0cmgr \u540e\u53f0\u9700\u8981\u7684\u670d\u52a1\uff0c\u7531 kong \u7f51\u5173\u8f6c\u53d1\uff0c\u6240\u4ee5\u662f ws \u800c\u4e0d\u662f web\uff09 --mall-admin\uff08web\uff0c\u4f01\u4e1a\u7ba1\u7406\u5458\u7528\u6237\u8bbf\u95ee\uff09 \u51c6\u5907\u5de5\u4f5c \u00b6 \u7533\u8bf7\u5e94\u7528 APPID \u00b6 \u5728\u9879\u76ee\u5f00\u53d1\u524d\uff0c\u4e00\u822c\u9700\u8981\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528\u7684 APPID\u3002\u7531\u76f8\u5173\u4ea7\u54c1\uff0c\u8054\u7cfb\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7684\u4ea7\u54c1\u8d1f\u8d23\u4eba**\u674e\u6653\u4e1c**\u7533\u8bf7\u3002 \u4e00\u822c\u662f\u5148\u7531\u4ea7\u54c1\u5728\u751f\u4ea7\u73af\u5883\u7533\u8bf7\u597d\u540e\uff0c\u518d\u7531\u5f00\u53d1\u5728\u6d4b\u8bd5\u548c\u5f00\u53d1\u73af\u5883\u914d\u7f6e\uff0c\u5e76\u4e14\u5c3d\u91cf\u4fdd\u6301**\u4e09\u4e2a\u73af\u5883\u4e00\u81f4**\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u7ba1\u7406\u3002 \u7533\u8bf7\u5165\u53e3 \u00b6 \u767b\u5f55 mgr \u540e\u53f0 \uff0c\u8bbf\u95ee \u5e94\u7528\u7ba1\u7406\u7cfb\u7edf new \uff0c\u8f6f\u4ef6\u5e94\u7528\u5e93\u83dc\u5355-\u8f6f\u4ef6\u7ba1\u7406\uff0c\u6ed1\u5012\u6700\u4e0b\u9762\uff0c\u521b\u5efa\u8f6f\u4ef6\u3002 \u4e00\u4e2a\u5173\u7231\u901a\u5e94\u7528\uff0c\u76ee\u524d\u6709 5 \u79cd\u7c7b\u578b\uff0c\u5982\u4e0b\uff0c\u8bf7\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\uff1a \u5e73\u53f0\u5e94\u7528 \u7535\u5b50\u7968 \u4f01\u4e1a\u529f\u80fd \u804c\u80fd\u7cfb\u7edf \u5e73\u53f0\u670d\u52a1 \u5916\u90e8\u5bf9\u63a5 APPID \u5728\u540e\u7eed\u4f7f\u7528\u5f88\u591a\u522b\u7684\u7cfb\u7edf\uff0c\u5982\uff1a\u6d88\u606f\u7cfb\u7edf\u3001\u6536\u94f6\u53f0\u3001mgr \u6743\u9650\u7ba1\u7406\u7b49\u7b49\u65f6\u4f1a\u7528\u5230 \u7533\u8bf7 gconf \u00b6 gconf \u662f\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c\u7c7b\u4f3c\u4e8e Apollo\u3002\u539f\u7406\u4e0e\u4f7f\u7528\u53c2\u8003\uff1a Grus \u6846\u67b6-gconf \u8054\u7cfb\u5468\u667a\u4f1f/\u4e59\u514b\u5ddd\uff0c\u521b\u5efa\u5f00\u53d1\u5e94\u7528\u7684\u5173\u8054\u7ec4\u4e0e\u5176\u4e0b\u7684 app\u3002\u6bcf\u4e2a app \u5bf9\u5e94\u4e00\u4e2a\u7a7a\u95f4\uff0c\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u914d\u7f6e\uff08\u4e00\u822c\u6bcf\u4e2a\u5e94\u7528\u90fd\u4f1a\u4e0e\u4e00\u4e2a app \u5bf9\u5e94\uff09\u3002\u8fd9\u4e9b\u914d\u7f6e\u5185\u5bb9\uff0c\u53ef\u901a\u8fc7\u6846\u67b6\u5728\u5e94\u7528\u4e2d\u83b7\u53d6\u3002 \u6bcf\u4e2a\u914d\u7f6e\u662f key-value \u683c\u5f0f\uff0ckey \u662f\u914d\u7f6e\u7684\u540d\u79f0\uff0cvalue \u662f\u914d\u7f6e\u7684\u5b9e\u9645\u5185\u5bb9\u3002 \u76ee\u524d\u652f\u6301 properties \u548c json \u683c\u5f0f\uff0c\u5176\u4f59\u9700\u81ea\u5b9a\u4e49\u5904\u7406\u3002 \u7533\u8bf7\u6570\u636e\u5e93 \u00b6 \u521b\u5efa\u6570\u636e\u5e93 \u00b6 \u5f00\u53d1\u73af\u5883\u6570\u636e\u5e93\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u5de5\u5177\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u8d70\u4e0b\u9762\u7684\u6807\u51c6\u6d41\u7a0b\uff0c\u8d26\u53f7\u4fe1\u606f\u89c1 \u5185\u90e8\u8d26\u53f7 \u3002 \u6d4b\u8bd5\u4e0e\u751f\u4ea7\u6570\u636e\u5e93\u7684\u521b\u5efa\u4e0e\u4fee\u6539\uff0c\u9700\u8981\u8d70 frigate \u4e0a\u7684\u6807\u51c6\u6d41\u7a0b\uff0c\u5728 CI/CD -> \u6570\u636e\u5e93\u53d1\u5e03 -> \u7533\u8bf7\u5217\u8868 \u4e2d\uff0c\u9009\u62e9\u7ed3\u6784\u53d8\u66f4\u7533\u8bf7/\u6570\u636e\u53d8\u66f4\u7533\u8bf7/\u5efa\u5e93\u7533\u8bf7\u3002 gconf \u914d\u7f6e \u00b6 \u521b\u5efa\u597d\u6570\u636e\u5e93\u540e\uff0c\u9700\u8981\u8054\u7cfb\u8fd0\u7ef4\uff08\u59da\u4eae/\u6768\u6606\uff09\u5728\u5bf9\u5e94\u7684 gconf \u751f\u6210 datasource.json \u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5177\u4f53\u89c1 Grus \u6846\u67b6-data \u7533\u8bf7 redis \u00b6 \u8054\u7cfb\u8fd0\u7ef4\uff08\u59da\u4eae/\u6768\u6606\uff09\u5728\u5bf9\u5e94\u7684 gconf \u751f\u6210 redis-config \u6587\u4ef6\uff0c\u5177\u4f53\u89c1 Grus \u6846\u67b6-redis \u9519\u8bef\u7801\u7533\u8bf7 \u00b6 \u5173\u7231\u901a\u5e94\u7528\u6709\u4e00\u4e2a\u7edf\u4e00\u89c4\u8303\u7684\u9519\u8bef\u7801\uff0c\u5177\u4f53\u89c1 \u5173\u7231\u901a\u5e94\u7528\u8fd4\u56de code \u8bf4\u660e \u9700\u8981\u4e3a\u9879\u76ee\u7533\u8bf7\u4e00\u4e2a\u4e1a\u52a1\u9519\u8bef\u7801\u524d\u7f00\uff0c\u9488\u5bf9\u8fd9\u4e2a\u6587\u4ef6 code.md \u63d0\u4ea4 PR\u3002 \u57df\u540d\u89c4\u5212 \u00b6 \u9879\u76ee\u90e8\u7f72\u65f6\u7684\u57df\u540d\uff0c\u4e00\u822c\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff08\u4ee5\u4e0b\u793a\u4f8b\u4e3a\u751f\u4ea7\uff09\uff1a ws \u5e94\u7528\uff0c\u6839\u636e\u57df\u540d\u533a\u5206\u5e94\u7528\uff0c\u4e00\u822c\u90e8\u7f72\u4e3a\uff1a http://{site_name}.services.product.sh web \u670d\u52a1\u6839\u636e\u4e00\u7ea7 path \u533a\u5206\u5e94\u7528\uff0c\u6839\u636e\u7528\u6237\u7aef\u4e0e MGR \u7aef\u533a\u5206\u4e3a\uff1a MGR \u7aef\uff1a https://a.ciicgat.com/{site_name} \u7528\u6237\u7aef\uff1a https://a.guanaitong.com/{site_name} \u4f01\u4e1a\u7aef\uff1a https://admin.guanaitong.com/{site_name} \u6709\u4e9b\u60c5\u51b5\u4f1a\u4f7f\u7528\u57df\u540d\u6765\u533a\u5206\u5e94\u7528\uff0c\u4f8b\u5982 https://eap.ciicgat.com \uff0c\u4f46 ciicgat \u662f MGR\uff0cguanaitong \u662f\u4e00\u822c\u5bf9\u5916\u8bbf\u95ee\u7684\u89c4\u5219\u4e0d\u53d8\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u8981\u7533\u8bf7\u57df\u540d\u3002 \u5e38\u7528\u6a21\u5757 \u00b6 \u9879\u76ee\u7ed3\u6784\u89c1 Grus-\u9879\u76ee\u7ed3\u6784 \uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u4e1a\u52a1\u6a21\u5757\u3002 \u4f1a\u5458 \u00b6 \u5173\u7231\u901a\u6709\u4e00\u5957\u590d\u6742\u7684\u7528\u6237\u4f53\u7cfb\uff0cmember \u662f\u6838\u5fc3\uff0c\u57fa\u4e8e member \u884d\u751f\u4e86\u4e0d\u540c\u7684\u7528\u6237\uff08\u6bcf\u4e2a\u7528\u6237\u9664\u4e86\u81ea\u5df1\u7684 ID \u5916\uff0c\u90fd\u4f1a\u5305\u542b memberId\uff09\uff0c\u4f8b\u5982\uff1a Person-\u5458\u5de5 Enterprise-\u4f01\u4e1a Seller-\u5546\u5bb6 Group-\u96c6\u56e2 ...... \u4f1a\u5458\u6a21\u5757\u96c6\u6210\u4e86\u6240\u6709\u76f8\u5173\u670d\u52a1\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7684\u7528\u6237\u4fe1\u606f\uff0c\u5f15\u5165 GAV \u5982\u4e0b\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-userdoor </artifactId> </dependency> \u5e38\u89c1\u7684\u670d\u52a1\u4e3a\uff1a MemberService PersonService EnterpriseService ..... \u8be5\u6a21\u5757\u662f\u6700\u5e38\u7528\u7684\u6a21\u5757 \u767b\u5f55\u8ba4\u8bc1 \u00b6 \u5f15\u5165 GAV \u5982\u4e0b\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-passport </artifactId> </dependency> \u8ba4\u8bc1 \u00b6 \u6211\u4eec\u4e00\u822c\u7528 passport \u63d0\u4f9b\u7684 PassportAuth \u6765\u8ba4\u8bc1\u7528\u6237\u7684\u767b\u5f55\u72b6\u6001\u4e0e\u4fe1\u606f\u3002 UserLoginInfo userLoginInfo = PassportAuth.getUserLoginInfo(request, LoginUserType.PERSON); \u8be5\u7c7b\u6839\u636e request \u4e2d\u7684 cookie \u6765\u5224\u65ad\u662f\u5426\u6709\u6307\u5b9a\u7684\u767b\u5f55\u7528\u6237\u7c7b\u578b\u5728\u767b\u5f55\u4e2d\uff0c\u5982\u679c userLoginInfo \u4e3a null\uff0c\u8868\u793a\u7528\u6237\u672a\u767b\u5f55\u3002userLoginInfo \u5b58\u5728\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u7528\u5bf9\u8c61\u4e2d\u7684 memberId\uff0c\u83b7\u53d6\u5f53\u524d\u767b\u5f55\u7528\u6237\u4fe1\u606f\u7684\u66f4\u591a\u5185\u5bb9\u8fdb\u884c\u5904\u7406\u3002 \u767b\u5f55 \u00b6 LoginRedirector.redirect(response, MemberType.PERSON,url); \u8df3\u5230\u6307\u5b9a\u7c7b\u578b\u7528\u6237\u767b\u5f55\u9875\uff0c\u6839\u636e\u4f20\u5165\u7684 url\uff0c\u767b\u5f55\u540e\u8df3\u8f6c\u56de\u5e94\u7528\uff0c\u7ee7\u7eed\u540e\u7eed\u7684\u4e1a\u52a1\u3002 \u5e38\u7528 \u00b6 \u6709\u767b\u5f55\u6001\u65f6\uff0c\u5f53\u524d\u767b\u5f55\u7528\u6237\u662f\u6700\u5e38\u7528\u5230\u7684\u4fe1\u606f\uff0c\u4e3a\u4e86\u907f\u514d\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u91cd\u590d\u8c03\u7528\u63a5\u53e3\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u6216\u8005\u5c06\u6574\u4e2a\u5bf9\u8c61\u653e\u5230\u65b9\u6cd5\u7684\u53c2\u6570\u4e2d\uff0c\u964d\u4f4e\u4e86\u53ef\u8bfb\u6027\u3001\u589e\u52a0\u4e86\u4f20\u53c2\u7684\u98ce\u9669\uff0c\u6211\u4eec\u4e00\u822c\u5728 interceptor \u7edf\u4e00\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u7136\u540e\u5728 request \u6216 threadLocal \u4e2d\u5b58\u50a8\u8be5\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u65b9\u6cd5\u7684\u8c03\u7528\u4e2d\u76f4\u63a5\u8bfb\u53d6\u5373\u53ef\u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 threadLocal \u6765\u5b58\u50a8\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684 demo\uff0c\u5728 controller/service \u4e2d\uff0c\u901a\u8fc7 ContextHolder.getCurrentUser() \u83b7\u53d6\u7528\u6237\u4fe1\u606f\u3002 public class ContextHolder { private ContextHolder () { // hide constructor } private static ThreadLocal < User > threadLocal = new ThreadLocal <> (); public static void setCurrentUser ( UserLoginInfo userLoginInfo , PersonService personService ) { threadLocal . set ( fromUserLoginInfo ( userLoginInfo , personService )); } public static User getCurrentUser () { return threadLocal . get (); } public static void clear () { threadLocal . remove (); } private static User fromUserLoginInfo ( UserLoginInfo userLoginInfo , PersonService personService ) { ...... return null ; } } interceptor \u4e2d\u5b58\u5165\u5bf9\u8c61 @Component public class LoginInterceptor implements HandlerInterceptor { @FeignService private PersonService personService ; @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { UserLoginInfo userLoginInfo = PassportAuth . getUserLoginInfo ( request , LoginUserType . PERSON ); if ( userLoginInfo == null ) { ...... return false ; } ContextHolder . setCurrentUser ( userLoginInfo , personService ); return true ; } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) { ContextHolder . clear (); } } \u5e94\u7528\u8ba2\u9605\u5173\u7cfb \u00b6 \u5e94\u7528\u8ba2\u9605\u662f\u5173\u7231\u901a\u5e94\u7528\u7684\u6838\u5fc3\uff0c\u9488\u5bf9\u5458\u5de5/\u4f01\u4e1a\u7528\u6237\uff0cMGR \u5e94\u7528\uff0c\u4f01\u4e1a\u5185\u90e8\u7cfb\u7edf\u5e94\u7528\u7b49\uff0c\u5177\u6709\u5404\u79cd\u914d\u7f6e\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\uff0c\u652f\u6301\u4f7f\u7528\u54ea\u4e9b\u8d44\u4ea7\u7b49\u7b49\u3002 \u5982\u679c\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6a21\u5757\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u3002 \u6821\u9a8c\u662f\u5426\u53ef\u8bbf\u95ee \u00b6 \u5f00\u53d1\u5e94\u7528\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u662f\u6821\u9a8c\u8be5\u5e94\u7528\u67d0\u7528\u6237\u662f\u5426\u53ef\u8bbf\u95ee\u3002 \u9700\u5f15\u5165 GAV\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-newapp </artifactId> </dependency> Code: @FeignService AppCheckService appCheckService ; public void checkAppAccess ( Integer memberId , String appid ) { appCheckResult = appCheckService . checkAccess ( appid , memberId , null ); } appId \u6307\u67d0\u5e94\u7528\uff0cmemberId \u6307\u8bbf\u95ee\u7684\u7528\u6237\u3002\u5982\u679c\u8be5\u7528\u6237\u65e0\u6743\u9650\u8bbf\u95ee\u8bbf\u95ee\uff0c\u8be5\u65b9\u6cd5\u4f1a\u629b\u51fa BusinessFeignException\uff0c\u5f00\u53d1\u8005\u62e6\u622a\u540e\u8fdb\u884c\u76f8\u5e94\u5904\u7406\u3002 \u6709\u65f6\u5019\uff0c\u5458\u5de5\u6ca1\u6709\u8be5\u8d44\u4ea7\u4e5f\u4f1a\u88ab\u62e6\u622a\u3002 \u8f6f\u4ef6\u914d\u7f6e \u00b6 \u8f6f\u4ef6\u521b\u5efa\u5b8c\u6210\u540e\uff08\u89c1\u524d\u9762\u7684\u7533\u8bf7\u5e94\u7528\uff09\uff0c\u70b9\u51fb\u7ee7\u7eed\u53d1\u5e03\uff08\u6216\u8005\u8be6\u60c5\uff09\uff0c\u53ef\u4ee5\u8fdb\u884c\u8f6f\u4ef6\u914d\u7f6e\u3002 \u6839\u636e\u4ea7\u54c1\u9700\u6c42\uff0c\u8bbe\u7f6e\u8be5\u5e94\u7528\u652f\u6301\u54ea\u4e9b\u7528\u6237\u4f7f\u7528\uff0c\u4e0e\u652f\u4ed8\u65f6\u80fd\u591f\u4f7f\u7528\u7684\u8d44\u4ea7\u3002 PC/MOB \u5730\u5740\uff1a\u5458\u5de5\u8bbf\u95ee\u7684\u5730\u5740\uff0c\u5728 \u7ed9\u5230/H5/PC \u5c55\u73b0\u7684\u5e94\u7528\u7684\u8bbf\u95ee\u5730\u5740\uff1b \u4f01\u4e1a\u7aef\u5730\u5740\uff1a\u4f01\u4e1a\u7528\u6237/\u4f01\u4e1a\u7ba1\u7406\u5458 \u8bbf\u95ee\u5e94\u7528\u7684\u7ba1\u7406\u754c\u9762\u5730\u5740\uff1b MGR \u6743\u9650\u5730\u5740\uff1a\u83b7\u53d6\u5e94\u7528\u7684\u6240\u6709\u6743\u9650\u4fe1\u606f\uff0c\u8fd4\u56de\u4e00\u4e2a\u6807\u51c6\u7684 json\uff0c\u65b9\u4fbf MGR \u7edf\u4e00\u7684\u6743\u9650\u7ba1\u7406\u4f7f\u7528\uff1b MGR \u5730\u5740\uff1aMGR \u540e\u53f0\u7684\u5e94\u7528\u5165\u53e3\u5730\u5740 \u5e94\u7528\u7c7b\u578b\uff1a\u6807\u51c6\u8fd8\u662f\u5b9a\u5236\uff0c\u770b\u4e1a\u52a1\u9700\u6c42\u3002 \u6807\u51c6\u7684\u8bdd\uff0c\u540e\u7eed\u53ef\u4ee5\u53d1\u5e03\u5230\u5e94\u7528\u5e02\u573a\uff0c\u7531\u4f01\u4e1a\u81ea\u5df1\u8ba2\u9605\u3002\u5b9a\u5236\u7684\u8bdd\u5219\u4e0d\u53ef\u4ee5\u3002 \u522b\u7684\u53c2\u6570\u4ecb\u7ecd\u89c1\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7cfb\u7edf\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u4ea7\u54c1\u8ba2\u9605\u533a \u00b6 \u5e94\u7528\u914d\u7f6e\u5b8c\u6210\uff08\u5373\u53d1\u5e03\u5b8c\u6210\uff09\u540e\uff0c\u5982\u679c\u9700\u8981\u7ed9**\u5458\u5de5/\u4f01\u4e1a**\u4f7f\u7528\uff0c\u4e00\u822c\u9700\u8981\u5c06\u5e94\u7528\u653e\u5230\u5bf9\u5e94\u7684\u4ea7\u54c1\u8ba2\u9605\u533a\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u5bfc\u81f4\uff1a \u5e94\u7528\u8ba2\u9605\u68c0\u9a8c\u5931\u8d25\uff1b \u65e0\u6cd5\u4f7f\u7528\u5bf9\u5e94\u7684\u8d44\u4ea7\uff0c\u4f8b\u5982\uff1a\u5982\u679c\u4f60\u60f3\u652f\u6301\u79ef\u5206\u652f\u4ed8\uff0c\u4e00\u5b9a\u5f97\u5c06\u8fd9\u4e2a\u5e94\u7528\u653e\u5230**\u5173\u7231\u79ef\u5206**\u8fd9\u4e2a\u8ba2\u9605\u533a\u4e0b\u3002 \u5e94\u7528\u53d1\u5e03\u8ba2\u9605\u533a\u6d41\u7a0b\u5982\u4e0b\uff1a \u516c\u5f00\u7c7b\u578b\u53ef\u9009\u516c\u5f00\u3001\u975e\u516c\u5f00\u3001\u5185\u6d4b\u7b49\u3002 \u9009\u62e9\u516c\u5f00\u53ef\u4ee5\u8ba9\u4f01\u4e1a\u5728\u5e94\u7528\u5e02\u573a\u8ba2\u9605\u5e94\u7528\uff0c\u5426\u5219\u53ea\u80fd\u5728\u540e\u53f0\u914d\u7f6e\u3002 \u5982\u4e0a\uff0c\u4e00\u4e2a\u5e94\u7528\u7684\u6700\u7b80\u5355\u7684\u53d1\u5e03\u6d41\u7a0b\u5c31\u5b8c\u6210\u4e86\u3002\u4f46\u662f\u7528\u6237\uff08\u5458\u5de5/\u4f01\u4e1a\uff09\u8fd8\u65e0\u6cd5\u8bbf\u95ee\u8be5\u5e94\u7528\u6216\u8005\u4f7f\u7528\u76f8\u5173\u8d44\u4ea7\uff0c\u5f97\u4f01\u4e1a\u8ba2\u9605\u4e86\u8fd9\u4e2a\u5e94\u7528\u624d\u884c\u3002\u8fd9\u5c31\u7275\u626f\u5230\u4e86\u4e0b\u9762\u7684\u4ea7\u54c1\u76ee\u5f55\u3002 \u4ea7\u54c1\u76ee\u5f55 \u00b6 \u5173\u7231\u901a\u7684\u4e1a\u52a1\u6839\u636e\u573a\u666f\uff0c\u5212\u5206\u4e86\u5f88\u591a\u4ea7\u54c1\u7ebf\uff0c\u4f8b\u5982\uff1a\u5173\u7231\u79ef\u5206\u3001\u5173\u7231\u989d\u5ea6\u7b49\u7b49\u3002\u57fa\u672c\u6240\u6709\u7684\u5e73\u53f0\u5e94\u7528\uff0c\u90fd\u8981\u653e\u5165\u67d0\u4e2a\u4ea7\u54c1\u7ebf\u4e0b\u3002 \u5f00\u901a\u4ea7\u54c1\u7ebf \u00b6 MGR \u540e\u53f0\u8fdb\u5165 \u4ea7\u54c1\u76ee\u5f55 \uff1a \u5f00\u901a\u4ea7\u54c1\u7ebf \uff1a \u9009\u62e9\u597d\u4ea7\u54c1\u540e\u63d0\u4ea4\uff0c\u5373\u53ef\u7ed9\u8fd9\u4e2a\u4f01\u4e1a\u521b\u5efa\u67d0\u4e2a\u4ea7\u54c1\u7ebf\u3002 \u5e94\u7528\u7ba1\u7406 \u00b6 \u9664\u4e86\u5728\u4f01\u4e1a\u7aef\u8ba2\u9605\u516c\u5f00\u7684\u5e94\u7528\u5916\uff0c\u7edf\u4e00\u652f\u6301\u5728\u4ea7\u54c1\u76ee\u5f55\u8ba2\u9605\u5e94\u7528\u3002 \u5728\u4e0d\u540c\u7684\u4ea7\u54c1\u7ebf\u4e0b\uff0c\u6dfb\u52a0\u5e94\u7528\uff0c\u5373\u53ef\u8ba9\u8be5\u4f01\u4e1a\u8ba2\u9605\u4e86\u8be5\u5e94\u7528\uff0c\u5982\u679c\u652f\u4ed8\u7684\u8bdd\uff0c\u4e5f\u80fd\u4f7f\u7528\u5bf9\u5e94\u7684\u8d44\u4ea7\u3002 \u6d88\u606f\u7cfb\u7edf \u00b6 \u5173\u7231\u901a\u6709\u7edf\u4e00\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u7528\u6765\u53d1\u9001\u77ed\u4fe1\u3001\u90ae\u4ef6\u3001\u7ed9\u5230\u7684\u901a\u77e5\u3001\u5fae\u4fe1\u7684\u901a\u77e5\u7b49\u7b49\uff0c\u9700\u8981\u5f15\u5165 GAV <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-notification </artifactId> </dependency> \u5927\u591a\u6570\u63a5\u53e3\uff0c\u5165\u53c2\u4f1a\u6709 appId \u53c2\u6570\uff0c\u8bf7\u5c3d\u91cf\u8bbe\u7f6e\uff0c\u4fbf\u4e8e\u540e\u671f\u95ee\u9898\u7684\u6392\u67e5\u4e0e\u6d88\u606f\u7684\u8ffd\u8e2a\u3002 \u6d88\u606f\u7684\u67e5\u8be2\u4e0e\u8bbe\u7f6e\uff0c\u5728 **MGR \u7684\u6d88\u606f\u7ba1\u7406**\u4e2d\u7edf\u4e00\u5904\u7406\u3002 \u57fa\u7840\u4f7f\u7528 \u00b6 \u4e0d\u57fa\u4e8e\u6a21\u677f\uff0c\u5355\u4e2a\u53d1\u9001\u7b80\u5355\u7684\u77ed\u4fe1\u6216\u8005\u90ae\u4ef6\u65f6\uff0c\u53ef\u4f7f\u7528\u3002 \u4e00\u822c\u5efa\u8bae\u57fa\u4e8e\u6a21\u677f\u914d\u7f6e\uff0c\u540e\u671f\u6587\u6848\u53ef\u4ee5\u8054\u7cfb\u4ea7\u54c1\u4fee\u6539\uff0c\u907f\u514d\u9879\u76ee\u518d\u6b21\u53d1\u7248\u3002 @Slf4j @Controller public class MessageController { @FeignService SmsSendService smsSendService ; @FeignService EmailSendService emailSendService ; @RequestMapping ( value = \"/message/emaysoftcom/sendSMS\" ) public void message ( @RequestParam ( \"mobile\" ) String mobile , @RequestParam ( \"content\" ) String content , HttpServletRequest req , HttpServletResponse resp ) { RequestInfo requestInfo = ( RequestInfo ) req . getAttribute ( Constants . REQUEST_INFO_TAG ); Sms sms = new Sms (); sms . setMobile ( mobile ); sms . setContent ( content ); String result = smsSendService . sendSmsByBody ( sms ); log . info ( \"smsSendService.sendSms|result={}\" , result ); ResponseUtil . response ( requestInfo , result , resp ); } @RequestMapping ( value = \"/message/emaysoftcom/sendEmail\" ) public void email ( HttpServletRequest req , HttpServletResponse resp , @RequestParam ( value = \"receiverEmail\" ) String receiverEmail , @RequestParam ( value = \"title\" ) String title , @RequestParam ( value = \"content\" ) String content ) { RequestInfo requestInfo = ( RequestInfo ) req . getAttribute ( Constants . REQUEST_INFO_TAG ); String result = emailSendService . sendEmail ( title , content , receiverEmail ); log . info ( \"emailSendService.sendEmail|result={}\" , result ); ResponseUtil . response ( requestInfo , result , resp ); } } \u57fa\u4e8e\u6a21\u677f\u4f7f\u7528 \u00b6 \u57fa\u4e8e\u6a21\u677f\uff0c\u53ef\u4ee5\u53d1\u9001\u591a\u79cd\u6e20\u9053\u7684\u4fe1\u606f\u3002\u9996\u5148\u5f97\u5728 MGR \u7684\u6d88\u606f\u7ba1\u7406 \u8fdb\u884c\u6a21\u677f\u7684\u521b\u5efa\u5de5\u4f5c\uff08\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u914d\u7f6e\uff0c\u5e76\u4e14\u5c3d\u91cf\u4fdd\u8bc1\u4e00\u81f4\uff0c\u4e00\u822c\u5f00\u53d1\u6d4b\u8bd5\u7531\u5f00\u53d1\u81ea\u5df1\u914d\u7f6e\uff0c\u751f\u4ea7\u8054\u7cfb\u4ea7\u54c1\u914d\u7f6e\uff09\u3002 \u521b\u5efa\u6a21\u677f \u8bbe\u7f6e\u57fa\u672c\u4fe1\u606f \u8bbe\u7f6e\u901a\u914d\u7b26 \u901a\u914d\u7b26\u7531\u53c2\u6570\u503c\u548c\u901a\u914d\u7b26\u540d\u79f0\u7ec4\u6210\uff0c\u53c2\u6570\u503c\u662f\u8c03\u7528\u63a5\u53e3\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u540d\u79f0\uff0c\u901a\u914d\u7b26\u662f\u540e\u7eed\u914d\u7f6e\u6d88\u606f\u5177\u4f53\u6a21\u677f\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u6807\u5fd7\u4f4d\u3002 \u4f01\u4e1a\u540d\u79f0\u548c\u79f0\u8c13\u662f\u4e00\u4e9b\u9ed8\u8ba4\u7684\u901a\u914d\u7b26\uff0c\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0d\u8981\u91cd\u590d\u5b9a\u4e49\uff0c\u5e76\u4e14\u53c2\u6570\u503c\u4e0d\u8981\u91cd\u590d\u3002 \u7f16\u8f91\u5185\u5bb9 \u6b64\u5904\u7f16\u8f91\u6d88\u606f\u7684\u5b9e\u9645\u5185\u5bb9\uff0c\u901a\u914d\u7b26\u5185\u5bb9\u7531\u4ee3\u7801\u5199\u5165\u3002\u5185\u5bb9\u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u6309\u4fdd\u5b58\uff0c\u5373\u5b8c\u6210\u4e00\u4e2a\u6a21\u677f\u7684\u521b\u5efa\u3002 API \u53d1\u9001\u6a21\u677f\u6d88\u606f \u901a\u8fc7 MsgSendService \u53d1\u9001\u6a21\u677f\u6d88\u606f\u3002\u4e0b\u9762\u793a\u4f8b\u4e2d\u7684 sendParamMap \u5373\u662f\u901a\u914d\u7b26\u7684\u53c2\u6570\u3002enterpriseName \u7b49\u662f\u9ed8\u8ba4\u7684\u901a\u7528\u53c2\u6570\uff0c\u5728\u7ed9\u5458\u5de5\u53d1\u9001\u65f6\uff0c\u4e0d\u9700\u8981\u914d\u7f6e\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u653e\u5165\u3002 SendMsg sendMsgRequest = new SendMsg (); sendMsgRequest . setAppid ( appProperties . getAppId ()); sendMsgRequest . setCode ( \"TEST_GREETING_CARD_SEND_SMS_NOTIFY\" ); sendMsgRequest . setLanguage ( \"cn\" ); sendMsgRequest . setChannels ( \"[3]\" ); sendMsgRequest . setReceiverName ( clientDO . getName ()); // 1\u3001\u4e2a\u4eba\u7528\u6237 sendMsgRequest . setUserTag ( 1 ); // \u53c2\u6570 Map < String , Object > sendParamMap = new HashMap <> (); sendParamMap . put ( \"testMobile\" , clientDO . getName ()); sendMsgRequest . setParameters ( JSON . toJSONString ( sendParamMap )); // \u904d\u5386\u6765\u8bbf\u8005\u624b\u673a\u4fe1\u606f sendMsgRequest . setReceiverMobile ( mobile ); msgSendService . sendTplMsg ( sendMsgRequest ); \u6536\u94f6\u53f0 \u00b6 \u9488\u5bf9\u8df3\u8f6c\u5173\u7231\u901a\u6536\u94f6\u53f0\u7684\u573a\u666f\uff0c\u63d0\u4f9b\u4e86\u5de5\u5177\u7c7b\u652f\u6301\uff0c\u7b80\u5316\u4e86\u63a5\u5165\u6536\u94f6\u53f0\u7684\u6210\u672c\u3002 \u5bf9\u63a5\u524d\u9700\u8981\u6309\u7167\u524d\u9762\u7684\u6d41\u7a0b\uff0c\u5b8c\u6210\u7533\u8bf7\u5e94\u7528\u3001\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u3001\u4ea7\u54c1\u76ee\u5f55\u7b49\u64cd\u4f5c\uff0c\u540c\u65f6\u7ed9\u767b\u5f55\u7684\u7528\u6237\u53d1\u653e\u76f8\u5e94\u7684\u8d44\u4ea7\uff0c\u624d\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u8d77\u6536\u94f6\u53f0\u3002 \u4e2a\u4eba\u6536\u94f6\u53f0\uff08excashier\uff09 \u00b6 \u6536\u94f6\u53f0\u7684\u5927\u81f4\u6d41\u7a0b \u5de5\u5177\u7c7b\u4f7f\u7528\u8bf4\u660e \u5f15\u5165\u4f9d\u8d56 \uff1a <dependency> <artifactId> ciicgat-api-excashier </artifactId> <groupId> com.ciicgat.api </groupId> </dependency> \u8df3\u8f6c\u6536\u94f6\u53f0\u652f\u4ed8 demo \uff1a \u652f\u4ed8\u7684\u65f6\u5019\uff0c\u62fc\u63a5 url\uff0c\u7136\u540e\u8df3\u8f6c\uff0c\u4f7f\u7528 GatPay.buildUrl(PaymentRequest paymentRequest) \uff0c\u5176\u4e2d return_url \uff08\u4e00\u5b9a\u662f\u653e\u5728 web \u5c42\uff09 \u548c notify_url \u9700\u8981\u5e94\u7528\u81ea\u5df1\u63d0\u4f9b\uff1b return_url \uff08\u4e00\u5b9a\u662f\u653e\u5728 web \u5c42\uff09\u662f\u652f\u4ed8\u5b8c\u6210\u540e\uff0c\u6536\u94f6\u53f0\u8df3\u8f6c\u7684\u9875\u9762\uff0c\u5c55\u793a\u8ba2\u5355\u7684\u7ed3\u679c\uff0c\u5e94\u7528\u81ea\u5df1\u5904\u7406\uff1b notify_url \uff08\u4e00\u822c\u653e\u5728 ws\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728 web\uff09\u662f\u652f\u4ed8\u5b8c\u6210\u540e\uff0c\u6536\u94f6\u53f0\u901a\u77e5\u652f\u4ed8\u7ed3\u679c\uff08\u4ec5\u6709\u6210\u529f\u624d\u4f1a\u901a\u77e5\uff09\uff0c\u968f\u540e GatPay.checkReturnSignature(PayReturnResponse returnResponse) \u4f7f\u7528\u8be5\u65b9\u6cd5\u6821\u9a8c return \u7684\u7b7e\u540d\uff1b GatPay.checkNotifySignature(PayNotifyResponse notifyResponse) \u4f7f\u7528\u8be5\u65b9\u6cd5\u6821\u9a8c notify \u7684\u7b7e\u540d\u3002 @ApiOperation ( value = \"\u652f\u4ed8notify\u63a5\u53e3\uff08\u6536\u94f6\u53f0\u8c03\u7528\uff09\" ) @RequestMapping ( value = \"/notify_url\" ) public void notifyUrl ( PayNotifyResponse payNotifyRespons , HttpServletResponse response ) throws IOException { try { response . setHeader ( \"Content-type\" , \"text/html;charset=UTF-8\" ); response . setCharacterEncoding ( \"UTF-8\" ); LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|payNotifyResp\uff1a{}\" , JSONObject . toJSONString ( payNotifyRespons )); // boolean verifyNotifyParams = verifyNotifyParams(payNotifyResp); boolean b = GatPay . checkNotifySignature ( payNotifyRespons ); if ( ! b ) { LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|verifyNotifyParams fail\" ); LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|return fail\" ); response . getWriter (). write ( \"fail\" ); return ; } ...... } catch ( Exception e ) { LOGGER . error ( \"\u3002\u3002\u3002\u3002PayController|gatNotify:\" , e ); response . getWriter (). write ( \"fail\" ); return ; } } \u4f01\u4e1a\u6536\u94f6\u53f0\uff08cashier\uff09 \u00b6 \u5de5\u5177\u7c7b\u4f7f\u7528\u8bf4\u660e \u5f15\u5165\u4f9d\u8d56 \uff1a <dependency> <artifactId> ciicgat-api-cashier </artifactId> <groupId> com.ciicgat.api </groupId> </dependency> MGR \u00b6 \u524d\u7aef\u7ec4\u4ef6\u5e93\uff1a GLego \u7f51\u5173\u914d\u7f6e\uff1a kong MGR \u8be6\u89e3 TODO\uff0c\u9884\u8ba1\u7b49\u65b0\u7684\u540e\u53f0\u6846\u67b6\u51fa\u6765\u540e\u7edf\u4e00\u518d\u5f00\u4e00\u4e2a\u6587\u6863\u5b8c\u5584\u3002 \u90e8\u7f72\u51c6\u5907 \u00b6 \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u8981\u5f88\u591a\u6a21\u5757\u7684\u914d\u7f6e\u4e0e\u786e\u8ba4\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a gconf \u914d\u7f6e \u6570\u636e\u5e93\u7533\u8bf7\u4e0e\u6570\u636e\u5e93 gconf \u914d\u7f6e redis \u7684 gconf \u914d\u7f6e \u9879\u76ee\u7533\u8bf7 \u5e94\u7528\u7533\u8bf7 \u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7684\u914d\u7f6e \u6d88\u606f\u7cfb\u7edf\u7684\u914d\u7f6e\uff08\u5982\u679c\u6709\u9700\u8981\uff09 ......","title":"\u5e94\u7528\u5f00\u53d1\u6307\u5357"},{"location":"others/develop-guide/#_1","text":"\u672c\u7ae0\u7b80\u5355\u63cf\u8ff0\u4e0b\uff0c\u5f00\u53d1\u4e00\u4e2a\u5173\u7231\u901a\u9879\u76ee\u7ecf\u8fc7\u7684\u6d41\u7a0b\u3002","title":"\u5e94\u7528\u5f00\u53d1\u6307\u5357"},{"location":"others/develop-guide/#_2","text":"\u6211\u4eec\u670d\u52a1/\u5e94\u7528\u4e00\u822c\u5206\u4e3a web\uff08\u516c\u7f51\u53ef\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u94fe\u63a5\u6570\u636e\u5e93\uff09 \u548c ws\uff08\u516c\u7f51\u4e0d\u53ef\u8bbf\u95ee\uff0c\u53ef\u94fe\u63a5\u6570\u636e\u5e93\uff09\uff0cweb \u901a\u8fc7\u8c03\u7528 ws\uff0c\u6765\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6216\u8005\u6267\u884c\u4e00\u4e9b\u903b\u8f91\u3002 \u6211\u4eec\u4f7f\u7528 maven \u6765\u7ba1\u7406\u9879\u76ee\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff08\u5e94\u7528\uff09\uff0c\u5177\u4f53\u89c1 Grus-\u9879\u76ee\u7ed3\u6784 \u3002 \u9664\u6b64\u5916\uff0c\u5e94\u7528\u6309\u7167\u8bbf\u95ee\u5bf9\u8c61\u5212\u5206\uff0c\u53ef\u4ee5\u5206\u4e3a\uff1a \u5458\u5de5\u7528\u6237-web \u4f01\u4e1a\u7ba1\u7406\u5458-web \u5546\u5bb6\u7ba1\u7406\u5458-web GAT-MGR \u7528\u6237 \u5e95\u5c42\u670d\u52a1-ws \u5176\u4ed6\uff0c\u4e0d\u9650\u5236\u8bbf\u95ee\u7528\u6237\u6216\u8005\u81ea\u5b9a\u4e49-web \u5728\u5b9e\u9645\u5f00\u53d1\u4e00\u4e2a\u9879\u76ee\u524d\uff0c\u5f97\u660e\u786e\u8be5\u9879\u76ee\u4f1a\u6709\u51e0\u4e2a\u6a21\u5757\uff08\u90e8\u7f72\u51e0\u4e2a\u5e94\u7528\uff09\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u6a21\u5757\u7684\u9879\u76ee\u793a\u4f8b\uff1a mall --mall-service\uff08ws\uff0c\u5e95\u5c42\u670d\u52a1\uff09 --mall-mobile\uff08web\uff0c\u5458\u5de5\u7528\u6237\u8bbf\u95ee\uff09 --mall-mgr-bff\uff08ws\uff0cmgr \u540e\u53f0\u9700\u8981\u7684\u670d\u52a1\uff0c\u7531 kong \u7f51\u5173\u8f6c\u53d1\uff0c\u6240\u4ee5\u662f ws \u800c\u4e0d\u662f web\uff09 --mall-admin\uff08web\uff0c\u4f01\u4e1a\u7ba1\u7406\u5458\u7528\u6237\u8bbf\u95ee\uff09","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"others/develop-guide/#_3","text":"","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"others/develop-guide/#appid","text":"\u5728\u9879\u76ee\u5f00\u53d1\u524d\uff0c\u4e00\u822c\u9700\u8981\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528\u7684 APPID\u3002\u7531\u76f8\u5173\u4ea7\u54c1\uff0c\u8054\u7cfb\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7684\u4ea7\u54c1\u8d1f\u8d23\u4eba**\u674e\u6653\u4e1c**\u7533\u8bf7\u3002 \u4e00\u822c\u662f\u5148\u7531\u4ea7\u54c1\u5728\u751f\u4ea7\u73af\u5883\u7533\u8bf7\u597d\u540e\uff0c\u518d\u7531\u5f00\u53d1\u5728\u6d4b\u8bd5\u548c\u5f00\u53d1\u73af\u5883\u914d\u7f6e\uff0c\u5e76\u4e14\u5c3d\u91cf\u4fdd\u6301**\u4e09\u4e2a\u73af\u5883\u4e00\u81f4**\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u7ba1\u7406\u3002","title":"\u7533\u8bf7\u5e94\u7528 APPID"},{"location":"others/develop-guide/#_4","text":"\u767b\u5f55 mgr \u540e\u53f0 \uff0c\u8bbf\u95ee \u5e94\u7528\u7ba1\u7406\u7cfb\u7edf new \uff0c\u8f6f\u4ef6\u5e94\u7528\u5e93\u83dc\u5355-\u8f6f\u4ef6\u7ba1\u7406\uff0c\u6ed1\u5012\u6700\u4e0b\u9762\uff0c\u521b\u5efa\u8f6f\u4ef6\u3002 \u4e00\u4e2a\u5173\u7231\u901a\u5e94\u7528\uff0c\u76ee\u524d\u6709 5 \u79cd\u7c7b\u578b\uff0c\u5982\u4e0b\uff0c\u8bf7\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\uff1a \u5e73\u53f0\u5e94\u7528 \u7535\u5b50\u7968 \u4f01\u4e1a\u529f\u80fd \u804c\u80fd\u7cfb\u7edf \u5e73\u53f0\u670d\u52a1 \u5916\u90e8\u5bf9\u63a5 APPID \u5728\u540e\u7eed\u4f7f\u7528\u5f88\u591a\u522b\u7684\u7cfb\u7edf\uff0c\u5982\uff1a\u6d88\u606f\u7cfb\u7edf\u3001\u6536\u94f6\u53f0\u3001mgr \u6743\u9650\u7ba1\u7406\u7b49\u7b49\u65f6\u4f1a\u7528\u5230","title":"\u7533\u8bf7\u5165\u53e3"},{"location":"others/develop-guide/#gconf","text":"gconf \u662f\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c\u7c7b\u4f3c\u4e8e Apollo\u3002\u539f\u7406\u4e0e\u4f7f\u7528\u53c2\u8003\uff1a Grus \u6846\u67b6-gconf \u8054\u7cfb\u5468\u667a\u4f1f/\u4e59\u514b\u5ddd\uff0c\u521b\u5efa\u5f00\u53d1\u5e94\u7528\u7684\u5173\u8054\u7ec4\u4e0e\u5176\u4e0b\u7684 app\u3002\u6bcf\u4e2a app \u5bf9\u5e94\u4e00\u4e2a\u7a7a\u95f4\uff0c\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u914d\u7f6e\uff08\u4e00\u822c\u6bcf\u4e2a\u5e94\u7528\u90fd\u4f1a\u4e0e\u4e00\u4e2a app \u5bf9\u5e94\uff09\u3002\u8fd9\u4e9b\u914d\u7f6e\u5185\u5bb9\uff0c\u53ef\u901a\u8fc7\u6846\u67b6\u5728\u5e94\u7528\u4e2d\u83b7\u53d6\u3002 \u6bcf\u4e2a\u914d\u7f6e\u662f key-value \u683c\u5f0f\uff0ckey \u662f\u914d\u7f6e\u7684\u540d\u79f0\uff0cvalue \u662f\u914d\u7f6e\u7684\u5b9e\u9645\u5185\u5bb9\u3002 \u76ee\u524d\u652f\u6301 properties \u548c json \u683c\u5f0f\uff0c\u5176\u4f59\u9700\u81ea\u5b9a\u4e49\u5904\u7406\u3002","title":"\u7533\u8bf7 gconf"},{"location":"others/develop-guide/#_5","text":"","title":"\u7533\u8bf7\u6570\u636e\u5e93"},{"location":"others/develop-guide/#_6","text":"\u5f00\u53d1\u73af\u5883\u6570\u636e\u5e93\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u5de5\u5177\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u8d70\u4e0b\u9762\u7684\u6807\u51c6\u6d41\u7a0b\uff0c\u8d26\u53f7\u4fe1\u606f\u89c1 \u5185\u90e8\u8d26\u53f7 \u3002 \u6d4b\u8bd5\u4e0e\u751f\u4ea7\u6570\u636e\u5e93\u7684\u521b\u5efa\u4e0e\u4fee\u6539\uff0c\u9700\u8981\u8d70 frigate \u4e0a\u7684\u6807\u51c6\u6d41\u7a0b\uff0c\u5728 CI/CD -> \u6570\u636e\u5e93\u53d1\u5e03 -> \u7533\u8bf7\u5217\u8868 \u4e2d\uff0c\u9009\u62e9\u7ed3\u6784\u53d8\u66f4\u7533\u8bf7/\u6570\u636e\u53d8\u66f4\u7533\u8bf7/\u5efa\u5e93\u7533\u8bf7\u3002","title":"\u521b\u5efa\u6570\u636e\u5e93"},{"location":"others/develop-guide/#gconf_1","text":"\u521b\u5efa\u597d\u6570\u636e\u5e93\u540e\uff0c\u9700\u8981\u8054\u7cfb\u8fd0\u7ef4\uff08\u59da\u4eae/\u6768\u6606\uff09\u5728\u5bf9\u5e94\u7684 gconf \u751f\u6210 datasource.json \u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5177\u4f53\u89c1 Grus \u6846\u67b6-data","title":"gconf \u914d\u7f6e"},{"location":"others/develop-guide/#redis","text":"\u8054\u7cfb\u8fd0\u7ef4\uff08\u59da\u4eae/\u6768\u6606\uff09\u5728\u5bf9\u5e94\u7684 gconf \u751f\u6210 redis-config \u6587\u4ef6\uff0c\u5177\u4f53\u89c1 Grus \u6846\u67b6-redis","title":"\u7533\u8bf7 redis"},{"location":"others/develop-guide/#_7","text":"\u5173\u7231\u901a\u5e94\u7528\u6709\u4e00\u4e2a\u7edf\u4e00\u89c4\u8303\u7684\u9519\u8bef\u7801\uff0c\u5177\u4f53\u89c1 \u5173\u7231\u901a\u5e94\u7528\u8fd4\u56de code \u8bf4\u660e \u9700\u8981\u4e3a\u9879\u76ee\u7533\u8bf7\u4e00\u4e2a\u4e1a\u52a1\u9519\u8bef\u7801\u524d\u7f00\uff0c\u9488\u5bf9\u8fd9\u4e2a\u6587\u4ef6 code.md \u63d0\u4ea4 PR\u3002","title":"\u9519\u8bef\u7801\u7533\u8bf7"},{"location":"others/develop-guide/#_8","text":"\u9879\u76ee\u90e8\u7f72\u65f6\u7684\u57df\u540d\uff0c\u4e00\u822c\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff08\u4ee5\u4e0b\u793a\u4f8b\u4e3a\u751f\u4ea7\uff09\uff1a ws \u5e94\u7528\uff0c\u6839\u636e\u57df\u540d\u533a\u5206\u5e94\u7528\uff0c\u4e00\u822c\u90e8\u7f72\u4e3a\uff1a http://{site_name}.services.product.sh web \u670d\u52a1\u6839\u636e\u4e00\u7ea7 path \u533a\u5206\u5e94\u7528\uff0c\u6839\u636e\u7528\u6237\u7aef\u4e0e MGR \u7aef\u533a\u5206\u4e3a\uff1a MGR \u7aef\uff1a https://a.ciicgat.com/{site_name} \u7528\u6237\u7aef\uff1a https://a.guanaitong.com/{site_name} \u4f01\u4e1a\u7aef\uff1a https://admin.guanaitong.com/{site_name} \u6709\u4e9b\u60c5\u51b5\u4f1a\u4f7f\u7528\u57df\u540d\u6765\u533a\u5206\u5e94\u7528\uff0c\u4f8b\u5982 https://eap.ciicgat.com \uff0c\u4f46 ciicgat \u662f MGR\uff0cguanaitong \u662f\u4e00\u822c\u5bf9\u5916\u8bbf\u95ee\u7684\u89c4\u5219\u4e0d\u53d8\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u8981\u7533\u8bf7\u57df\u540d\u3002","title":"\u57df\u540d\u89c4\u5212"},{"location":"others/develop-guide/#_9","text":"\u9879\u76ee\u7ed3\u6784\u89c1 Grus-\u9879\u76ee\u7ed3\u6784 \uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u4e1a\u52a1\u6a21\u5757\u3002","title":"\u5e38\u7528\u6a21\u5757"},{"location":"others/develop-guide/#_10","text":"\u5173\u7231\u901a\u6709\u4e00\u5957\u590d\u6742\u7684\u7528\u6237\u4f53\u7cfb\uff0cmember \u662f\u6838\u5fc3\uff0c\u57fa\u4e8e member \u884d\u751f\u4e86\u4e0d\u540c\u7684\u7528\u6237\uff08\u6bcf\u4e2a\u7528\u6237\u9664\u4e86\u81ea\u5df1\u7684 ID \u5916\uff0c\u90fd\u4f1a\u5305\u542b memberId\uff09\uff0c\u4f8b\u5982\uff1a Person-\u5458\u5de5 Enterprise-\u4f01\u4e1a Seller-\u5546\u5bb6 Group-\u96c6\u56e2 ...... \u4f1a\u5458\u6a21\u5757\u96c6\u6210\u4e86\u6240\u6709\u76f8\u5173\u670d\u52a1\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7684\u7528\u6237\u4fe1\u606f\uff0c\u5f15\u5165 GAV \u5982\u4e0b\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-userdoor </artifactId> </dependency> \u5e38\u89c1\u7684\u670d\u52a1\u4e3a\uff1a MemberService PersonService EnterpriseService ..... \u8be5\u6a21\u5757\u662f\u6700\u5e38\u7528\u7684\u6a21\u5757","title":"\u4f1a\u5458"},{"location":"others/develop-guide/#_11","text":"\u5f15\u5165 GAV \u5982\u4e0b\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-passport </artifactId> </dependency>","title":"\u767b\u5f55\u8ba4\u8bc1"},{"location":"others/develop-guide/#_12","text":"\u6211\u4eec\u4e00\u822c\u7528 passport \u63d0\u4f9b\u7684 PassportAuth \u6765\u8ba4\u8bc1\u7528\u6237\u7684\u767b\u5f55\u72b6\u6001\u4e0e\u4fe1\u606f\u3002 UserLoginInfo userLoginInfo = PassportAuth.getUserLoginInfo(request, LoginUserType.PERSON); \u8be5\u7c7b\u6839\u636e request \u4e2d\u7684 cookie \u6765\u5224\u65ad\u662f\u5426\u6709\u6307\u5b9a\u7684\u767b\u5f55\u7528\u6237\u7c7b\u578b\u5728\u767b\u5f55\u4e2d\uff0c\u5982\u679c userLoginInfo \u4e3a null\uff0c\u8868\u793a\u7528\u6237\u672a\u767b\u5f55\u3002userLoginInfo \u5b58\u5728\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u7528\u5bf9\u8c61\u4e2d\u7684 memberId\uff0c\u83b7\u53d6\u5f53\u524d\u767b\u5f55\u7528\u6237\u4fe1\u606f\u7684\u66f4\u591a\u5185\u5bb9\u8fdb\u884c\u5904\u7406\u3002","title":"\u8ba4\u8bc1"},{"location":"others/develop-guide/#_13","text":"LoginRedirector.redirect(response, MemberType.PERSON,url); \u8df3\u5230\u6307\u5b9a\u7c7b\u578b\u7528\u6237\u767b\u5f55\u9875\uff0c\u6839\u636e\u4f20\u5165\u7684 url\uff0c\u767b\u5f55\u540e\u8df3\u8f6c\u56de\u5e94\u7528\uff0c\u7ee7\u7eed\u540e\u7eed\u7684\u4e1a\u52a1\u3002","title":"\u767b\u5f55"},{"location":"others/develop-guide/#_14","text":"\u6709\u767b\u5f55\u6001\u65f6\uff0c\u5f53\u524d\u767b\u5f55\u7528\u6237\u662f\u6700\u5e38\u7528\u5230\u7684\u4fe1\u606f\uff0c\u4e3a\u4e86\u907f\u514d\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u91cd\u590d\u8c03\u7528\u63a5\u53e3\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u6216\u8005\u5c06\u6574\u4e2a\u5bf9\u8c61\u653e\u5230\u65b9\u6cd5\u7684\u53c2\u6570\u4e2d\uff0c\u964d\u4f4e\u4e86\u53ef\u8bfb\u6027\u3001\u589e\u52a0\u4e86\u4f20\u53c2\u7684\u98ce\u9669\uff0c\u6211\u4eec\u4e00\u822c\u5728 interceptor \u7edf\u4e00\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u7136\u540e\u5728 request \u6216 threadLocal \u4e2d\u5b58\u50a8\u8be5\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u65b9\u6cd5\u7684\u8c03\u7528\u4e2d\u76f4\u63a5\u8bfb\u53d6\u5373\u53ef\u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 threadLocal \u6765\u5b58\u50a8\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684 demo\uff0c\u5728 controller/service \u4e2d\uff0c\u901a\u8fc7 ContextHolder.getCurrentUser() \u83b7\u53d6\u7528\u6237\u4fe1\u606f\u3002 public class ContextHolder { private ContextHolder () { // hide constructor } private static ThreadLocal < User > threadLocal = new ThreadLocal <> (); public static void setCurrentUser ( UserLoginInfo userLoginInfo , PersonService personService ) { threadLocal . set ( fromUserLoginInfo ( userLoginInfo , personService )); } public static User getCurrentUser () { return threadLocal . get (); } public static void clear () { threadLocal . remove (); } private static User fromUserLoginInfo ( UserLoginInfo userLoginInfo , PersonService personService ) { ...... return null ; } } interceptor \u4e2d\u5b58\u5165\u5bf9\u8c61 @Component public class LoginInterceptor implements HandlerInterceptor { @FeignService private PersonService personService ; @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { UserLoginInfo userLoginInfo = PassportAuth . getUserLoginInfo ( request , LoginUserType . PERSON ); if ( userLoginInfo == null ) { ...... return false ; } ContextHolder . setCurrentUser ( userLoginInfo , personService ); return true ; } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) { ContextHolder . clear (); } }","title":"\u5e38\u7528"},{"location":"others/develop-guide/#_15","text":"\u5e94\u7528\u8ba2\u9605\u662f\u5173\u7231\u901a\u5e94\u7528\u7684\u6838\u5fc3\uff0c\u9488\u5bf9\u5458\u5de5/\u4f01\u4e1a\u7528\u6237\uff0cMGR \u5e94\u7528\uff0c\u4f01\u4e1a\u5185\u90e8\u7cfb\u7edf\u5e94\u7528\u7b49\uff0c\u5177\u6709\u5404\u79cd\u914d\u7f6e\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\uff0c\u652f\u6301\u4f7f\u7528\u54ea\u4e9b\u8d44\u4ea7\u7b49\u7b49\u3002 \u5982\u679c\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6a21\u5757\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u3002","title":"\u5e94\u7528\u8ba2\u9605\u5173\u7cfb"},{"location":"others/develop-guide/#_16","text":"\u5f00\u53d1\u5e94\u7528\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u662f\u6821\u9a8c\u8be5\u5e94\u7528\u67d0\u7528\u6237\u662f\u5426\u53ef\u8bbf\u95ee\u3002 \u9700\u5f15\u5165 GAV\uff1a <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-newapp </artifactId> </dependency> Code: @FeignService AppCheckService appCheckService ; public void checkAppAccess ( Integer memberId , String appid ) { appCheckResult = appCheckService . checkAccess ( appid , memberId , null ); } appId \u6307\u67d0\u5e94\u7528\uff0cmemberId \u6307\u8bbf\u95ee\u7684\u7528\u6237\u3002\u5982\u679c\u8be5\u7528\u6237\u65e0\u6743\u9650\u8bbf\u95ee\u8bbf\u95ee\uff0c\u8be5\u65b9\u6cd5\u4f1a\u629b\u51fa BusinessFeignException\uff0c\u5f00\u53d1\u8005\u62e6\u622a\u540e\u8fdb\u884c\u76f8\u5e94\u5904\u7406\u3002 \u6709\u65f6\u5019\uff0c\u5458\u5de5\u6ca1\u6709\u8be5\u8d44\u4ea7\u4e5f\u4f1a\u88ab\u62e6\u622a\u3002","title":"\u6821\u9a8c\u662f\u5426\u53ef\u8bbf\u95ee"},{"location":"others/develop-guide/#_17","text":"\u8f6f\u4ef6\u521b\u5efa\u5b8c\u6210\u540e\uff08\u89c1\u524d\u9762\u7684\u7533\u8bf7\u5e94\u7528\uff09\uff0c\u70b9\u51fb\u7ee7\u7eed\u53d1\u5e03\uff08\u6216\u8005\u8be6\u60c5\uff09\uff0c\u53ef\u4ee5\u8fdb\u884c\u8f6f\u4ef6\u914d\u7f6e\u3002 \u6839\u636e\u4ea7\u54c1\u9700\u6c42\uff0c\u8bbe\u7f6e\u8be5\u5e94\u7528\u652f\u6301\u54ea\u4e9b\u7528\u6237\u4f7f\u7528\uff0c\u4e0e\u652f\u4ed8\u65f6\u80fd\u591f\u4f7f\u7528\u7684\u8d44\u4ea7\u3002 PC/MOB \u5730\u5740\uff1a\u5458\u5de5\u8bbf\u95ee\u7684\u5730\u5740\uff0c\u5728 \u7ed9\u5230/H5/PC \u5c55\u73b0\u7684\u5e94\u7528\u7684\u8bbf\u95ee\u5730\u5740\uff1b \u4f01\u4e1a\u7aef\u5730\u5740\uff1a\u4f01\u4e1a\u7528\u6237/\u4f01\u4e1a\u7ba1\u7406\u5458 \u8bbf\u95ee\u5e94\u7528\u7684\u7ba1\u7406\u754c\u9762\u5730\u5740\uff1b MGR \u6743\u9650\u5730\u5740\uff1a\u83b7\u53d6\u5e94\u7528\u7684\u6240\u6709\u6743\u9650\u4fe1\u606f\uff0c\u8fd4\u56de\u4e00\u4e2a\u6807\u51c6\u7684 json\uff0c\u65b9\u4fbf MGR \u7edf\u4e00\u7684\u6743\u9650\u7ba1\u7406\u4f7f\u7528\uff1b MGR \u5730\u5740\uff1aMGR \u540e\u53f0\u7684\u5e94\u7528\u5165\u53e3\u5730\u5740 \u5e94\u7528\u7c7b\u578b\uff1a\u6807\u51c6\u8fd8\u662f\u5b9a\u5236\uff0c\u770b\u4e1a\u52a1\u9700\u6c42\u3002 \u6807\u51c6\u7684\u8bdd\uff0c\u540e\u7eed\u53ef\u4ee5\u53d1\u5e03\u5230\u5e94\u7528\u5e02\u573a\uff0c\u7531\u4f01\u4e1a\u81ea\u5df1\u8ba2\u9605\u3002\u5b9a\u5236\u7684\u8bdd\u5219\u4e0d\u53ef\u4ee5\u3002 \u522b\u7684\u53c2\u6570\u4ecb\u7ecd\u89c1\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7cfb\u7edf\u7684\u8be6\u7ec6\u8bf4\u660e\u3002","title":"\u8f6f\u4ef6\u914d\u7f6e"},{"location":"others/develop-guide/#_18","text":"\u5e94\u7528\u914d\u7f6e\u5b8c\u6210\uff08\u5373\u53d1\u5e03\u5b8c\u6210\uff09\u540e\uff0c\u5982\u679c\u9700\u8981\u7ed9**\u5458\u5de5/\u4f01\u4e1a**\u4f7f\u7528\uff0c\u4e00\u822c\u9700\u8981\u5c06\u5e94\u7528\u653e\u5230\u5bf9\u5e94\u7684\u4ea7\u54c1\u8ba2\u9605\u533a\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u5bfc\u81f4\uff1a \u5e94\u7528\u8ba2\u9605\u68c0\u9a8c\u5931\u8d25\uff1b \u65e0\u6cd5\u4f7f\u7528\u5bf9\u5e94\u7684\u8d44\u4ea7\uff0c\u4f8b\u5982\uff1a\u5982\u679c\u4f60\u60f3\u652f\u6301\u79ef\u5206\u652f\u4ed8\uff0c\u4e00\u5b9a\u5f97\u5c06\u8fd9\u4e2a\u5e94\u7528\u653e\u5230**\u5173\u7231\u79ef\u5206**\u8fd9\u4e2a\u8ba2\u9605\u533a\u4e0b\u3002 \u5e94\u7528\u53d1\u5e03\u8ba2\u9605\u533a\u6d41\u7a0b\u5982\u4e0b\uff1a \u516c\u5f00\u7c7b\u578b\u53ef\u9009\u516c\u5f00\u3001\u975e\u516c\u5f00\u3001\u5185\u6d4b\u7b49\u3002 \u9009\u62e9\u516c\u5f00\u53ef\u4ee5\u8ba9\u4f01\u4e1a\u5728\u5e94\u7528\u5e02\u573a\u8ba2\u9605\u5e94\u7528\uff0c\u5426\u5219\u53ea\u80fd\u5728\u540e\u53f0\u914d\u7f6e\u3002 \u5982\u4e0a\uff0c\u4e00\u4e2a\u5e94\u7528\u7684\u6700\u7b80\u5355\u7684\u53d1\u5e03\u6d41\u7a0b\u5c31\u5b8c\u6210\u4e86\u3002\u4f46\u662f\u7528\u6237\uff08\u5458\u5de5/\u4f01\u4e1a\uff09\u8fd8\u65e0\u6cd5\u8bbf\u95ee\u8be5\u5e94\u7528\u6216\u8005\u4f7f\u7528\u76f8\u5173\u8d44\u4ea7\uff0c\u5f97\u4f01\u4e1a\u8ba2\u9605\u4e86\u8fd9\u4e2a\u5e94\u7528\u624d\u884c\u3002\u8fd9\u5c31\u7275\u626f\u5230\u4e86\u4e0b\u9762\u7684\u4ea7\u54c1\u76ee\u5f55\u3002","title":"\u4ea7\u54c1\u8ba2\u9605\u533a"},{"location":"others/develop-guide/#_19","text":"\u5173\u7231\u901a\u7684\u4e1a\u52a1\u6839\u636e\u573a\u666f\uff0c\u5212\u5206\u4e86\u5f88\u591a\u4ea7\u54c1\u7ebf\uff0c\u4f8b\u5982\uff1a\u5173\u7231\u79ef\u5206\u3001\u5173\u7231\u989d\u5ea6\u7b49\u7b49\u3002\u57fa\u672c\u6240\u6709\u7684\u5e73\u53f0\u5e94\u7528\uff0c\u90fd\u8981\u653e\u5165\u67d0\u4e2a\u4ea7\u54c1\u7ebf\u4e0b\u3002","title":"\u4ea7\u54c1\u76ee\u5f55"},{"location":"others/develop-guide/#_20","text":"MGR \u540e\u53f0\u8fdb\u5165 \u4ea7\u54c1\u76ee\u5f55 \uff1a \u5f00\u901a\u4ea7\u54c1\u7ebf \uff1a \u9009\u62e9\u597d\u4ea7\u54c1\u540e\u63d0\u4ea4\uff0c\u5373\u53ef\u7ed9\u8fd9\u4e2a\u4f01\u4e1a\u521b\u5efa\u67d0\u4e2a\u4ea7\u54c1\u7ebf\u3002","title":"\u5f00\u901a\u4ea7\u54c1\u7ebf"},{"location":"others/develop-guide/#_21","text":"\u9664\u4e86\u5728\u4f01\u4e1a\u7aef\u8ba2\u9605\u516c\u5f00\u7684\u5e94\u7528\u5916\uff0c\u7edf\u4e00\u652f\u6301\u5728\u4ea7\u54c1\u76ee\u5f55\u8ba2\u9605\u5e94\u7528\u3002 \u5728\u4e0d\u540c\u7684\u4ea7\u54c1\u7ebf\u4e0b\uff0c\u6dfb\u52a0\u5e94\u7528\uff0c\u5373\u53ef\u8ba9\u8be5\u4f01\u4e1a\u8ba2\u9605\u4e86\u8be5\u5e94\u7528\uff0c\u5982\u679c\u652f\u4ed8\u7684\u8bdd\uff0c\u4e5f\u80fd\u4f7f\u7528\u5bf9\u5e94\u7684\u8d44\u4ea7\u3002","title":"\u5e94\u7528\u7ba1\u7406"},{"location":"others/develop-guide/#_22","text":"\u5173\u7231\u901a\u6709\u7edf\u4e00\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u7528\u6765\u53d1\u9001\u77ed\u4fe1\u3001\u90ae\u4ef6\u3001\u7ed9\u5230\u7684\u901a\u77e5\u3001\u5fae\u4fe1\u7684\u901a\u77e5\u7b49\u7b49\uff0c\u9700\u8981\u5f15\u5165 GAV <dependency> <groupId> com.ciicgat.api </groupId> <artifactId> ciicgat-api-notification </artifactId> </dependency> \u5927\u591a\u6570\u63a5\u53e3\uff0c\u5165\u53c2\u4f1a\u6709 appId \u53c2\u6570\uff0c\u8bf7\u5c3d\u91cf\u8bbe\u7f6e\uff0c\u4fbf\u4e8e\u540e\u671f\u95ee\u9898\u7684\u6392\u67e5\u4e0e\u6d88\u606f\u7684\u8ffd\u8e2a\u3002 \u6d88\u606f\u7684\u67e5\u8be2\u4e0e\u8bbe\u7f6e\uff0c\u5728 **MGR \u7684\u6d88\u606f\u7ba1\u7406**\u4e2d\u7edf\u4e00\u5904\u7406\u3002","title":"\u6d88\u606f\u7cfb\u7edf"},{"location":"others/develop-guide/#_23","text":"\u4e0d\u57fa\u4e8e\u6a21\u677f\uff0c\u5355\u4e2a\u53d1\u9001\u7b80\u5355\u7684\u77ed\u4fe1\u6216\u8005\u90ae\u4ef6\u65f6\uff0c\u53ef\u4f7f\u7528\u3002 \u4e00\u822c\u5efa\u8bae\u57fa\u4e8e\u6a21\u677f\u914d\u7f6e\uff0c\u540e\u671f\u6587\u6848\u53ef\u4ee5\u8054\u7cfb\u4ea7\u54c1\u4fee\u6539\uff0c\u907f\u514d\u9879\u76ee\u518d\u6b21\u53d1\u7248\u3002 @Slf4j @Controller public class MessageController { @FeignService SmsSendService smsSendService ; @FeignService EmailSendService emailSendService ; @RequestMapping ( value = \"/message/emaysoftcom/sendSMS\" ) public void message ( @RequestParam ( \"mobile\" ) String mobile , @RequestParam ( \"content\" ) String content , HttpServletRequest req , HttpServletResponse resp ) { RequestInfo requestInfo = ( RequestInfo ) req . getAttribute ( Constants . REQUEST_INFO_TAG ); Sms sms = new Sms (); sms . setMobile ( mobile ); sms . setContent ( content ); String result = smsSendService . sendSmsByBody ( sms ); log . info ( \"smsSendService.sendSms|result={}\" , result ); ResponseUtil . response ( requestInfo , result , resp ); } @RequestMapping ( value = \"/message/emaysoftcom/sendEmail\" ) public void email ( HttpServletRequest req , HttpServletResponse resp , @RequestParam ( value = \"receiverEmail\" ) String receiverEmail , @RequestParam ( value = \"title\" ) String title , @RequestParam ( value = \"content\" ) String content ) { RequestInfo requestInfo = ( RequestInfo ) req . getAttribute ( Constants . REQUEST_INFO_TAG ); String result = emailSendService . sendEmail ( title , content , receiverEmail ); log . info ( \"emailSendService.sendEmail|result={}\" , result ); ResponseUtil . response ( requestInfo , result , resp ); } }","title":"\u57fa\u7840\u4f7f\u7528"},{"location":"others/develop-guide/#_24","text":"\u57fa\u4e8e\u6a21\u677f\uff0c\u53ef\u4ee5\u53d1\u9001\u591a\u79cd\u6e20\u9053\u7684\u4fe1\u606f\u3002\u9996\u5148\u5f97\u5728 MGR \u7684\u6d88\u606f\u7ba1\u7406 \u8fdb\u884c\u6a21\u677f\u7684\u521b\u5efa\u5de5\u4f5c\uff08\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u914d\u7f6e\uff0c\u5e76\u4e14\u5c3d\u91cf\u4fdd\u8bc1\u4e00\u81f4\uff0c\u4e00\u822c\u5f00\u53d1\u6d4b\u8bd5\u7531\u5f00\u53d1\u81ea\u5df1\u914d\u7f6e\uff0c\u751f\u4ea7\u8054\u7cfb\u4ea7\u54c1\u914d\u7f6e\uff09\u3002 \u521b\u5efa\u6a21\u677f \u8bbe\u7f6e\u57fa\u672c\u4fe1\u606f \u8bbe\u7f6e\u901a\u914d\u7b26 \u901a\u914d\u7b26\u7531\u53c2\u6570\u503c\u548c\u901a\u914d\u7b26\u540d\u79f0\u7ec4\u6210\uff0c\u53c2\u6570\u503c\u662f\u8c03\u7528\u63a5\u53e3\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u540d\u79f0\uff0c\u901a\u914d\u7b26\u662f\u540e\u7eed\u914d\u7f6e\u6d88\u606f\u5177\u4f53\u6a21\u677f\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u6807\u5fd7\u4f4d\u3002 \u4f01\u4e1a\u540d\u79f0\u548c\u79f0\u8c13\u662f\u4e00\u4e9b\u9ed8\u8ba4\u7684\u901a\u914d\u7b26\uff0c\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0d\u8981\u91cd\u590d\u5b9a\u4e49\uff0c\u5e76\u4e14\u53c2\u6570\u503c\u4e0d\u8981\u91cd\u590d\u3002 \u7f16\u8f91\u5185\u5bb9 \u6b64\u5904\u7f16\u8f91\u6d88\u606f\u7684\u5b9e\u9645\u5185\u5bb9\uff0c\u901a\u914d\u7b26\u5185\u5bb9\u7531\u4ee3\u7801\u5199\u5165\u3002\u5185\u5bb9\u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u6309\u4fdd\u5b58\uff0c\u5373\u5b8c\u6210\u4e00\u4e2a\u6a21\u677f\u7684\u521b\u5efa\u3002 API \u53d1\u9001\u6a21\u677f\u6d88\u606f \u901a\u8fc7 MsgSendService \u53d1\u9001\u6a21\u677f\u6d88\u606f\u3002\u4e0b\u9762\u793a\u4f8b\u4e2d\u7684 sendParamMap \u5373\u662f\u901a\u914d\u7b26\u7684\u53c2\u6570\u3002enterpriseName \u7b49\u662f\u9ed8\u8ba4\u7684\u901a\u7528\u53c2\u6570\uff0c\u5728\u7ed9\u5458\u5de5\u53d1\u9001\u65f6\uff0c\u4e0d\u9700\u8981\u914d\u7f6e\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u653e\u5165\u3002 SendMsg sendMsgRequest = new SendMsg (); sendMsgRequest . setAppid ( appProperties . getAppId ()); sendMsgRequest . setCode ( \"TEST_GREETING_CARD_SEND_SMS_NOTIFY\" ); sendMsgRequest . setLanguage ( \"cn\" ); sendMsgRequest . setChannels ( \"[3]\" ); sendMsgRequest . setReceiverName ( clientDO . getName ()); // 1\u3001\u4e2a\u4eba\u7528\u6237 sendMsgRequest . setUserTag ( 1 ); // \u53c2\u6570 Map < String , Object > sendParamMap = new HashMap <> (); sendParamMap . put ( \"testMobile\" , clientDO . getName ()); sendMsgRequest . setParameters ( JSON . toJSONString ( sendParamMap )); // \u904d\u5386\u6765\u8bbf\u8005\u624b\u673a\u4fe1\u606f sendMsgRequest . setReceiverMobile ( mobile ); msgSendService . sendTplMsg ( sendMsgRequest );","title":"\u57fa\u4e8e\u6a21\u677f\u4f7f\u7528"},{"location":"others/develop-guide/#_25","text":"\u9488\u5bf9\u8df3\u8f6c\u5173\u7231\u901a\u6536\u94f6\u53f0\u7684\u573a\u666f\uff0c\u63d0\u4f9b\u4e86\u5de5\u5177\u7c7b\u652f\u6301\uff0c\u7b80\u5316\u4e86\u63a5\u5165\u6536\u94f6\u53f0\u7684\u6210\u672c\u3002 \u5bf9\u63a5\u524d\u9700\u8981\u6309\u7167\u524d\u9762\u7684\u6d41\u7a0b\uff0c\u5b8c\u6210\u7533\u8bf7\u5e94\u7528\u3001\u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u3001\u4ea7\u54c1\u76ee\u5f55\u7b49\u64cd\u4f5c\uff0c\u540c\u65f6\u7ed9\u767b\u5f55\u7684\u7528\u6237\u53d1\u653e\u76f8\u5e94\u7684\u8d44\u4ea7\uff0c\u624d\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u8d77\u6536\u94f6\u53f0\u3002","title":"\u6536\u94f6\u53f0"},{"location":"others/develop-guide/#excashier","text":"\u6536\u94f6\u53f0\u7684\u5927\u81f4\u6d41\u7a0b \u5de5\u5177\u7c7b\u4f7f\u7528\u8bf4\u660e \u5f15\u5165\u4f9d\u8d56 \uff1a <dependency> <artifactId> ciicgat-api-excashier </artifactId> <groupId> com.ciicgat.api </groupId> </dependency> \u8df3\u8f6c\u6536\u94f6\u53f0\u652f\u4ed8 demo \uff1a \u652f\u4ed8\u7684\u65f6\u5019\uff0c\u62fc\u63a5 url\uff0c\u7136\u540e\u8df3\u8f6c\uff0c\u4f7f\u7528 GatPay.buildUrl(PaymentRequest paymentRequest) \uff0c\u5176\u4e2d return_url \uff08\u4e00\u5b9a\u662f\u653e\u5728 web \u5c42\uff09 \u548c notify_url \u9700\u8981\u5e94\u7528\u81ea\u5df1\u63d0\u4f9b\uff1b return_url \uff08\u4e00\u5b9a\u662f\u653e\u5728 web \u5c42\uff09\u662f\u652f\u4ed8\u5b8c\u6210\u540e\uff0c\u6536\u94f6\u53f0\u8df3\u8f6c\u7684\u9875\u9762\uff0c\u5c55\u793a\u8ba2\u5355\u7684\u7ed3\u679c\uff0c\u5e94\u7528\u81ea\u5df1\u5904\u7406\uff1b notify_url \uff08\u4e00\u822c\u653e\u5728 ws\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728 web\uff09\u662f\u652f\u4ed8\u5b8c\u6210\u540e\uff0c\u6536\u94f6\u53f0\u901a\u77e5\u652f\u4ed8\u7ed3\u679c\uff08\u4ec5\u6709\u6210\u529f\u624d\u4f1a\u901a\u77e5\uff09\uff0c\u968f\u540e GatPay.checkReturnSignature(PayReturnResponse returnResponse) \u4f7f\u7528\u8be5\u65b9\u6cd5\u6821\u9a8c return \u7684\u7b7e\u540d\uff1b GatPay.checkNotifySignature(PayNotifyResponse notifyResponse) \u4f7f\u7528\u8be5\u65b9\u6cd5\u6821\u9a8c notify \u7684\u7b7e\u540d\u3002 @ApiOperation ( value = \"\u652f\u4ed8notify\u63a5\u53e3\uff08\u6536\u94f6\u53f0\u8c03\u7528\uff09\" ) @RequestMapping ( value = \"/notify_url\" ) public void notifyUrl ( PayNotifyResponse payNotifyRespons , HttpServletResponse response ) throws IOException { try { response . setHeader ( \"Content-type\" , \"text/html;charset=UTF-8\" ); response . setCharacterEncoding ( \"UTF-8\" ); LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|payNotifyResp\uff1a{}\" , JSONObject . toJSONString ( payNotifyRespons )); // boolean verifyNotifyParams = verifyNotifyParams(payNotifyResp); boolean b = GatPay . checkNotifySignature ( payNotifyRespons ); if ( ! b ) { LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|verifyNotifyParams fail\" ); LOGGER . info ( \"\u3002\u3002\u3002\u3002PayController|notify_url|return fail\" ); response . getWriter (). write ( \"fail\" ); return ; } ...... } catch ( Exception e ) { LOGGER . error ( \"\u3002\u3002\u3002\u3002PayController|gatNotify:\" , e ); response . getWriter (). write ( \"fail\" ); return ; } }","title":"\u4e2a\u4eba\u6536\u94f6\u53f0\uff08excashier\uff09"},{"location":"others/develop-guide/#cashier","text":"\u5de5\u5177\u7c7b\u4f7f\u7528\u8bf4\u660e \u5f15\u5165\u4f9d\u8d56 \uff1a <dependency> <artifactId> ciicgat-api-cashier </artifactId> <groupId> com.ciicgat.api </groupId> </dependency>","title":"\u4f01\u4e1a\u6536\u94f6\u53f0\uff08cashier\uff09"},{"location":"others/develop-guide/#mgr","text":"\u524d\u7aef\u7ec4\u4ef6\u5e93\uff1a GLego \u7f51\u5173\u914d\u7f6e\uff1a kong MGR \u8be6\u89e3 TODO\uff0c\u9884\u8ba1\u7b49\u65b0\u7684\u540e\u53f0\u6846\u67b6\u51fa\u6765\u540e\u7edf\u4e00\u518d\u5f00\u4e00\u4e2a\u6587\u6863\u5b8c\u5584\u3002","title":"MGR"},{"location":"others/develop-guide/#_26","text":"\u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u8981\u5f88\u591a\u6a21\u5757\u7684\u914d\u7f6e\u4e0e\u786e\u8ba4\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a gconf \u914d\u7f6e \u6570\u636e\u5e93\u7533\u8bf7\u4e0e\u6570\u636e\u5e93 gconf \u914d\u7f6e redis \u7684 gconf \u914d\u7f6e \u9879\u76ee\u7533\u8bf7 \u5e94\u7528\u7533\u8bf7 \u5e94\u7528\u8ba2\u9605\u5173\u7cfb\u7684\u914d\u7f6e \u6d88\u606f\u7cfb\u7edf\u7684\u914d\u7f6e\uff08\u5982\u679c\u6709\u9700\u8981\uff09 ......","title":"\u90e8\u7f72\u51c6\u5907"},{"location":"others/security-base/","text":"\u5b89\u5168\u57fa\u7840 \u00b6 WEB \u5e94\u7528\u5e38\u89c1\u5b89\u5168\u6f0f\u6d1e \u00b6 XSS - \u8de8\u7ad9\u811a\u672c\u653b\u51fb \u00b6 \u5b9a\u4e49\uff1a \u00b6 \u6700\u666e\u904d\u7684 Web \u5e94\u7528\u5b89\u5168\u6f0f\u6d1e\u3002\u8fd9\u7c7b\u6f0f\u6d1e\u80fd\u591f\u4f7f\u5f97\u653b\u51fb\u8005\u5d4c\u5165\u6076\u610f\u811a\u672c\u4ee3\u7801\u5230\u6b63\u5e38\u7528\u6237\u4f1a\u8bbf\u95ee\u5230\u7684\u9875\u9762\u4e2d\uff0c\u5f53\u6b63\u5e38\u7528\u6237\u8bbf\u95ee\u8be5\u9875\u9762\u65f6\uff0c\u5219\u53ef\u5bfc\u81f4\u5d4c\u5165\u7684\u6076\u610f\u811a\u672c\u4ee3\u7801\u7684\u6267\u884c\uff0c\u4ece\u800c\u8fbe\u5230\u6076\u610f\u653b\u51fb\u7528\u6237\u7684\u76ee\u7684\u3002 \u4f8b\u5b50\uff1a \u00b6 \u63d0\u4ea4\u7684\u8868\u5355\u4e2d\uff0c\u5305\u542b JavaScript \u8bed\u6cd5\u7b49\uff0c\u63d0\u4ea4\u540e\u518d\u6e32\u67d3\u5230\u9875\u9762\u4e0a\uff0c\u5bfc\u81f4\u5176 HTML \u6807\u7b7e\u4e0e JavaScript \u88ab\u663e\u793a\u6216\u8005\u6267\u884c\u3002 \u5f71\u54cd\uff1a \u00b6 \u76d7\u7528 cookie\uff0c\u83b7\u53d6\u654f\u611f\u4fe1\u606f\uff0c\u4ee5\u88ab\u653b\u51fb\u8005\u7684\u8eab\u4efd\uff0c\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff1b \u9875\u9762\u6e32\u67d3\u5f02\u5e38\uff0c\u6570\u636e\u5f02\u5e38\uff1b \u8bbf\u95ee\u91cf\u6781\u5927\u7684\u4e00\u4e9b\u9875\u9762\u4e0a\u7684 XSS \u53ef\u4ee5\u653b\u51fb\u4e00\u4e9b\u5c0f\u578b\u7f51\u7ad9\uff0c\u5b9e\u73b0 DDoS \u653b\u51fb\u7684\u6548\u679c\u3002 \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 \u4f7f\u7528 http only \u7684 cookie\uff1b \u9488\u5bf9\u573a\u666f\uff0c\u5bf9\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u4e25\u683c\u6821\u9a8c\uff0c\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5305\u542b HTML \u6807\u7b7e\uff0c\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u8f6c\u4e49\u3002 CSRF - \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 \u00b6 \u5b9a\u4e49\uff1a \u00b6 \u631f\u5236\u7528\u6237\u5728\u5f53\u524d\u5df2\u767b\u5f55\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u4e0a\u6267\u884c\u975e\u672c\u610f\u7684\u64cd\u4f5c\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u8ddf\u8de8\u7f51\u7ad9\u811a\u672c\uff08XSS\uff09\u76f8\u6bd4\uff0cXSS \u5229\u7528\u7684\u662f\u7528\u6237\u5bf9\u6307\u5b9a\u7f51\u7ad9\u7684\u4fe1\u4efb\uff0cCSRF \u5229\u7528\u7684\u662f\u7f51\u7ad9\u5bf9\u7528\u6237\u7f51\u9875\u6d4f\u89c8\u5668\u7684\u4fe1\u4efb\u3002 \u4f8b\u5b50\uff1a \u00b6 \u653b\u51fb\u8005\u5e76\u4e0d\u80fd\u901a\u8fc7 CSRF \u653b\u51fb\u6765\u76f4\u63a5\u83b7\u53d6\u7528\u6237\u7684\u8d26\u6237\u63a7\u5236\u6743\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u7a83\u53d6\u7528\u6237\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u4ed6\u4eec\u80fd\u505a\u5230\u7684\uff0c\u662f\u6b3a\u9a97\u7528\u6237\u6d4f\u89c8\u5668\uff0c\u8ba9\u5176\u4ee5\u7528\u6237\u7684\u540d\u4e49\u8fd0\u884c\u64cd\u4f5c\u3002 \u5f71\u54cd\uff1a \u00b6 \u4e00\u65e6\u53d1\u751f\uff0c\u5f71\u54cd\u4e25\u91cd\uff0c\u4e22\u5931\u94b1\u8d22\u3002 \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 \u6821\u9a8c referer \u6821\u9a8c\uff1b \u6dfb\u52a0\u6821\u9a8c token\uff08\u6216\u8005\u522b\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\uff09\u653e\u5230 http \u8bf7\u6c42\u4e2d\u3002 \u70b9\u52ab\u6301\u653b\u51fb - \u754c\u9762\u4f2a\u88c5\u653b\u51fb \u00b6 \u5b9a\u4e49\uff1a \u00b6 \u653b\u51fb\u8005\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u900f\u660e\u7684 iframe \u8986\u76d6\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u7f51\u9875\u4e0a\uff0c\u7136\u540e\u8bf1\u4f7f\u7528\u6237\u5728\u8be5\u7f51\u9875\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u5f53\u7528\u6237\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u70b9\u51fb\u900f\u660e\u7684 iframe \u9875\u9762\u65f6\uff0c\u7528\u6237\u7684\u64cd\u4f5c\u5df2\u7ecf\u88ab\u52ab\u6301\u5230\u653b\u51fb\u8005\u4e8b\u5148\u8bbe\u8ba1\u597d\u7684\u6076\u610f\u6309\u94ae\u6216\u94fe\u63a5\u4e0a\u3002\u653b\u51fb\u8005\u65e2\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u52ab\u6301\u8bbe\u8ba1\u4e00\u4e2a\u72ec\u7acb\u7684\u6076\u610f\u7f51\u7ad9\uff0c\u6267\u884c\u9493\u9c7c\u653b\u51fb\u7b49\uff1b\u4e5f\u53ef\u4ee5\u4e0e XSS \u548c CSRF \u653b\u51fb\u76f8\u7ed3\u5408\uff0c\u7a81\u7834\u4f20\u7edf\u7684\u9632\u5fa1\u63aa\u65bd\uff0c\u63d0\u5347\u6f0f\u6d1e\u7684\u5371\u5bb3\u7a0b\u5ea6\u3002 \u4f8b\u5b50\uff1a \u00b6 \u6076\u610f\u7f51\u7ad9\u4e0a\u7528 iframe \u5d4c\u5957\u4e86\u4e00\u4e2a \u5fae\u535a\u5173\u6ce8\u67d0\u5927 V \u7684\u9875\u9762\uff0ciframe \u900f\u660e\u5ea6\u8bbe\u7f6e\u4e3a 0\u3002\u9875\u9762\u4e0a\u663e\u793a\u4e00\u4e9b\u5fc3\u52a8 \ud83d\udc93 \u7684\u56fe\u7247\uff0c\u8bf1\u4f7f\u7528\u6237\u70b9\u51fb\uff0c\u5b9e\u9645\u89e6\u53d1\u4e86\u5fae\u535a\u9875\u9762\u7684\u5173\u6ce8\u3002 \u5f71\u54cd\uff1a \u00b6 \u7c7b\u4f3c csrf \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 X-FRAME-OPTIONS \u662f\u76ee\u524d\u6700\u53ef\u9760\u7684\u65b9\u6cd5\u3002 X-FRAME-OPTIONS \u662f\u5fae\u8f6f\u63d0\u51fa\u7684\u4e00\u4e2a http \u5934\uff0c\u4e13\u95e8\u7528\u6765\u9632\u5fa1\u5229\u7528 iframe \u5d4c\u5957\u7684\u70b9\u51fb\u52ab\u6301\u653b\u51fb\u3002 \u8fd9\u4e2a\u5934\u6709\u4e09\u4e2a\u503c\uff1a DENY // \u62d2\u7edd\u4efb\u4f55\u57df\u52a0\u8f7d SAMEORIGIN // \u5141\u8bb8\u540c\u6e90\u57df\u4e0b\u52a0\u8f7d ALLOW-FROM // \u53ef\u4ee5\u5b9a\u4e49\u5141\u8bb8frame\u52a0\u8f7d\u7684\u9875\u9762\u5730\u5740 \u4ee3\u7801\u5b89\u5168 \u00b6 \u4ee3\u7801\u5b89\u5168\u5305\u542b\u5f88\u591a\u65b9\u9762\uff0c\u4e00\u65b9\u9762\u662f\u5404\u4e2a\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\u4e0d\u5f53\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u4e1a\u52a1\u903b\u8f91\u4e0a\u7684\u6f0f\u6d1e\uff0c\u8fd9\u91cc\u6311\u51e0\u4e2a\u7b80\u5355\u63cf\u8ff0\u4e0b\u3002 \u8d8a\u6743 \u00b6 \u4f8b\u5b50\uff1a \u00b6 A \u7528\u6237\u80fd\u770b\u89c1\u6216\u64cd\u4f5c B \u7528\u6237\u7684\u79c1\u5bc6\u4fe1\u606f A \u7528\u6237\u6ca1\u6709\u6743\u9650\u770b\u89c1\u4fe1\u606f B\uff0c\u4f46\u662f\u6743\u9650\u6ca1\u63a7\u5236\u597d\uff0c\u4ecd\u80fd\u770b\u5230 A \u7528\u6237\u6ca1\u6709\u8ba2\u9605\u5e94\u7528 B\uff0c\u4f46\u662f\u4ecd\u80fd\u591f\u8bbf\u95ee \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 \u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u9488\u5bf9\u8ba2\u5355\uff0c\u4ea4\u6613\u7b49\u7b49\u4fe1\u606f\uff0c\u4e00\u5b9a\u8981\u8003\u8651\u662f\u5426\u6821\u9a8c\u4e0b\u5355\u4eba\u3002 \u91cd\u590d\u63d0\u4ea4 \u00b6 \u4f8b\u5b50\uff1a \u00b6 \u5458\u5de5\u70b9\u8d5e\u65f6\uff0c\u5feb\u901f\u591a\u6b21\u70b9\u51fb\u4e86\u63d0\u4ea4\uff0c\u5bfc\u81f4\u540e\u53f0\u4e00\u6b21\u6536\u5230\u4e86\u591a\u6b21\u76f8\u540c\u7684\u8bf7\u6c42\u3002\u5982\u679c\u6ca1\u6709\u505a\u653e\u91cd\u590d\u63d0\u4ea4\u7684\u62e6\u622a\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u540c\u6837\u7684\u5185\u5bb9\u53d1\u653e\u4e86\u591a\u6b21\uff0c\u8fdd\u80cc\u4e86\u7528\u6237\u7684\u521d\u8877\u3002 \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 \u5982\u679c\u662f\u670d\u52a1\u7aef\u6e32\u67d3\u7684\u9879\u76ee\u7684\u8bdd\uff0c\u8df3\u8f6c\u5230\u70b9\u8d5e\u9875\u9762\u65f6\uff0c\u7531\u670d\u52a1\u7aef\u751f\u6210\u4e00\u4e2a token\uff0c\u653e\u5230\u9875\u9762\u4e0a\uff0c\u63d0\u4ea4\u65f6\u4e00\u8d77\u5e26\u5230\u540e\u6bb5\uff0c\u7531\u540e\u7aef\u8fdb\u884c\u6709\u6548\u6027\u6821\u9a8c\uff08\u5229\u7528 redis \u7684\u5206\u5e03\u5f0f\u9501\uff09\uff0c\u4fdd\u8bc1\u4e00\u5b9a\u7684\u5b89\u5168\uff0c\u9632\u6b62\u91cd\u590d\u63d0\u4ea4\u3002 \u4fe1\u606f\u5b89\u5168 \u00b6 \u4f8b\u5b50\uff08\u53cd\u4f8b\uff09\uff1a \u00b6 \u7528\u6237\u4fee\u6539\u5bc6\u7801\u65f6\uff0c\u5bc6\u7801\u76f4\u63a5\u660e\u6587\u4f20\u5230\u540e\u6bb5\uff1b \u9875\u9762\u6e32\u67d3\u7535\u5b50\u5361\u7684\u5361\u5bc6\uff0c\u6216\u8005\u8c03\u7528\u63a5\u53e3\u83b7\u53d6\u5361\u5bc6\u4fe1\u606f\u65f6\u660e\u6587\u4f20\u9012\uff1b \u5361\u5bc6\u3001\u5de5\u8d44\u7b49\u9690\u79c1\u4fe1\u606f\u76f4\u63a5\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\uff1b \u5bc6\u7801\u3001\u5de5\u8d44\u7b49\u9690\u79c1\u4fe1\u606f\uff0c\u660e\u6587\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u4e2d\uff1b gfs \u6587\u4ef6\u4e0a\u4f20\u4e2d\uff0c\u90e8\u5206\u91cd\u8981\u7684\u6587\u4ef6\u4f7f\u7528 public \u7684\u65b9\u5f0f\u4e0a\u4f20\uff1b \u90e8\u5206 url \u5730\u5740\u6839\u636e\u4e3b\u952e ID \u5c55\u793a\uff0c\u53c8\u6ca1\u6709\u505a\u6821\u9a8c\uff0c\u5bfc\u81f4\u88ab\u7528\u6237\u6839\u636e\u81ea\u589e ID \u67e5\u8be2\u6240\u6709\u6570\u636e\uff1b ...... \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 \u65e5\u5fd7\u6216\u8005\u6570\u636e\u5e93\u4e2d\uff0c\u660e\u6587\u8bb0\u5f55\u9690\u79d8\u4fe1\u606f\uff0c\u662f\u5341\u5206\u5371\u9669\u7684\uff0c\u9488\u5bf9\u5bc6\u7801\u7b49\uff0c\u8bf7\u4e00\u5b9a\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u65e0\u4eba\u80fd\u83b7\u53d6\u660e\u6587\u5bc6\u7801\uff0c\u9488\u5bf9\u5361\u5bc6\uff0c\u5de5\u8d44\u7b49\uff0c\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u5bc6\u94a5\u65e0\u4eba\u80fd\u83b7\u53d6\u5b8c\u5168\uff0c\u6211\u4eec\u516c\u53f8\u53ef\u8003\u8651\u91c7\u7528\u5df2\u6709\u7684 KMS\u3002 **\u65e5\u5fd7\u5b89\u5168**\u5f88\u91cd\u8981\uff0c\u4e00\u822c\u65e5\u5fd7\u662f\u4e0d\u9650\u5236\u516c\u53f8\u4efb\u4f55\u5f00\u53d1\u8bbf\u95ee\u7684\uff0c\u5982\u679c\u5361\u5bc6\u3001\u5de5\u8d44\u7b49\u4fe1\u606f\u8bb0\u5f55\u5728\u4e86\u65e5\u5fd7\u4e2d\uff0c\u76f8\u5f53\u4e8e\u66b4\u9732\u5728\u4e86\u6240\u6709\u4eba\u4e25\u91cd\uff0c\u6240\u4ee5\u9488\u5bf9\u91cd\u8981\u7684\u9879\u76ee\uff0c\u4e00\u5b9a\u8981\u6709\u8fd9\u4e2a\u610f\u8bc6\uff0c\u907f\u514d\u8be5\u95ee\u9898\u3002 \u867d\u7136 https \u57fa\u672c\u4fdd\u8bc1\u4e86\u4f20\u8f93\u5c42\u7684\u5b89\u5168\uff0c\u4f46\u662f\u8003\u8651\u5230\u4e2d\u95f4\u4eba\u653b\u51fb\u6f0f\u6d1e\u3001\u5ba2\u6237\u7aef\u4e2d\u75c5\u6bd2\u3001\u9ec4\u725b\u5237\u5355\uff08\u9488\u5bf9\u7535\u5b50\u5361\uff09\u7b49\u573a\u666f\uff0c\u5efa\u8bae\u9488\u5bf9\u6bd4\u8f83\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u8fd8\u662f\u91c7\u7528\u4e00\u6b21\u5bf9\u79f0\u52a0\u5bc6\u540e\uff0c\u518d\u4f20\u5230\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u3002 \u90e8\u5206\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a\u8d26\u5355\u3001\u8425\u4e1a\u6267\u7167\u7167\u7247\u7b49\u7b49\u79c1\u5bc6\u4fe1\u606f\uff0c\u4f7f\u7528 private \u7684\u65b9\u5f0f\u4e0a\u4f20\uff0c\u5177\u4f53\u53c2\u8003 gfs - \u4f7f\u7528\u6307\u5357 \u3002 \u4ee3\u7801\u7f16\u5199\u4e0d\u5f53 \u00b6 \u4f8b\u5b50\uff1a \u00b6 redis \u6a21\u7cca\u67e5\u8be2\uff0c\u4e00\u6b21\u67e5\u8be2\u5927\u91cf\u7684 key\uff0c\u5bfc\u81f4 redis \u5835\u585e\uff0c\u5f71\u54cd\u522b\u7684\u5e94\u7528\u5bf9 redis \u7684\u4f7f\u7528\uff1b mysql \u6279\u91cf\u67e5\u8be2\uff0c\u4e00\u6b21\u67e5\u8be2\u6570\u636e\u8fc7\u5927\uff0c\u6216\u8005\u641c\u7d22\u672a\u8d70\u7d22\u5f15\uff1b mysql \u4f7f\u7528 ${} \u8fdb\u884c\u6392\u5e8f\uff0c\u672a\u5bf9\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u6821\u9a8c\uff0c\u5bfc\u81f4\u524d\u7aef\u4f20\u5165 sql\uff0c\u4ea7\u751f sql \u6ce8\u5165 ...... \u9632\u62a4\u63aa\u65bd\uff1a \u00b6 redis \u6a21\u7cca\u67e5\u8be2\u5c3d\u91cf\u4f7f\u7528 scan \u4ee3\u66ff\uff1b \u9488\u5bf9 mysql \u7684\u641c\u7d22\uff0c\u5bf9\u6570\u636e\u7684\u91cf\u8981\u6709\u4e2a\u4f30\u8ba1\uff0c\u5982\u679c\u4f30\u8ba1\u6570\u636e\u4f1a\u6bd4\u8f83\u5927\uff0c\u5c3d\u91cf\u4f7f\u7528\u5206\u9875\uff0c\u6216\u8005\u901a\u8fc7 es \u6765\u67e5\u8be2\uff1b \u4f7f\u7528 ${} \u65f6\uff0c\u5bf9\u4f20\u5165\u7684\u6761\u4ef6\u53c2\u6570\u9700\u8981\u6821\u9a8c\uff1b ...... \u7ba1\u7406\u5b89\u5168 \u00b6 \u8fd9\u91cc\u9488\u5bf9\u6211\u4eec\u516c\u53f8\u76ee\u524d\u7684\u53d1\u5e03\u6d41\u7a0b - Frigate\uff0c\u5176\u4e2d\u4f53\u73b0\u4e86\u5f88\u591a\u5b89\u5168\u65b9\u9762\u7684\u8003\u8651\u3002 \u6570\u636e\u5e93\u6743\u9650\u6309\u9700\u5206\u914d\uff0c\u9ed8\u8ba4\u53ea\u5206\u914d DDL\uff1b \u6267\u884c\u7684 sql \u7ecf\u8fc7\u67b6\u6784\u5e08\u5ba1\u6838\u540e\u518d\u4e0a\u7ebf\uff0c\u4e14\u53ea\u80fd\u901a\u8fc7 frigate \u6267\u884c\uff1b \u53d1\u5e03\u65f6\uff0c\u4fdd\u8bc1\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u4f7f\u7528\u7684\u4ea7\u7269\u662f\u540c\u4e00\u4e2a\uff0c\u5c3d\u91cf\u907f\u514d\u4e0a\u7ebf\u7684\u98ce\u9669\uff1b ......","title":"\u5b89\u5168\u57fa\u7840"},{"location":"others/security-base/#_1","text":"","title":"\u5b89\u5168\u57fa\u7840"},{"location":"others/security-base/#web","text":"","title":"WEB \u5e94\u7528\u5e38\u89c1\u5b89\u5168\u6f0f\u6d1e"},{"location":"others/security-base/#xss-","text":"","title":"XSS - \u8de8\u7ad9\u811a\u672c\u653b\u51fb"},{"location":"others/security-base/#_2","text":"\u6700\u666e\u904d\u7684 Web \u5e94\u7528\u5b89\u5168\u6f0f\u6d1e\u3002\u8fd9\u7c7b\u6f0f\u6d1e\u80fd\u591f\u4f7f\u5f97\u653b\u51fb\u8005\u5d4c\u5165\u6076\u610f\u811a\u672c\u4ee3\u7801\u5230\u6b63\u5e38\u7528\u6237\u4f1a\u8bbf\u95ee\u5230\u7684\u9875\u9762\u4e2d\uff0c\u5f53\u6b63\u5e38\u7528\u6237\u8bbf\u95ee\u8be5\u9875\u9762\u65f6\uff0c\u5219\u53ef\u5bfc\u81f4\u5d4c\u5165\u7684\u6076\u610f\u811a\u672c\u4ee3\u7801\u7684\u6267\u884c\uff0c\u4ece\u800c\u8fbe\u5230\u6076\u610f\u653b\u51fb\u7528\u6237\u7684\u76ee\u7684\u3002","title":"\u5b9a\u4e49\uff1a"},{"location":"others/security-base/#_3","text":"\u63d0\u4ea4\u7684\u8868\u5355\u4e2d\uff0c\u5305\u542b JavaScript \u8bed\u6cd5\u7b49\uff0c\u63d0\u4ea4\u540e\u518d\u6e32\u67d3\u5230\u9875\u9762\u4e0a\uff0c\u5bfc\u81f4\u5176 HTML \u6807\u7b7e\u4e0e JavaScript \u88ab\u663e\u793a\u6216\u8005\u6267\u884c\u3002","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_4","text":"\u76d7\u7528 cookie\uff0c\u83b7\u53d6\u654f\u611f\u4fe1\u606f\uff0c\u4ee5\u88ab\u653b\u51fb\u8005\u7684\u8eab\u4efd\uff0c\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff1b \u9875\u9762\u6e32\u67d3\u5f02\u5e38\uff0c\u6570\u636e\u5f02\u5e38\uff1b \u8bbf\u95ee\u91cf\u6781\u5927\u7684\u4e00\u4e9b\u9875\u9762\u4e0a\u7684 XSS \u53ef\u4ee5\u653b\u51fb\u4e00\u4e9b\u5c0f\u578b\u7f51\u7ad9\uff0c\u5b9e\u73b0 DDoS \u653b\u51fb\u7684\u6548\u679c\u3002","title":"\u5f71\u54cd\uff1a"},{"location":"others/security-base/#_5","text":"\u4f7f\u7528 http only \u7684 cookie\uff1b \u9488\u5bf9\u573a\u666f\uff0c\u5bf9\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u4e25\u683c\u6821\u9a8c\uff0c\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5305\u542b HTML \u6807\u7b7e\uff0c\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u8f6c\u4e49\u3002","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#csrf-","text":"","title":"CSRF - \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020"},{"location":"others/security-base/#_6","text":"\u631f\u5236\u7528\u6237\u5728\u5f53\u524d\u5df2\u767b\u5f55\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u4e0a\u6267\u884c\u975e\u672c\u610f\u7684\u64cd\u4f5c\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u8ddf\u8de8\u7f51\u7ad9\u811a\u672c\uff08XSS\uff09\u76f8\u6bd4\uff0cXSS \u5229\u7528\u7684\u662f\u7528\u6237\u5bf9\u6307\u5b9a\u7f51\u7ad9\u7684\u4fe1\u4efb\uff0cCSRF \u5229\u7528\u7684\u662f\u7f51\u7ad9\u5bf9\u7528\u6237\u7f51\u9875\u6d4f\u89c8\u5668\u7684\u4fe1\u4efb\u3002","title":"\u5b9a\u4e49\uff1a"},{"location":"others/security-base/#_7","text":"\u653b\u51fb\u8005\u5e76\u4e0d\u80fd\u901a\u8fc7 CSRF \u653b\u51fb\u6765\u76f4\u63a5\u83b7\u53d6\u7528\u6237\u7684\u8d26\u6237\u63a7\u5236\u6743\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u7a83\u53d6\u7528\u6237\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u4ed6\u4eec\u80fd\u505a\u5230\u7684\uff0c\u662f\u6b3a\u9a97\u7528\u6237\u6d4f\u89c8\u5668\uff0c\u8ba9\u5176\u4ee5\u7528\u6237\u7684\u540d\u4e49\u8fd0\u884c\u64cd\u4f5c\u3002","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_8","text":"\u4e00\u65e6\u53d1\u751f\uff0c\u5f71\u54cd\u4e25\u91cd\uff0c\u4e22\u5931\u94b1\u8d22\u3002","title":"\u5f71\u54cd\uff1a"},{"location":"others/security-base/#_9","text":"\u6821\u9a8c referer \u6821\u9a8c\uff1b \u6dfb\u52a0\u6821\u9a8c token\uff08\u6216\u8005\u522b\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\uff09\u653e\u5230 http \u8bf7\u6c42\u4e2d\u3002","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#-","text":"","title":"\u70b9\u52ab\u6301\u653b\u51fb - \u754c\u9762\u4f2a\u88c5\u653b\u51fb"},{"location":"others/security-base/#_10","text":"\u653b\u51fb\u8005\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u900f\u660e\u7684 iframe \u8986\u76d6\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u7f51\u9875\u4e0a\uff0c\u7136\u540e\u8bf1\u4f7f\u7528\u6237\u5728\u8be5\u7f51\u9875\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u5f53\u7528\u6237\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u70b9\u51fb\u900f\u660e\u7684 iframe \u9875\u9762\u65f6\uff0c\u7528\u6237\u7684\u64cd\u4f5c\u5df2\u7ecf\u88ab\u52ab\u6301\u5230\u653b\u51fb\u8005\u4e8b\u5148\u8bbe\u8ba1\u597d\u7684\u6076\u610f\u6309\u94ae\u6216\u94fe\u63a5\u4e0a\u3002\u653b\u51fb\u8005\u65e2\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u52ab\u6301\u8bbe\u8ba1\u4e00\u4e2a\u72ec\u7acb\u7684\u6076\u610f\u7f51\u7ad9\uff0c\u6267\u884c\u9493\u9c7c\u653b\u51fb\u7b49\uff1b\u4e5f\u53ef\u4ee5\u4e0e XSS \u548c CSRF \u653b\u51fb\u76f8\u7ed3\u5408\uff0c\u7a81\u7834\u4f20\u7edf\u7684\u9632\u5fa1\u63aa\u65bd\uff0c\u63d0\u5347\u6f0f\u6d1e\u7684\u5371\u5bb3\u7a0b\u5ea6\u3002","title":"\u5b9a\u4e49\uff1a"},{"location":"others/security-base/#_11","text":"\u6076\u610f\u7f51\u7ad9\u4e0a\u7528 iframe \u5d4c\u5957\u4e86\u4e00\u4e2a \u5fae\u535a\u5173\u6ce8\u67d0\u5927 V \u7684\u9875\u9762\uff0ciframe \u900f\u660e\u5ea6\u8bbe\u7f6e\u4e3a 0\u3002\u9875\u9762\u4e0a\u663e\u793a\u4e00\u4e9b\u5fc3\u52a8 \ud83d\udc93 \u7684\u56fe\u7247\uff0c\u8bf1\u4f7f\u7528\u6237\u70b9\u51fb\uff0c\u5b9e\u9645\u89e6\u53d1\u4e86\u5fae\u535a\u9875\u9762\u7684\u5173\u6ce8\u3002","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_12","text":"\u7c7b\u4f3c csrf","title":"\u5f71\u54cd\uff1a"},{"location":"others/security-base/#_13","text":"X-FRAME-OPTIONS \u662f\u76ee\u524d\u6700\u53ef\u9760\u7684\u65b9\u6cd5\u3002 X-FRAME-OPTIONS \u662f\u5fae\u8f6f\u63d0\u51fa\u7684\u4e00\u4e2a http \u5934\uff0c\u4e13\u95e8\u7528\u6765\u9632\u5fa1\u5229\u7528 iframe \u5d4c\u5957\u7684\u70b9\u51fb\u52ab\u6301\u653b\u51fb\u3002 \u8fd9\u4e2a\u5934\u6709\u4e09\u4e2a\u503c\uff1a DENY // \u62d2\u7edd\u4efb\u4f55\u57df\u52a0\u8f7d SAMEORIGIN // \u5141\u8bb8\u540c\u6e90\u57df\u4e0b\u52a0\u8f7d ALLOW-FROM // \u53ef\u4ee5\u5b9a\u4e49\u5141\u8bb8frame\u52a0\u8f7d\u7684\u9875\u9762\u5730\u5740","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#_14","text":"\u4ee3\u7801\u5b89\u5168\u5305\u542b\u5f88\u591a\u65b9\u9762\uff0c\u4e00\u65b9\u9762\u662f\u5404\u4e2a\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\u4e0d\u5f53\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u4e1a\u52a1\u903b\u8f91\u4e0a\u7684\u6f0f\u6d1e\uff0c\u8fd9\u91cc\u6311\u51e0\u4e2a\u7b80\u5355\u63cf\u8ff0\u4e0b\u3002","title":"\u4ee3\u7801\u5b89\u5168"},{"location":"others/security-base/#_15","text":"","title":"\u8d8a\u6743"},{"location":"others/security-base/#_16","text":"A \u7528\u6237\u80fd\u770b\u89c1\u6216\u64cd\u4f5c B \u7528\u6237\u7684\u79c1\u5bc6\u4fe1\u606f A \u7528\u6237\u6ca1\u6709\u6743\u9650\u770b\u89c1\u4fe1\u606f B\uff0c\u4f46\u662f\u6743\u9650\u6ca1\u63a7\u5236\u597d\uff0c\u4ecd\u80fd\u770b\u5230 A \u7528\u6237\u6ca1\u6709\u8ba2\u9605\u5e94\u7528 B\uff0c\u4f46\u662f\u4ecd\u80fd\u591f\u8bbf\u95ee","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_17","text":"\u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u9488\u5bf9\u8ba2\u5355\uff0c\u4ea4\u6613\u7b49\u7b49\u4fe1\u606f\uff0c\u4e00\u5b9a\u8981\u8003\u8651\u662f\u5426\u6821\u9a8c\u4e0b\u5355\u4eba\u3002","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#_18","text":"","title":"\u91cd\u590d\u63d0\u4ea4"},{"location":"others/security-base/#_19","text":"\u5458\u5de5\u70b9\u8d5e\u65f6\uff0c\u5feb\u901f\u591a\u6b21\u70b9\u51fb\u4e86\u63d0\u4ea4\uff0c\u5bfc\u81f4\u540e\u53f0\u4e00\u6b21\u6536\u5230\u4e86\u591a\u6b21\u76f8\u540c\u7684\u8bf7\u6c42\u3002\u5982\u679c\u6ca1\u6709\u505a\u653e\u91cd\u590d\u63d0\u4ea4\u7684\u62e6\u622a\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u540c\u6837\u7684\u5185\u5bb9\u53d1\u653e\u4e86\u591a\u6b21\uff0c\u8fdd\u80cc\u4e86\u7528\u6237\u7684\u521d\u8877\u3002","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_20","text":"\u5982\u679c\u662f\u670d\u52a1\u7aef\u6e32\u67d3\u7684\u9879\u76ee\u7684\u8bdd\uff0c\u8df3\u8f6c\u5230\u70b9\u8d5e\u9875\u9762\u65f6\uff0c\u7531\u670d\u52a1\u7aef\u751f\u6210\u4e00\u4e2a token\uff0c\u653e\u5230\u9875\u9762\u4e0a\uff0c\u63d0\u4ea4\u65f6\u4e00\u8d77\u5e26\u5230\u540e\u6bb5\uff0c\u7531\u540e\u7aef\u8fdb\u884c\u6709\u6548\u6027\u6821\u9a8c\uff08\u5229\u7528 redis \u7684\u5206\u5e03\u5f0f\u9501\uff09\uff0c\u4fdd\u8bc1\u4e00\u5b9a\u7684\u5b89\u5168\uff0c\u9632\u6b62\u91cd\u590d\u63d0\u4ea4\u3002","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#_21","text":"","title":"\u4fe1\u606f\u5b89\u5168"},{"location":"others/security-base/#_22","text":"\u7528\u6237\u4fee\u6539\u5bc6\u7801\u65f6\uff0c\u5bc6\u7801\u76f4\u63a5\u660e\u6587\u4f20\u5230\u540e\u6bb5\uff1b \u9875\u9762\u6e32\u67d3\u7535\u5b50\u5361\u7684\u5361\u5bc6\uff0c\u6216\u8005\u8c03\u7528\u63a5\u53e3\u83b7\u53d6\u5361\u5bc6\u4fe1\u606f\u65f6\u660e\u6587\u4f20\u9012\uff1b \u5361\u5bc6\u3001\u5de5\u8d44\u7b49\u9690\u79c1\u4fe1\u606f\u76f4\u63a5\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\uff1b \u5bc6\u7801\u3001\u5de5\u8d44\u7b49\u9690\u79c1\u4fe1\u606f\uff0c\u660e\u6587\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u4e2d\uff1b gfs \u6587\u4ef6\u4e0a\u4f20\u4e2d\uff0c\u90e8\u5206\u91cd\u8981\u7684\u6587\u4ef6\u4f7f\u7528 public \u7684\u65b9\u5f0f\u4e0a\u4f20\uff1b \u90e8\u5206 url \u5730\u5740\u6839\u636e\u4e3b\u952e ID \u5c55\u793a\uff0c\u53c8\u6ca1\u6709\u505a\u6821\u9a8c\uff0c\u5bfc\u81f4\u88ab\u7528\u6237\u6839\u636e\u81ea\u589e ID \u67e5\u8be2\u6240\u6709\u6570\u636e\uff1b ......","title":"\u4f8b\u5b50\uff08\u53cd\u4f8b\uff09\uff1a"},{"location":"others/security-base/#_23","text":"\u65e5\u5fd7\u6216\u8005\u6570\u636e\u5e93\u4e2d\uff0c\u660e\u6587\u8bb0\u5f55\u9690\u79d8\u4fe1\u606f\uff0c\u662f\u5341\u5206\u5371\u9669\u7684\uff0c\u9488\u5bf9\u5bc6\u7801\u7b49\uff0c\u8bf7\u4e00\u5b9a\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u65e0\u4eba\u80fd\u83b7\u53d6\u660e\u6587\u5bc6\u7801\uff0c\u9488\u5bf9\u5361\u5bc6\uff0c\u5de5\u8d44\u7b49\uff0c\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u5bc6\u94a5\u65e0\u4eba\u80fd\u83b7\u53d6\u5b8c\u5168\uff0c\u6211\u4eec\u516c\u53f8\u53ef\u8003\u8651\u91c7\u7528\u5df2\u6709\u7684 KMS\u3002 **\u65e5\u5fd7\u5b89\u5168**\u5f88\u91cd\u8981\uff0c\u4e00\u822c\u65e5\u5fd7\u662f\u4e0d\u9650\u5236\u516c\u53f8\u4efb\u4f55\u5f00\u53d1\u8bbf\u95ee\u7684\uff0c\u5982\u679c\u5361\u5bc6\u3001\u5de5\u8d44\u7b49\u4fe1\u606f\u8bb0\u5f55\u5728\u4e86\u65e5\u5fd7\u4e2d\uff0c\u76f8\u5f53\u4e8e\u66b4\u9732\u5728\u4e86\u6240\u6709\u4eba\u4e25\u91cd\uff0c\u6240\u4ee5\u9488\u5bf9\u91cd\u8981\u7684\u9879\u76ee\uff0c\u4e00\u5b9a\u8981\u6709\u8fd9\u4e2a\u610f\u8bc6\uff0c\u907f\u514d\u8be5\u95ee\u9898\u3002 \u867d\u7136 https \u57fa\u672c\u4fdd\u8bc1\u4e86\u4f20\u8f93\u5c42\u7684\u5b89\u5168\uff0c\u4f46\u662f\u8003\u8651\u5230\u4e2d\u95f4\u4eba\u653b\u51fb\u6f0f\u6d1e\u3001\u5ba2\u6237\u7aef\u4e2d\u75c5\u6bd2\u3001\u9ec4\u725b\u5237\u5355\uff08\u9488\u5bf9\u7535\u5b50\u5361\uff09\u7b49\u573a\u666f\uff0c\u5efa\u8bae\u9488\u5bf9\u6bd4\u8f83\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u8fd8\u662f\u91c7\u7528\u4e00\u6b21\u5bf9\u79f0\u52a0\u5bc6\u540e\uff0c\u518d\u4f20\u5230\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u3002 \u90e8\u5206\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a\u8d26\u5355\u3001\u8425\u4e1a\u6267\u7167\u7167\u7247\u7b49\u7b49\u79c1\u5bc6\u4fe1\u606f\uff0c\u4f7f\u7528 private \u7684\u65b9\u5f0f\u4e0a\u4f20\uff0c\u5177\u4f53\u53c2\u8003 gfs - \u4f7f\u7528\u6307\u5357 \u3002","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#_24","text":"","title":"\u4ee3\u7801\u7f16\u5199\u4e0d\u5f53"},{"location":"others/security-base/#_25","text":"redis \u6a21\u7cca\u67e5\u8be2\uff0c\u4e00\u6b21\u67e5\u8be2\u5927\u91cf\u7684 key\uff0c\u5bfc\u81f4 redis \u5835\u585e\uff0c\u5f71\u54cd\u522b\u7684\u5e94\u7528\u5bf9 redis \u7684\u4f7f\u7528\uff1b mysql \u6279\u91cf\u67e5\u8be2\uff0c\u4e00\u6b21\u67e5\u8be2\u6570\u636e\u8fc7\u5927\uff0c\u6216\u8005\u641c\u7d22\u672a\u8d70\u7d22\u5f15\uff1b mysql \u4f7f\u7528 ${} \u8fdb\u884c\u6392\u5e8f\uff0c\u672a\u5bf9\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u6821\u9a8c\uff0c\u5bfc\u81f4\u524d\u7aef\u4f20\u5165 sql\uff0c\u4ea7\u751f sql \u6ce8\u5165 ......","title":"\u4f8b\u5b50\uff1a"},{"location":"others/security-base/#_26","text":"redis \u6a21\u7cca\u67e5\u8be2\u5c3d\u91cf\u4f7f\u7528 scan \u4ee3\u66ff\uff1b \u9488\u5bf9 mysql \u7684\u641c\u7d22\uff0c\u5bf9\u6570\u636e\u7684\u91cf\u8981\u6709\u4e2a\u4f30\u8ba1\uff0c\u5982\u679c\u4f30\u8ba1\u6570\u636e\u4f1a\u6bd4\u8f83\u5927\uff0c\u5c3d\u91cf\u4f7f\u7528\u5206\u9875\uff0c\u6216\u8005\u901a\u8fc7 es \u6765\u67e5\u8be2\uff1b \u4f7f\u7528 ${} \u65f6\uff0c\u5bf9\u4f20\u5165\u7684\u6761\u4ef6\u53c2\u6570\u9700\u8981\u6821\u9a8c\uff1b ......","title":"\u9632\u62a4\u63aa\u65bd\uff1a"},{"location":"others/security-base/#_27","text":"\u8fd9\u91cc\u9488\u5bf9\u6211\u4eec\u516c\u53f8\u76ee\u524d\u7684\u53d1\u5e03\u6d41\u7a0b - Frigate\uff0c\u5176\u4e2d\u4f53\u73b0\u4e86\u5f88\u591a\u5b89\u5168\u65b9\u9762\u7684\u8003\u8651\u3002 \u6570\u636e\u5e93\u6743\u9650\u6309\u9700\u5206\u914d\uff0c\u9ed8\u8ba4\u53ea\u5206\u914d DDL\uff1b \u6267\u884c\u7684 sql \u7ecf\u8fc7\u67b6\u6784\u5e08\u5ba1\u6838\u540e\u518d\u4e0a\u7ebf\uff0c\u4e14\u53ea\u80fd\u901a\u8fc7 frigate \u6267\u884c\uff1b \u53d1\u5e03\u65f6\uff0c\u4fdd\u8bc1\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u4f7f\u7528\u7684\u4ea7\u7269\u662f\u540c\u4e00\u4e2a\uff0c\u5c3d\u91cf\u907f\u514d\u4e0a\u7ebf\u7684\u98ce\u9669\uff1b ......","title":"\u7ba1\u7406\u5b89\u5168"},{"location":"others/short-url/","text":"\u77ed\u94fe\u63a5\uff08\u77ed\u7f51\u5740\uff09 \u00b6 \u4e00\u3001\u524d\u8a00 \u00b6 \u77ed\u7f51\u5740\uff1a\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5c06\u957f\u7f51\u5740\u7f29\u77ed\u5230\u4e00\u4e2a\u5f88\u77ed\u7684\u7f51\u5740\uff0c\u7528\u6237\u8bbf\u95ee\u8fd9\u4e2a\u77ed\u7f51\u5740\u53ef\u4ee5\u91cd\u5b9a\u5411\u5230\u539f\u672c\u7684\u957f\u7f51\u5740\uff08\u4e5f\u5c31\u662f\u8fd8\u539f\u7684\u8fc7\u7a0b\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230\u6613\u4e8e\u8bb0\u5fc6\u3001\u8f6c\u6362\u7684\u76ee\u7684\uff0c\u5e38\u7528\u4e8e\u6709\u5b57\u6570\u9650\u5236\u7684\u5fae\u535a\u3001\u4e8c\u7ef4\u7801\u7b49\u7b49\u573a\u666f\u3002 \u5173\u4e8e\u77ed URL \u7684\u4f7f\u7528\u573a\u666f\uff0c\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u4e1a\u52a1\u4e2d\u4f7f\u7528\u77ed URL \u7684\u91cd\u8981\u6027\uff01 \u4e8c\u3001\u77ed\u5730\u5740\u4f7f\u7528\u573a\u666f \u00b6 1\u3001\u65b0\u6d6a\u5fae\u535a \u00b6 \u6211\u4eec\u5728\u65b0\u6d6a\u5fae\u535a\u4e0a\u53d1\u5e03\u7f51\u5740\u7684\u65f6\u5019\uff0c\u5fae\u535a\u4f1a\u81ea\u52a8\u5224\u522b\u7f51\u5740\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\uff0c\u4f8b\u5982\uff1a https://t.cn/RuPKzRW \u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u7684\uff1f \u8fd9\u662f\u56e0\u4e3a\u5fae\u535a\u9650\u5236\u5b57\u6570\u4e3a 140 \u5b57\u4e00\u6761\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u9700\u8981\u53d1\u4e00\u4e9b\u94fe\u63a5\u4e0a\u53bb\uff0c\u4f46\u662f\u8fd9\u4e2a\u94fe\u63a5\u975e\u5e38\u7684\u957f\uff0c\u4ee5\u81f3\u4e8e\u5c06\u8fd1\u8981\u5360\u7528\u6211\u4eec\u5185\u5bb9\u7684\u4e00\u534a\u7bc7\u5e45\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u80fd\u88ab\u5141\u8bb8\u7684\u6216\u8005\u8bf4\u7528\u6237\u4f53\u9a8c\u5f88\u5dee\u7684\uff0c\u6240\u4ee5\u77ed\u7f51\u5740\u5e94\u8fd0\u800c\u751f\u4e86\uff0c\u77ed\u7f51\u5740\u8fd9\u79cd\u670d\u52a1\u53ef\u4ee5\u8bf4\u662f\u5728\u5fae\u535a\u51fa\u73b0\u4e4b\u540e\u624d\u6d41\u884c\u5f00\u6765\u7684\uff01\u5f80\u4e0b\u770b\uff1a \uff081\uff09\u9996\u5148\uff0c\u6211\u5148\u53d1\u4e00\u6761\u5fae\u535a\u5e26\u6709\u4e00\u4e2a URL \u5730\u5740\uff1a \uff082\uff09\u7136\u540e\uff0c\u770b\u4ed6\u8f6c\u6362\u4e4b\u540e\u663e\u793a\u7684\u6548\u679c\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u54ea\uff1f \uff083\uff09\u67e5\u770b\u5bf9\u5e94\u9875\u9762\u5143\u7d20\u7684 HTML \u6e90\u7801\u5982\u4e0b\uff1a \uff084\uff09\u53ef\u4ee5\u770b\u51fa\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \u88ab\u8f6c\u6362\u4e3a\uff1a http://t.cn/RuPKzRW \uff0c\u6b64\u65f6\u4f60\u8bbf\u95ee http://t.cn/RuPKzRW \u662f\u53ef\u4ee5\u5b9a\u4f4d\u5230 https://blog.csdn.net/xlgen157387/article/details/79863301 \uff0c\u4e5f\u5c31\u662f\u5b9e\u73b0\u4e86\u8f6c\u6362\u3002 2\u3001\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801 \u00b6 \u7f51\u5740\u5728\u8f6c\u6362\u6210\u77ed\u7f51\u5740\u65f6\uff0c\u4e5f\u53ef\u4ee5\u751f\u6210\u76f8\u5e94\u7684\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\uff0c\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\u7684\u5e94\u7528\uff0c\u4e8c\u7ef4\u7801\u6838\u5fc3\u89e3\u51b3\u7684\u662f\u8de8\u5e73\u53f0\u3001\u8de8\u73b0\u5b9e\u7684\u6570\u636e\u4f20\u8f93\u95ee\u9898\uff1b\u800c\u4e14\u4e8c\u7ef4\u7801\u8ddf\u5e94\u7528\u573a\u666f\u7ed3\u5408\u4e4b\u540e\uff0c\u6240\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4f1a\u8d8a\u6765\u8d8a\u591a\u3002 \uff081\uff09\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\u76f8\u6bd4\u77ed\u94fe\u63a5\u66f4\u65b9\u4fbf\uff0c\u80fd\u5c11\u8f93\u5165\uff0c\u5c3d\u91cf\u5c11\u8f93\u5165\uff0c\u54ea\u6015\u53ea\u662f\u5c11\u70b9\u4e00\u4e0b\u952e\u76d8\uff0c\u90fd\u662f\u6709\u610f\u4e49\u7684\u3002 \uff082\uff09\u4e8c\u7ef4\u7801\u53ea\u662f\u626b\u63cf\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u63a5\uff0c\u6253\u5f00\u7684\u5374\u662f\u4e00\u4e2a\u4e16\u754c\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u7528\u624b\u673a\u8d2d\u4e70\u552e\u8d27\u673a\u91cc\u5546\u54c1\uff0c\u4e8c\u7ef4\u7801\u626b\u63cf\u662f\u7565\u5feb\u4e8e\u4ece\u7528\u624b\u673a\u627e\u5230\u8be5\u552e\u8d27\u673a\u5e76\u627e\u5230\u8be5\u5546\u54c1\u7684\uff0c\u800c\u4e14\u8fd9\u79cd\u64cd\u4f5c\u76f8\u5bf9\u4e8e\u641c\u7d22/\u67e5\u627e\u800c\u8a00\u4e0d\u662f\u66f4\u4f18\u96c5\u5417? \uff083\uff09\u6240\u6709\u5546\u8d85\u91cc\u9762\u7684\u5546\u54c1\uff0c\u90fd\u662f\u4f7f\u7528\u6761\u7801\u6765\u786e\u5b9a\u5546\u54c1\u7684\u552f\u4e00\u6027\u7684\uff0c\u53bb\u4e70\u5355\u7684\u65f6\u5019\u90fd\u662f\u626b\u63cf\u6761\u7801\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u91cc\u9762\u52a0\u5165\u4e86\u66f4\u591a\u4ea7\u54c1\u7684\u751f\u4ea7\u65e5\u671f\u3001\u5382\u5bb6\u3001\u6d41\u8f6c\u9014\u5f84\u3001\u539f\u6750\u6599\u7b49\u7b49\u4fe1\u606f\uff0c\u662f\u4e0d\u662f\u5389\u5bb3\u4e86\u5462?\u7279\u522b\u662f\u9488\u5bf9\u98df\u54c1\u4fe1\u606f\u7684\u53ef\u8ffd\u6eaf\u4e0a\uff0c\u4e8c\u7ef4\u7801\u5e94\u7528\u573a\u666f\u66f4\u5e7f\u6cdb\u3002 \u4e09\u3001\u77ed\u5730\u5740\u7684\u597d\u5904 \u00b6 \u9664\u4e86\u4e0a\u8ff0\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u5c06\u957f\u5730\u5740\u8f6c\u6362\u4e3a\u77ed\u5730\u5740\u7684\u4f7f\u7528\u573a\u666f\u7684\u4f18\u70b9\uff08\u538b\u7f29 URL \u957f\u5ea6\uff09\u4e4b\u5916\uff0c\u77ed\u5730\u5740\u8fd8\u5177\u6709\u5f88\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u7684\u4f18\u70b9\uff0c\u4f8b\u5982\uff1a \uff081\uff09\u8282\u7701\u7f51\u5740\u957f\u5ea6\uff0c\u4fbf\u4e8e\u793e\u4ea4\u5316\u4f20\u64ad\uff0c\u4e00\u4e2a\u662f\u8ba9 URL \u66f4\u77ed\u5c0f\uff0c\u4f20\u64ad\u66f4\u65b9\u4fbf\uff0c\u5c24\u5176\u662f URL \u4e2d\u6709\u4e2d\u6587\u548c\u7279\u6b8a\u5b57\u7b26\uff0c\u77ed\u7f51\u5740\u89e3\u51b3\u5f88\u957f\u7684 URL \u96be\u4ee5\u8bb0\u5fc6\u4e0d\u5229\u4e8e\u4f20\u64ad\u7684\u95ee\u9898\uff1b \uff082\uff09\u77ed\u7f51\u5740\u5728\u6211\u4eec\u9879\u76ee\u91cc\u53ef\u4ee5\u5f88\u597d\u7684\u5bf9\u5f00\u653e\u4ee5\u53ca\u5bf9 URL \u8fdb\u884c\u7ba1\u7406\u3002\u6709\u4e00\u90e8\u5206\u7f51\u5740\u53ef\u4ee5\u4f1a\u6db5\u76d6\u6027\u3001\u66b4\u529b\u3001\u5e7f\u544a\u7b49\u4fe1\u606f\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u7684\u4e3e\u62a5\uff0c\u5b8c\u5168\u7ba1\u7406\u8fd9\u4e2a\u8fde\u63a5\u5c06\u4e0d\u51fa\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u4e2d\uff0c\u5bf9\u540c\u6837\u7684 URL \u901a\u8fc7\u52a0\u5bc6\u7b97\u6cd5\u4e4b\u540e\uff0c\u5f97\u5230\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff1b \uff083\uff09\u65b9\u4fbf\u540e\u53f0\u8ddf\u8e2a\u70b9\u51fb\u91cf\u3001\u5730\u57df\u5206\u5e03\u7b49\u7528\u6237\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u7cfb\u5217\u7684\u7f51\u5740\u8fdb\u884c\u6d41\u91cf\uff0c\u70b9\u51fb\u7b49\u7edf\u8ba1\uff0c\u6316\u6398\u51fa\u5927\u591a\u6570\u7528\u6237\u7684\u5173\u6ce8\u70b9\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6211\u4eec\u5bf9\u9879\u76ee\u7684\u540e\u7eed\u5de5\u4f5c\u66f4\u597d\u7684\u4f5c\u51fa\u51b3\u7b56\uff1b \uff084\uff09\u89c4\u907f\u5173\u952e\u8bcd\u3001\u57df\u540d\u5c4f\u853d\u624b\u6bb5\u3001\u9690\u85cf\u771f\u5b9e\u5730\u5740\uff0c\u9002\u5408\u505a\u4ed8\u8d39\u63a8\u5e7f\u94fe\u63a5\uff1b \uff085\uff09\u5f53\u4f60\u770b\u5230\u4e00\u4e2a\u6dd8\u5b9d\u7684\u5b9d\u8d1d\u8fde\u63a5\u540e\u9762\u662f 200 \u4e2a\u201ce7x8bv7c8bisdj\u201d\u8fd9\u6837\u7684\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4f60\u8fd8\u4f1a\u89c9\u5f97\u8212\u670d\u5417\u3002\u66f4\u4f55\u51b5\u5fae\u535a\u5b57\u6570\u53ea\u6709 140 \u5b57\uff0c\u5fae\u535a\u6216\u77ed\u4fe1\u91cc\uff0c\u5b57\u6570\u4e0d\u591f\uff0c\u4f60\u7528\u6761\u77ed\u7f51\u5740\u5c31\u80fd\u5e2e\u4f60\u817e\u51fa\u5f88\u591a\u7a7a\u95f4\u6765\uff1b \u56db\u3001\u77ed\u7f51\u5740\u670d\u52a1\u63d0\u4f9b\u5e73\u53f0 \u00b6 \u76ee\u524d\uff0c\u56fd\u5185\u7f51\u53c8\u5f88\u591a\u63d0\u4f9b\u77ed\u5730\u5740\u670d\u52a1\u7684\u5e73\u53f0\uff0c\u4f8b\u5982\uff1a \u65b0\u6d6a\uff1a http://sina.lt/ \u767e\u5ea6\uff1a http://dwz.cn/ 0x3\uff1a http://0x3.me/ MRW\uff1a http://mrw.so/ \u7b49\u7b49\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u641c\u7d22\u4e00\u4e0b\u5c31\u4f1a\u6709\u5f88\u591a\uff01\u4f46\u662f\u4e00\u4e2a\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f7f\u7528\u67d0\u4e00\u4e2a\u5e73\u53f0\u7684\u77ed\u5730\u5740\u670d\u52a1\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u957f\u671f\u53ef\u9760\u7684\u670d\u52a1\uff0c\u4e0d\u7136\u4e00\u6bb5\u65f6\u95f4\u5931\u6548\u4e86\uff0c\u6211\u4eec\u4ee5\u524d\u5df2\u7ecf\u8f6c\u6362\u7684 URL \u5c31\u5b8c\u4e86\uff01 \u8fd9\u91cc\u4ee5\u767e\u5ea6\u4e3a\u4f8b\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u4e94\u3001\u5173\u4e8e\u5982\u4f55\u751f\u6210\u77ed\u5730\u5740 URL \u7684\u8ba8\u8bba \u00b6 \u5173\u4e8e\u77ed\u5730\u5740 URL \u5982\u4f55\u751f\u6210\u65b9\u5f0f\u7684\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u65b9\u5f0f\uff0c\u6709\u57fa\u4e8e\u6620\u5c04\u7684\uff0c\u6709\u57fa\u4e8e Hash \u7684\uff0c\u6709\u57fa\u4e8e\u7b7e\u540d\u7684\uff0c\u4f46\u662f\u603b\u7684\u6765\u8bf4\u5e76\u4e0d\u80fd\u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u573a\u666f\u7684\u4f7f\u7528\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u9519\u8bef\u7684\u8bbe\u8ba1\u65b9\u5f0f\u3002\u8fd9\u91cc\u4e0d\u518d\u91cd\u590d\u9020\u8f6e\u5b50\uff01\u4ee5\u4e0b\u662f\u77e5\u4e4e\u7528\u6237 iammutex \u5173\u4e8e\u8be5\u95ee\u9898\u7684\u63a2\u8ba8\uff0c\u622a\u56fe\u8fc7\u6765\u548c\u5927\u5bb6\u4e00\u8d77\u5b66\u4e60\u4e00\u4e0b\uff1a \u516d\u3001\u751f\u6210\u77ed\u5730\u5740 URL \u9700\u8981\u6ce8\u610f\u7684 \u00b6 \u770b\u5230\u4e0a\u8ff0\u77e5\u4e4e\u7528\u6237 iammutex \u5173\u4e8e\u5982\u4f55\u6b63\u786e\u751f\u6210\u77ed\u5730\u5740 URL \u7684\u63a2\u8ba8\uff0c\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d1\u53f7\u5668\u7684\u65b9\u5f0f\u6b63\u786e\u7684\u751f\u6210\u77ed\u5730\u5740\uff0c\u751f\u6210\u7b97\u6cd5\u8bbe\u8ba1\u8981\u70b9\u5982\u4e0b\uff1a \uff081\uff09\u5229\u7528\u653e\u53f7\u5668\uff0c\u521d\u59cb\u503c\u4e3a 0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u77ed\u94fe\u63a5\u751f\u6210\u8bf7\u6c42\uff0c\u90fd\u9012\u589e\u653e\u53f7\u5668\u7684\u503c\uff0c\u518d\u5c06\u6b64\u503c\u8f6c\u6362\u4e3a 62 \u8fdb\u5236\uff08a-zA-Z0-9\uff09\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 0\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a a\uff0c\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 1\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a b\uff0c\u7b2c 10001 \u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 10000\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a sBc\u3002 \uff082\uff09\u5c06\u77ed\u94fe\u63a5\u670d\u52a1\u5668\u57df\u540d\u4e0e\u653e\u53f7\u5668\u7684 62 \u8fdb\u5236\u503c\u8fdb\u884c\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u5373\u4e3a\u77ed\u94fe\u63a5\u7684 URL\uff0c\u6bd4\u5982\uff1at.cn/sBc\u3002 \uff083\uff09\u91cd\u5b9a\u5411\u8fc7\u7a0b\uff1a\u751f\u6210\u77ed\u94fe\u63a5\u4e4b\u540e\uff0c\u9700\u8981\u5b58\u50a8\u77ed\u94fe\u63a5\u5230\u957f\u94fe\u63a5\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5373 sBc -> URL\uff0c\u6d4f\u89c8\u5668\u8bbf\u95ee\u77ed\u94fe\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u6839\u636e URL Path \u53d6\u5230\u539f\u59cb\u7684\u94fe\u63a5\uff0c\u7136\u540e\u8fdb\u884c 302 \u91cd\u5b9a\u5411\u3002\u6620\u5c04\u5173\u7cfb\u53ef\u4f7f\u7528 K-V \u5b58\u50a8\uff0c\u6bd4\u5982 Redis \u6216 Memcache\u3002 \u4e03\u3001\u751f\u6210\u77ed\u5730\u5740\u4e4b\u540e\u5982\u4f55\u8df3\u8f6c\u5462\uff1f \u00b6 \u5bf9\u4e8e\u8be5\u90e8\u5206\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4ed6\u662f\u6574\u4e2a\u4ea4\u4e92\u7684\u6d41\u7a0b\uff0c\u5177\u4f53\u7684\u6d41\u7a0b\u7ec6\u8282\u5982\u4e0b\uff1a \uff081\uff09\u7528\u6237\u8bbf\u95ee\u77ed\u94fe\u63a5\uff1a http://t.cn/RuPKzRW \uff1b \uff082\uff09\u77ed\u94fe\u63a5\u670d\u52a1\u5668 t.cn \u6536\u5230\u8bf7\u6c42\uff0c\u6839\u636e URL \u8def\u5f84 RuPKzRW \u83b7\u53d6\u5230\u539f\u59cb\u7684\u957f\u94fe\u63a5\uff08KV \u7f13\u5b58\u6570\u636e\u5e93\u4e2d\u53bb\u67e5\u627e\uff09\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \uff1b \uff083\uff09\u670d\u52a1\u5668\u8fd4\u56de 302 \u72b6\u6001\u7801\uff0c\u5c06\u54cd\u5e94\u5934\u4e2d\u7684 Location \u8bbe\u7f6e\u4e3a\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \uff1b \uff084\uff09\u6d4f\u89c8\u5668\u91cd\u65b0\u5411https://blog.csdn.net/xlgen157387/article/details/79863301\u53d1\u9001\u8bf7\u6c42\uff1b \uff085\uff09\u8fd4\u56de\u54cd\u5e94\uff1b \u516b\u3001\u77ed\u5730\u5740\u53d1\u53f7\u5668\u4f18\u5316\u65b9\u6848 \u00b6 1\u3001\u7b97\u6cd5\u4f18\u5316 \u00b6 \u91c7\u7528\u4ee5\u4e0a\u7b97\u6cd5\uff0c\u5982\u679c\u4e0d\u52a0\u5224\u65ad\uff0c\u90a3\u4e48\u5373\u4f7f\u5bf9\u4e8e\u540c\u4e00\u4e2a\u539f\u59cb URL\uff0c\u6bcf\u6b21\u751f\u6210\u7684\u77ed\u94fe\u63a5\u4e5f\u662f\u4e0d\u540c\u7684\uff0c\u8fd9\u6837\u5c31\u4f1a\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff08\u56e0\u4e3a\u9700\u8981\u5b58\u50a8\u591a\u4e2a\u77ed\u94fe\u63a5\u5230\u540c\u4e00\u4e2a URL \u7684\u6620\u5c04\uff09\uff0c\u5982\u679c\u80fd\u5c06\u76f8\u540c\u7684 URL \u6620\u5c04\u6210\u540c\u4e00\u4e2a\u77ed\u94fe\u63a5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u4e86\u3002\u4e3b\u8981\u7684\u601d\u8def\u6709\u5982\u4e0b\u4e24\u4e2a\uff1a \u65b9\u6848 1\uff1a\u67e5\u8868 \u6bcf\u6b21\u751f\u6210\u77ed\u94fe\u63a5\u65f6\uff0c\u5148\u5728\u6620\u5c04\u8868\u4e2d\u67e5\u627e\u662f\u5426\u5df2\u6709\u539f\u59cb URL \u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5982\u679c\u6709\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6548\u7387\u5f88\u4f4e\u3002 \u65b9\u6848 2\uff1a\u4f7f\u7528 LRU \u672c\u5730\u7f13\u5b58\uff0c\u7a7a\u95f4\u6362\u65f6\u95f4 \u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684 LRU \u7f13\u5b58\uff0c\u5b58\u50a8\u6700\u8fd1 N \u6b21\u7684\u6620\u5c04\u7ed3\u679c\uff0c\u8fd9\u6837\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u94fe\u63a5\u751f\u6210\u7684\u975e\u5e38\u9891\u7e41\uff0c\u5219\u53ef\u4ee5\u5728 LRU \u7f13\u5b58\u4e2d\u627e\u5230\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u662f\u5b58\u50a8\u7a7a\u95f4\u548c\u6027\u80fd\u65b9\u9762\u7684\u6298\u4e2d\u3002 2\u3001\u53ef\u4f38\u7f29\u548c\u9ad8\u53ef\u7528 \u00b6 \u5982\u679c\u5c06\u77ed\u94fe\u63a5\u751f\u6210\u670d\u52a1\u5355\u673a\u90e8\u7f72\uff0c\u7f3a\u70b9\u4e00\u662f\u6027\u80fd\u4e0d\u8db3\uff0c\u4e0d\u8db3\u4ee5\u627f\u53d7\u6d77\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u4e8c\u662f\u6210\u4e3a\u7cfb\u7edf\u5355\u70b9\uff0c\u5982\u679c\u8fd9\u53f0\u673a\u5668\u5b95\u673a\u5219\u6574\u5957\u670d\u52a1\u4e0d\u53ef \u7528\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u7cfb\u7edf\u96c6\u7fa4\u5316\uff0c\u8fdb\u884c\u201c\u5206\u7247\u201d\u3002 \u5728\u4ee5\u4e0a\u63cf\u8ff0\u7684\u7cfb\u7edf\u67b6\u6784\u4e2d\uff0c\u5982\u679c\u53d1\u53f7\u5668\u7528 Redis \u5b9e\u73b0\uff0c\u5219 Redis \u662f\u7cfb\u7edf\u7684\u74f6\u9888\u4e0e\u5355\u70b9\uff0c\u56e0\u6b64\uff0c\u5229\u7528\u6570\u636e\u5e93\u5206\u7247\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u53ef\u90e8\u7f72\u591a\u4e2a\u53d1\u53f7\u5668\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u8d1f\u8d23\u7279\u5b9a\u53f7\u6bb5\u7684\u53d1\u53f7\uff0c\u6bd4\u5982\u90e8\u7f72 10 \u53f0 Redis\uff0c\u6bcf\u53f0\u5206\u522b\u8d1f\u8d23\u53f7\u6bb5\u5c3e\u53f7\u4e3a 0-9 \u7684\u53d1\u53f7\uff0c\u6ce8\u610f\u6b64\u65f6\u53d1\u53f7\u5668\u7684\u6b65\u957f\u5219\u5e94\u8be5\u8bbe\u7f6e\u4e3a 10\uff08\u5b9e\u4f8b\u4e2a\u6570\uff09\u3002 \u53e6\u5916\uff0c\u4e5f\u53ef\u5c06\u957f\u94fe\u63a5\u4e0e\u77ed\u94fe\u63a5\u6620\u5c04\u5173\u7cfb\u7684\u5b58\u50a8\u8fdb\u884c\u5206\u7247\uff0c\u7531\u4e8e\u6ca1\u6709\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u5f00\u53d1\u989d\u5916\u7684\u670d\u52a1\uff0c\u7528\u4e8e\u67e5\u627e\u77ed\u94fe\u63a5\u5bf9\u5e94\u7684\u539f\u59cb\u94fe\u63a5\u7684\u5b58\u50a8\u8282\u70b9\uff0c\u8fd9\u6837\u624d\u80fd\u53bb\u6b63\u786e\u7684\u8282\u70b9\u4e0a\u627e\u5230\u6620\u5c04\u5173\u7cfb\u3002 \u4e5d\u3001GAT \u77ed\u7f51\u5740\u670d\u52a1 \u00b6 \u5730\u5740 \u5341\u3001\u53c2\u8003\u8d44\u6599 \u00b6 \u5982\u4f55\u5c06\u4e00\u4e2a\u957f URL \u8f6c\u6362\u4e3a\u4e00\u4e2a\u77ed URL\uff1f","title":"\u77ed\u94fe\u63a5"},{"location":"others/short-url/#_1","text":"","title":"\u77ed\u94fe\u63a5\uff08\u77ed\u7f51\u5740\uff09"},{"location":"others/short-url/#_2","text":"\u77ed\u7f51\u5740\uff1a\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5c06\u957f\u7f51\u5740\u7f29\u77ed\u5230\u4e00\u4e2a\u5f88\u77ed\u7684\u7f51\u5740\uff0c\u7528\u6237\u8bbf\u95ee\u8fd9\u4e2a\u77ed\u7f51\u5740\u53ef\u4ee5\u91cd\u5b9a\u5411\u5230\u539f\u672c\u7684\u957f\u7f51\u5740\uff08\u4e5f\u5c31\u662f\u8fd8\u539f\u7684\u8fc7\u7a0b\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230\u6613\u4e8e\u8bb0\u5fc6\u3001\u8f6c\u6362\u7684\u76ee\u7684\uff0c\u5e38\u7528\u4e8e\u6709\u5b57\u6570\u9650\u5236\u7684\u5fae\u535a\u3001\u4e8c\u7ef4\u7801\u7b49\u7b49\u573a\u666f\u3002 \u5173\u4e8e\u77ed URL \u7684\u4f7f\u7528\u573a\u666f\uff0c\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u4e1a\u52a1\u4e2d\u4f7f\u7528\u77ed URL \u7684\u91cd\u8981\u6027\uff01","title":"\u4e00\u3001\u524d\u8a00"},{"location":"others/short-url/#_3","text":"","title":"\u4e8c\u3001\u77ed\u5730\u5740\u4f7f\u7528\u573a\u666f"},{"location":"others/short-url/#1","text":"\u6211\u4eec\u5728\u65b0\u6d6a\u5fae\u535a\u4e0a\u53d1\u5e03\u7f51\u5740\u7684\u65f6\u5019\uff0c\u5fae\u535a\u4f1a\u81ea\u52a8\u5224\u522b\u7f51\u5740\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\uff0c\u4f8b\u5982\uff1a https://t.cn/RuPKzRW \u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u7684\uff1f \u8fd9\u662f\u56e0\u4e3a\u5fae\u535a\u9650\u5236\u5b57\u6570\u4e3a 140 \u5b57\u4e00\u6761\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u9700\u8981\u53d1\u4e00\u4e9b\u94fe\u63a5\u4e0a\u53bb\uff0c\u4f46\u662f\u8fd9\u4e2a\u94fe\u63a5\u975e\u5e38\u7684\u957f\uff0c\u4ee5\u81f3\u4e8e\u5c06\u8fd1\u8981\u5360\u7528\u6211\u4eec\u5185\u5bb9\u7684\u4e00\u534a\u7bc7\u5e45\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u80fd\u88ab\u5141\u8bb8\u7684\u6216\u8005\u8bf4\u7528\u6237\u4f53\u9a8c\u5f88\u5dee\u7684\uff0c\u6240\u4ee5\u77ed\u7f51\u5740\u5e94\u8fd0\u800c\u751f\u4e86\uff0c\u77ed\u7f51\u5740\u8fd9\u79cd\u670d\u52a1\u53ef\u4ee5\u8bf4\u662f\u5728\u5fae\u535a\u51fa\u73b0\u4e4b\u540e\u624d\u6d41\u884c\u5f00\u6765\u7684\uff01\u5f80\u4e0b\u770b\uff1a \uff081\uff09\u9996\u5148\uff0c\u6211\u5148\u53d1\u4e00\u6761\u5fae\u535a\u5e26\u6709\u4e00\u4e2a URL \u5730\u5740\uff1a \uff082\uff09\u7136\u540e\uff0c\u770b\u4ed6\u8f6c\u6362\u4e4b\u540e\u663e\u793a\u7684\u6548\u679c\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u54ea\uff1f \uff083\uff09\u67e5\u770b\u5bf9\u5e94\u9875\u9762\u5143\u7d20\u7684 HTML \u6e90\u7801\u5982\u4e0b\uff1a \uff084\uff09\u53ef\u4ee5\u770b\u51fa\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \u88ab\u8f6c\u6362\u4e3a\uff1a http://t.cn/RuPKzRW \uff0c\u6b64\u65f6\u4f60\u8bbf\u95ee http://t.cn/RuPKzRW \u662f\u53ef\u4ee5\u5b9a\u4f4d\u5230 https://blog.csdn.net/xlgen157387/article/details/79863301 \uff0c\u4e5f\u5c31\u662f\u5b9e\u73b0\u4e86\u8f6c\u6362\u3002","title":"1\u3001\u65b0\u6d6a\u5fae\u535a"},{"location":"others/short-url/#2","text":"\u7f51\u5740\u5728\u8f6c\u6362\u6210\u77ed\u7f51\u5740\u65f6\uff0c\u4e5f\u53ef\u4ee5\u751f\u6210\u76f8\u5e94\u7684\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\uff0c\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\u7684\u5e94\u7528\uff0c\u4e8c\u7ef4\u7801\u6838\u5fc3\u89e3\u51b3\u7684\u662f\u8de8\u5e73\u53f0\u3001\u8de8\u73b0\u5b9e\u7684\u6570\u636e\u4f20\u8f93\u95ee\u9898\uff1b\u800c\u4e14\u4e8c\u7ef4\u7801\u8ddf\u5e94\u7528\u573a\u666f\u7ed3\u5408\u4e4b\u540e\uff0c\u6240\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4f1a\u8d8a\u6765\u8d8a\u591a\u3002 \uff081\uff09\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801\u76f8\u6bd4\u77ed\u94fe\u63a5\u66f4\u65b9\u4fbf\uff0c\u80fd\u5c11\u8f93\u5165\uff0c\u5c3d\u91cf\u5c11\u8f93\u5165\uff0c\u54ea\u6015\u53ea\u662f\u5c11\u70b9\u4e00\u4e0b\u952e\u76d8\uff0c\u90fd\u662f\u6709\u610f\u4e49\u7684\u3002 \uff082\uff09\u4e8c\u7ef4\u7801\u53ea\u662f\u626b\u63cf\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u63a5\uff0c\u6253\u5f00\u7684\u5374\u662f\u4e00\u4e2a\u4e16\u754c\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u7528\u624b\u673a\u8d2d\u4e70\u552e\u8d27\u673a\u91cc\u5546\u54c1\uff0c\u4e8c\u7ef4\u7801\u626b\u63cf\u662f\u7565\u5feb\u4e8e\u4ece\u7528\u624b\u673a\u627e\u5230\u8be5\u552e\u8d27\u673a\u5e76\u627e\u5230\u8be5\u5546\u54c1\u7684\uff0c\u800c\u4e14\u8fd9\u79cd\u64cd\u4f5c\u76f8\u5bf9\u4e8e\u641c\u7d22/\u67e5\u627e\u800c\u8a00\u4e0d\u662f\u66f4\u4f18\u96c5\u5417? \uff083\uff09\u6240\u6709\u5546\u8d85\u91cc\u9762\u7684\u5546\u54c1\uff0c\u90fd\u662f\u4f7f\u7528\u6761\u7801\u6765\u786e\u5b9a\u5546\u54c1\u7684\u552f\u4e00\u6027\u7684\uff0c\u53bb\u4e70\u5355\u7684\u65f6\u5019\u90fd\u662f\u626b\u63cf\u6761\u7801\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u91cc\u9762\u52a0\u5165\u4e86\u66f4\u591a\u4ea7\u54c1\u7684\u751f\u4ea7\u65e5\u671f\u3001\u5382\u5bb6\u3001\u6d41\u8f6c\u9014\u5f84\u3001\u539f\u6750\u6599\u7b49\u7b49\u4fe1\u606f\uff0c\u662f\u4e0d\u662f\u5389\u5bb3\u4e86\u5462?\u7279\u522b\u662f\u9488\u5bf9\u98df\u54c1\u4fe1\u606f\u7684\u53ef\u8ffd\u6eaf\u4e0a\uff0c\u4e8c\u7ef4\u7801\u5e94\u7528\u573a\u666f\u66f4\u5e7f\u6cdb\u3002","title":"2\u3001\u77ed\u7f51\u5740\u4e8c\u7ef4\u7801"},{"location":"others/short-url/#_4","text":"\u9664\u4e86\u4e0a\u8ff0\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u5c06\u957f\u5730\u5740\u8f6c\u6362\u4e3a\u77ed\u5730\u5740\u7684\u4f7f\u7528\u573a\u666f\u7684\u4f18\u70b9\uff08\u538b\u7f29 URL \u957f\u5ea6\uff09\u4e4b\u5916\uff0c\u77ed\u5730\u5740\u8fd8\u5177\u6709\u5f88\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u7684\u4f18\u70b9\uff0c\u4f8b\u5982\uff1a \uff081\uff09\u8282\u7701\u7f51\u5740\u957f\u5ea6\uff0c\u4fbf\u4e8e\u793e\u4ea4\u5316\u4f20\u64ad\uff0c\u4e00\u4e2a\u662f\u8ba9 URL \u66f4\u77ed\u5c0f\uff0c\u4f20\u64ad\u66f4\u65b9\u4fbf\uff0c\u5c24\u5176\u662f URL \u4e2d\u6709\u4e2d\u6587\u548c\u7279\u6b8a\u5b57\u7b26\uff0c\u77ed\u7f51\u5740\u89e3\u51b3\u5f88\u957f\u7684 URL \u96be\u4ee5\u8bb0\u5fc6\u4e0d\u5229\u4e8e\u4f20\u64ad\u7684\u95ee\u9898\uff1b \uff082\uff09\u77ed\u7f51\u5740\u5728\u6211\u4eec\u9879\u76ee\u91cc\u53ef\u4ee5\u5f88\u597d\u7684\u5bf9\u5f00\u653e\u4ee5\u53ca\u5bf9 URL \u8fdb\u884c\u7ba1\u7406\u3002\u6709\u4e00\u90e8\u5206\u7f51\u5740\u53ef\u4ee5\u4f1a\u6db5\u76d6\u6027\u3001\u66b4\u529b\u3001\u5e7f\u544a\u7b49\u4fe1\u606f\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u7684\u4e3e\u62a5\uff0c\u5b8c\u5168\u7ba1\u7406\u8fd9\u4e2a\u8fde\u63a5\u5c06\u4e0d\u51fa\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u4e2d\uff0c\u5bf9\u540c\u6837\u7684 URL \u901a\u8fc7\u52a0\u5bc6\u7b97\u6cd5\u4e4b\u540e\uff0c\u5f97\u5230\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff1b \uff083\uff09\u65b9\u4fbf\u540e\u53f0\u8ddf\u8e2a\u70b9\u51fb\u91cf\u3001\u5730\u57df\u5206\u5e03\u7b49\u7528\u6237\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u7cfb\u5217\u7684\u7f51\u5740\u8fdb\u884c\u6d41\u91cf\uff0c\u70b9\u51fb\u7b49\u7edf\u8ba1\uff0c\u6316\u6398\u51fa\u5927\u591a\u6570\u7528\u6237\u7684\u5173\u6ce8\u70b9\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6211\u4eec\u5bf9\u9879\u76ee\u7684\u540e\u7eed\u5de5\u4f5c\u66f4\u597d\u7684\u4f5c\u51fa\u51b3\u7b56\uff1b \uff084\uff09\u89c4\u907f\u5173\u952e\u8bcd\u3001\u57df\u540d\u5c4f\u853d\u624b\u6bb5\u3001\u9690\u85cf\u771f\u5b9e\u5730\u5740\uff0c\u9002\u5408\u505a\u4ed8\u8d39\u63a8\u5e7f\u94fe\u63a5\uff1b \uff085\uff09\u5f53\u4f60\u770b\u5230\u4e00\u4e2a\u6dd8\u5b9d\u7684\u5b9d\u8d1d\u8fde\u63a5\u540e\u9762\u662f 200 \u4e2a\u201ce7x8bv7c8bisdj\u201d\u8fd9\u6837\u7684\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4f60\u8fd8\u4f1a\u89c9\u5f97\u8212\u670d\u5417\u3002\u66f4\u4f55\u51b5\u5fae\u535a\u5b57\u6570\u53ea\u6709 140 \u5b57\uff0c\u5fae\u535a\u6216\u77ed\u4fe1\u91cc\uff0c\u5b57\u6570\u4e0d\u591f\uff0c\u4f60\u7528\u6761\u77ed\u7f51\u5740\u5c31\u80fd\u5e2e\u4f60\u817e\u51fa\u5f88\u591a\u7a7a\u95f4\u6765\uff1b","title":"\u4e09\u3001\u77ed\u5730\u5740\u7684\u597d\u5904"},{"location":"others/short-url/#_5","text":"\u76ee\u524d\uff0c\u56fd\u5185\u7f51\u53c8\u5f88\u591a\u63d0\u4f9b\u77ed\u5730\u5740\u670d\u52a1\u7684\u5e73\u53f0\uff0c\u4f8b\u5982\uff1a \u65b0\u6d6a\uff1a http://sina.lt/ \u767e\u5ea6\uff1a http://dwz.cn/ 0x3\uff1a http://0x3.me/ MRW\uff1a http://mrw.so/ \u7b49\u7b49\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u641c\u7d22\u4e00\u4e0b\u5c31\u4f1a\u6709\u5f88\u591a\uff01\u4f46\u662f\u4e00\u4e2a\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f7f\u7528\u67d0\u4e00\u4e2a\u5e73\u53f0\u7684\u77ed\u5730\u5740\u670d\u52a1\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u957f\u671f\u53ef\u9760\u7684\u670d\u52a1\uff0c\u4e0d\u7136\u4e00\u6bb5\u65f6\u95f4\u5931\u6548\u4e86\uff0c\u6211\u4eec\u4ee5\u524d\u5df2\u7ecf\u8f6c\u6362\u7684 URL \u5c31\u5b8c\u4e86\uff01 \u8fd9\u91cc\u4ee5\u767e\u5ea6\u4e3a\u4f8b\uff0c\u5982\u4e0b\u6240\u793a\uff1a","title":"\u56db\u3001\u77ed\u7f51\u5740\u670d\u52a1\u63d0\u4f9b\u5e73\u53f0"},{"location":"others/short-url/#url","text":"\u5173\u4e8e\u77ed\u5730\u5740 URL \u5982\u4f55\u751f\u6210\u65b9\u5f0f\u7684\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u65b9\u5f0f\uff0c\u6709\u57fa\u4e8e\u6620\u5c04\u7684\uff0c\u6709\u57fa\u4e8e Hash \u7684\uff0c\u6709\u57fa\u4e8e\u7b7e\u540d\u7684\uff0c\u4f46\u662f\u603b\u7684\u6765\u8bf4\u5e76\u4e0d\u80fd\u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u573a\u666f\u7684\u4f7f\u7528\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u9519\u8bef\u7684\u8bbe\u8ba1\u65b9\u5f0f\u3002\u8fd9\u91cc\u4e0d\u518d\u91cd\u590d\u9020\u8f6e\u5b50\uff01\u4ee5\u4e0b\u662f\u77e5\u4e4e\u7528\u6237 iammutex \u5173\u4e8e\u8be5\u95ee\u9898\u7684\u63a2\u8ba8\uff0c\u622a\u56fe\u8fc7\u6765\u548c\u5927\u5bb6\u4e00\u8d77\u5b66\u4e60\u4e00\u4e0b\uff1a","title":"\u4e94\u3001\u5173\u4e8e\u5982\u4f55\u751f\u6210\u77ed\u5730\u5740 URL \u7684\u8ba8\u8bba"},{"location":"others/short-url/#url_1","text":"\u770b\u5230\u4e0a\u8ff0\u77e5\u4e4e\u7528\u6237 iammutex \u5173\u4e8e\u5982\u4f55\u6b63\u786e\u751f\u6210\u77ed\u5730\u5740 URL \u7684\u63a2\u8ba8\uff0c\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d1\u53f7\u5668\u7684\u65b9\u5f0f\u6b63\u786e\u7684\u751f\u6210\u77ed\u5730\u5740\uff0c\u751f\u6210\u7b97\u6cd5\u8bbe\u8ba1\u8981\u70b9\u5982\u4e0b\uff1a \uff081\uff09\u5229\u7528\u653e\u53f7\u5668\uff0c\u521d\u59cb\u503c\u4e3a 0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u77ed\u94fe\u63a5\u751f\u6210\u8bf7\u6c42\uff0c\u90fd\u9012\u589e\u653e\u53f7\u5668\u7684\u503c\uff0c\u518d\u5c06\u6b64\u503c\u8f6c\u6362\u4e3a 62 \u8fdb\u5236\uff08a-zA-Z0-9\uff09\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 0\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a a\uff0c\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 1\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a b\uff0c\u7b2c 10001 \u6b21\u8bf7\u6c42\u65f6\u653e\u53f7\u5668\u7684\u503c\u4e3a 10000\uff0c\u5bf9\u5e94 62 \u8fdb\u5236\u4e3a sBc\u3002 \uff082\uff09\u5c06\u77ed\u94fe\u63a5\u670d\u52a1\u5668\u57df\u540d\u4e0e\u653e\u53f7\u5668\u7684 62 \u8fdb\u5236\u503c\u8fdb\u884c\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u5373\u4e3a\u77ed\u94fe\u63a5\u7684 URL\uff0c\u6bd4\u5982\uff1at.cn/sBc\u3002 \uff083\uff09\u91cd\u5b9a\u5411\u8fc7\u7a0b\uff1a\u751f\u6210\u77ed\u94fe\u63a5\u4e4b\u540e\uff0c\u9700\u8981\u5b58\u50a8\u77ed\u94fe\u63a5\u5230\u957f\u94fe\u63a5\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5373 sBc -> URL\uff0c\u6d4f\u89c8\u5668\u8bbf\u95ee\u77ed\u94fe\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u6839\u636e URL Path \u53d6\u5230\u539f\u59cb\u7684\u94fe\u63a5\uff0c\u7136\u540e\u8fdb\u884c 302 \u91cd\u5b9a\u5411\u3002\u6620\u5c04\u5173\u7cfb\u53ef\u4f7f\u7528 K-V \u5b58\u50a8\uff0c\u6bd4\u5982 Redis \u6216 Memcache\u3002","title":"\u516d\u3001\u751f\u6210\u77ed\u5730\u5740 URL \u9700\u8981\u6ce8\u610f\u7684"},{"location":"others/short-url/#_6","text":"\u5bf9\u4e8e\u8be5\u90e8\u5206\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4ed6\u662f\u6574\u4e2a\u4ea4\u4e92\u7684\u6d41\u7a0b\uff0c\u5177\u4f53\u7684\u6d41\u7a0b\u7ec6\u8282\u5982\u4e0b\uff1a \uff081\uff09\u7528\u6237\u8bbf\u95ee\u77ed\u94fe\u63a5\uff1a http://t.cn/RuPKzRW \uff1b \uff082\uff09\u77ed\u94fe\u63a5\u670d\u52a1\u5668 t.cn \u6536\u5230\u8bf7\u6c42\uff0c\u6839\u636e URL \u8def\u5f84 RuPKzRW \u83b7\u53d6\u5230\u539f\u59cb\u7684\u957f\u94fe\u63a5\uff08KV \u7f13\u5b58\u6570\u636e\u5e93\u4e2d\u53bb\u67e5\u627e\uff09\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \uff1b \uff083\uff09\u670d\u52a1\u5668\u8fd4\u56de 302 \u72b6\u6001\u7801\uff0c\u5c06\u54cd\u5e94\u5934\u4e2d\u7684 Location \u8bbe\u7f6e\u4e3a\uff1a https://blog.csdn.net/xlgen157387/article/details/79863301 \uff1b \uff084\uff09\u6d4f\u89c8\u5668\u91cd\u65b0\u5411https://blog.csdn.net/xlgen157387/article/details/79863301\u53d1\u9001\u8bf7\u6c42\uff1b \uff085\uff09\u8fd4\u56de\u54cd\u5e94\uff1b","title":"\u4e03\u3001\u751f\u6210\u77ed\u5730\u5740\u4e4b\u540e\u5982\u4f55\u8df3\u8f6c\u5462\uff1f"},{"location":"others/short-url/#_7","text":"","title":"\u516b\u3001\u77ed\u5730\u5740\u53d1\u53f7\u5668\u4f18\u5316\u65b9\u6848"},{"location":"others/short-url/#1_1","text":"\u91c7\u7528\u4ee5\u4e0a\u7b97\u6cd5\uff0c\u5982\u679c\u4e0d\u52a0\u5224\u65ad\uff0c\u90a3\u4e48\u5373\u4f7f\u5bf9\u4e8e\u540c\u4e00\u4e2a\u539f\u59cb URL\uff0c\u6bcf\u6b21\u751f\u6210\u7684\u77ed\u94fe\u63a5\u4e5f\u662f\u4e0d\u540c\u7684\uff0c\u8fd9\u6837\u5c31\u4f1a\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff08\u56e0\u4e3a\u9700\u8981\u5b58\u50a8\u591a\u4e2a\u77ed\u94fe\u63a5\u5230\u540c\u4e00\u4e2a URL \u7684\u6620\u5c04\uff09\uff0c\u5982\u679c\u80fd\u5c06\u76f8\u540c\u7684 URL \u6620\u5c04\u6210\u540c\u4e00\u4e2a\u77ed\u94fe\u63a5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u4e86\u3002\u4e3b\u8981\u7684\u601d\u8def\u6709\u5982\u4e0b\u4e24\u4e2a\uff1a \u65b9\u6848 1\uff1a\u67e5\u8868 \u6bcf\u6b21\u751f\u6210\u77ed\u94fe\u63a5\u65f6\uff0c\u5148\u5728\u6620\u5c04\u8868\u4e2d\u67e5\u627e\u662f\u5426\u5df2\u6709\u539f\u59cb URL \u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5982\u679c\u6709\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6548\u7387\u5f88\u4f4e\u3002 \u65b9\u6848 2\uff1a\u4f7f\u7528 LRU \u672c\u5730\u7f13\u5b58\uff0c\u7a7a\u95f4\u6362\u65f6\u95f4 \u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684 LRU \u7f13\u5b58\uff0c\u5b58\u50a8\u6700\u8fd1 N \u6b21\u7684\u6620\u5c04\u7ed3\u679c\uff0c\u8fd9\u6837\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u94fe\u63a5\u751f\u6210\u7684\u975e\u5e38\u9891\u7e41\uff0c\u5219\u53ef\u4ee5\u5728 LRU \u7f13\u5b58\u4e2d\u627e\u5230\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u662f\u5b58\u50a8\u7a7a\u95f4\u548c\u6027\u80fd\u65b9\u9762\u7684\u6298\u4e2d\u3002","title":"1\u3001\u7b97\u6cd5\u4f18\u5316"},{"location":"others/short-url/#2_1","text":"\u5982\u679c\u5c06\u77ed\u94fe\u63a5\u751f\u6210\u670d\u52a1\u5355\u673a\u90e8\u7f72\uff0c\u7f3a\u70b9\u4e00\u662f\u6027\u80fd\u4e0d\u8db3\uff0c\u4e0d\u8db3\u4ee5\u627f\u53d7\u6d77\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u4e8c\u662f\u6210\u4e3a\u7cfb\u7edf\u5355\u70b9\uff0c\u5982\u679c\u8fd9\u53f0\u673a\u5668\u5b95\u673a\u5219\u6574\u5957\u670d\u52a1\u4e0d\u53ef \u7528\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u7cfb\u7edf\u96c6\u7fa4\u5316\uff0c\u8fdb\u884c\u201c\u5206\u7247\u201d\u3002 \u5728\u4ee5\u4e0a\u63cf\u8ff0\u7684\u7cfb\u7edf\u67b6\u6784\u4e2d\uff0c\u5982\u679c\u53d1\u53f7\u5668\u7528 Redis \u5b9e\u73b0\uff0c\u5219 Redis \u662f\u7cfb\u7edf\u7684\u74f6\u9888\u4e0e\u5355\u70b9\uff0c\u56e0\u6b64\uff0c\u5229\u7528\u6570\u636e\u5e93\u5206\u7247\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u53ef\u90e8\u7f72\u591a\u4e2a\u53d1\u53f7\u5668\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u8d1f\u8d23\u7279\u5b9a\u53f7\u6bb5\u7684\u53d1\u53f7\uff0c\u6bd4\u5982\u90e8\u7f72 10 \u53f0 Redis\uff0c\u6bcf\u53f0\u5206\u522b\u8d1f\u8d23\u53f7\u6bb5\u5c3e\u53f7\u4e3a 0-9 \u7684\u53d1\u53f7\uff0c\u6ce8\u610f\u6b64\u65f6\u53d1\u53f7\u5668\u7684\u6b65\u957f\u5219\u5e94\u8be5\u8bbe\u7f6e\u4e3a 10\uff08\u5b9e\u4f8b\u4e2a\u6570\uff09\u3002 \u53e6\u5916\uff0c\u4e5f\u53ef\u5c06\u957f\u94fe\u63a5\u4e0e\u77ed\u94fe\u63a5\u6620\u5c04\u5173\u7cfb\u7684\u5b58\u50a8\u8fdb\u884c\u5206\u7247\uff0c\u7531\u4e8e\u6ca1\u6709\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u5f00\u53d1\u989d\u5916\u7684\u670d\u52a1\uff0c\u7528\u4e8e\u67e5\u627e\u77ed\u94fe\u63a5\u5bf9\u5e94\u7684\u539f\u59cb\u94fe\u63a5\u7684\u5b58\u50a8\u8282\u70b9\uff0c\u8fd9\u6837\u624d\u80fd\u53bb\u6b63\u786e\u7684\u8282\u70b9\u4e0a\u627e\u5230\u6620\u5c04\u5173\u7cfb\u3002","title":"2\u3001\u53ef\u4f38\u7f29\u548c\u9ad8\u53ef\u7528"},{"location":"others/short-url/#gat","text":"\u5730\u5740","title":"\u4e5d\u3001GAT \u77ed\u7f51\u5740\u670d\u52a1"},{"location":"others/short-url/#_8","text":"\u5982\u4f55\u5c06\u4e00\u4e2a\u957f URL \u8f6c\u6362\u4e3a\u4e00\u4e2a\u77ed URL\uff1f","title":"\u5341\u3001\u53c2\u8003\u8d44\u6599"},{"location":"prepare/contribute/manage/","text":"Java \u8bed\u8a00\u6846\u67b6\u5f00\u53d1\u7ba1\u7406 \u00b6 \u5de5\u4f5c\u804c\u8d23 \u00b6 \u89e3\u51b3\u4e00\u4e9b\u901a\u7528\u7684\u4e1a\u52a1\u95ee\u9898\uff0c\u6bd4\u5982\u5206\u5e03\u5f0f id \u751f\u6210\u5668\u3001\u6bd4\u5982\u652f\u4ed8 sdk \u5c01\u88c5 \u89e3\u51b3\u4e00\u4e9b\u901a\u7528\u7684\u6280\u672f\u95ee\u9898\uff0c\u6bd4\u5982\u9ed8\u8ba4\u7edf\u4e00\u7684 web \u5b89\u5168\u8bbe\u7f6e \u4e2d\u95f4\u4ef6 sdk \u7684\u5c01\u88c5\uff1a\u7c7b\u4f3c\u4e8e mysql \u6570\u636e\u6e90\u8fde\u63a5\u7ec4\u4ef6 \u4e00\u4e9b\u67b6\u6784\u7684\u843d\u5730\uff0c\u6bd4\u5982\u5fae\u670d\u52a1\u3001\u9ad8\u53ef\u7528\u7b49\u7b49 \u65b0\u6280\u672f\u7684\u5e94\u7528 \u5bf9\u5f00\u6e90\u8f6f\u4ef6\u4f9d\u8d56\u7684\u5347\u7ea7\u4e0e\u7ba1\u7406\uff0c\u5982 jdk \u7248\u672c\u3001Spring Boot \u7248\u672c \u628a\u6846\u67b6\u5bf9\u5e94\u7528\u7684\u8981\u6c42\uff0c\u53cd\u9988\u5230 CI\u3001CD \u7cfb\u7edf\u4e2d \u63d0\u5347\u5f00\u53d1\u56e2\u961f\u7684\u5de5\u7a0b\u6548\u7387 \u5de5\u4f5c\u8981\u6c42 \u00b6 \u6846\u67b6\u662f\u6280\u672f\u7ba1\u7406\u91cc\u975e\u5e38\u91cd\u8981\u7684\u4e00\u73af\uff0c\u8be5\u56e2\u961f\u5e94\u8be5\u80fd\u591f\u505a\u5230\u4ee5\u4e0b\u51e0\u70b9\uff1a \u9f13\u52b1\u6bcf\u4e2a\u5f00\u53d1\u7814\u7a76\u3001\u5b66\u4e60\u3001\u8d21\u732e \u6846\u67b6\u5c01\u88c5\uff0c\u8981\u4f53\u73b0\u4e00\u5b9a\u7684\u7ea6\u675f\u3001\u81ea\u7531\u5ea6\uff0c\u81ea\u8eab\u8981\u4fdd\u6301\u514b\u5236 \u4e00\u4e9b\u65b0\u7684\u91cd\u5927\u529f\u80fd\uff0c\u5e94\u8be5\u5145\u5206\u548c\u522b\u4eba\u8ba8\u8bba\u540e\u5b9e\u73b0\u3001\u5438\u53d6\u4ed6\u4eba\u5efa\u8bae \u6bcf\u6b21\u6709\u65b0\u529f\u80fd\u6216\u8005\u6539\u53d8\u7684\u65f6\u5019\uff0c\u9700\u8981\u901a\u77e5\u5927\u5bb6\u77e5\u6653\u3002\u5927\u7684\u6a21\u5757\u5b8c\u6210\u540e\uff0c\u9700\u8981\u53ec\u5f00\u57f9\u8bad\u4f1a\u8bae\u3002 \u4ee3\u7801\u89c4\u8303 \u00b6 \u9700\u8981\u7b26\u5408\u4ee3\u7801\u89c4\u8303 \u65b0\u4ee3\u7801\u786e\u4fdd\u5355\u5143\u6d4b\u8bd5 100%\uff0cbug \u4fee\u590d\u4e5f\u9700\u8981\u52a0\u4e0a\u5355\u5143\u6d4b\u8bd5 \u63d0\u4ea4\u7528\u6237\u7684\u90ae\u7bb1\u8bf7\u5c3d\u53ef\u80fd\u4f7f\u7528 gitlab \u6ce8\u518c\u7684\u90ae\u7bb1 \u5de5\u4f5c\u65b9\u5f0f \u00b6 \u9996\u5148\u9700\u8981\u660e\u786e\uff1a\u6240\u6709\u4eba\u5747\u53ef\u4ee5\u7ed9\u6846\u67b6\u8d21\u732e\u4ee3\u7801\u3002\u6240\u6709\u4eba\u9700\u8981\u9075\u5b88\u4ee5\u4e0b\u6d41\u7a0b\uff1a \u53d1\u8d77\u4eba\u63d0\u4ea4 issue \u5728\u7531\u6846\u67b6\u7ec4\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u53d1\u8d77\u4eba\u53ef\u4ee5\u4ee3\u7801\u5b9e\u73b0 \u53d1\u8d77\u4eba\u5728\u4ee3\u7801\u5b9e\u73b0\u5b8c\u6210\u540e\uff0c\u63d0\u4ea4 Merge Request \u7ed9\u6846\u67b6\u7ec4\u5ba1\u6838 \u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u5373\u53ef\u4ee5\u5408\u5e76\u5230 master \u63d0\u4ea4 \u8bf4\u660e\u6587\u6863 \u5230 guide-java \u548c grus-wiki \u63d0\u4ea4 issue \u6d41\u7a0b \u00b6 \u5728\u63d0\u4ea4 issue \u65f6\uff0c\u5fc5\u987b\u9009\u62e9\u6a21\u677f\uff1a \u6709\u4e09\u4e2a label\uff0c\u5206\u522b\u7684\u542b\u4e49\uff1a bug-report\uff1abug \u62a5\u544a enhancement\uff1a\u65b0\u7279\u6027 failing-test\uff1a\u5355\u5143\u6d4b\u8bd5\u5931\u8d25 \u52a0\u5165\u9009\u62e9 enhancement \uff1a \u5176\u4ed6\u51e0\u4e2a lable \u90fd\u7c7b\u4f3c\u3002 \u4e00\u4e2a\u793a\u8303\u6027\u7684 issue\uff1a https://gitlab.wuxingdev.cn/java/framework/grus/issues/2 \u63d0\u4ea4 MR \u6d41\u7a0b \u00b6 \u5f85\u5b9a\uff0c\u540e\u7eed\u6709\u53ef\u80fd\u4fee\u6539 \u5982\u679c\u4e00\u4e2a MR\uff0c\u6709\u5173\u8054\u7684 issue\uff0c\u53ef\u4ee5\u9009\u62e9\u4ece issue \u521b\u5efa\u3002 \u63d0\u4ea4 MR \u4e5f\u5fc5\u987b\u9009\u62e9\u6a21\u677f\uff1a \u7248\u672c\u7ba1\u7406 \u00b6 \u7248\u672c\u53f7\u91c7\u7528\u65e5\u5386\u5316\u7248\u672c( YYYY.MINOR.MICRO )\uff0c\u683c\u5f0f\u4e3a\u5e74\u4efd.\u8f85\u52a9\u7248\u672c\u53f7\uff08\u6b21\u8981\u7248\u672c\u53f7\uff09.\u8865\u4e01\u7248\u672c\u53f7\u3002 YYYY\uff1a\u5e74\u4efd\u5168\u79f0\u3002e.g., 2020 MINOR\uff1a\u8f85\u52a9\u7248\u672c\u53f7\uff0c\u5f53\u5e74\u5185\u4ece1 \u9012\u589e\uff0c\u53d1\u5e03\u4e00\u4e9b\u7279\u6027\u6216\u8005\u4f18\u5316 MICRO\uff1a\u8865\u4e01\u7248\u672c\u53f7\uff0c\u5f53\u5e74\u5185\u4ece 0 \u9012\u589e\uff0c\u4e0d\u4f1a\u589e\u52a0\u65b0\u7279\u6027\uff0c\u53ea\u4f1a\u505a bug-fix \u4f8b\u5982\uff0c2021\u5e74\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e3a\uff1a2021.1\uff0c\u5176\u7b2c\u4e00\u4e2a\u4fee\u590d\u7248\u672c\u4e3a2021.1.1\u30022021\u5e74\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e3a2021.2\u3002 \u751f\u547d\u5468\u671f \u00b6 \u6bcf\u4e2a\u6b21\u8981\u7248\u672c\uff0c\u6211\u4eec\u652f\u6301\u516d\u4e2a\u6708\u7684\u6700\u957f\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u5e94\u7528\u4f9d\u8d56\u7684 grus \u7248\u672c\u8d85\u8fc7\u516d\u4e2a\u6708\uff0c\u90a3\u4e48 jenkins \u6784\u5efa\u5c31\u4f1a\u5931\u8d25\u3002 \u5bf9\u4e8e bug\uff0c\u6211\u4eec\u4f1a\u628a\u8865\u4e01 backport \u5230\u53d7\u5f71\u54cd\u7684\u6240\u6709\u751f\u547d\u5468\u671f\u5185\u7248\u672c\u3002\u4e5f\u5c31\u662f\uff0c\u5bf9\u4e8e\u8d85\u8fc7\u751f\u547d\u5468\u671f\u7684\u7248\u672c\uff0c\u4e0d\u4f1a\u6709 bug \u4fee\u590d\u3002 \u5206\u652f\u7ba1\u7406 \u00b6 \u6211\u4eec\u91c7\u7528\u4e3b\u5e72\u5f00\u53d1\u7684\u6a21\u5f0f\uff0cmaster \u4e3a\u5f00\u53d1\u4e3b\u7ebf\uff0c\u6b21\u8981\u7248\u672c\u62e5\u6709\u5bf9\u5e94\u7684\u5206\u652f\u3002 \u6240\u6709\u65b0\u7279\u6027\u5747\u5728 feature \u5206\u652f\u5f00\u53d1\uff0c\u5408\u5e76\u5230 master\u3002 \u5f53\u524d\u7248\u672c\u53ef\u4ee5\u53d1\u5e03\u65f6\uff0c\u57fa\u4e8e master \u5206\u652f\u521b\u5efa release \u5206\u652f\u3002\u5f53\u5e74\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5219\u521b\u5efa 2021.1.x \u5206\u652f release \u5206\u652f\u8d1f\u8d23\u6784\u5efa\u5177\u4f53\u4ea7\u7269\uff0c2021.1.x \u5206\u652f\u7684\u7b2c\u4e8c\u4e2a\u8865\u4e01\u7248\u672c\u6784\u5efa\u7684\u4ea7\u7269\u7248\u672c\u4e3a 2021.1.2 bug \u4fee\u590d\u4e5f\u5728 feature \u5206\u652f\u5f00\u53d1\uff0c\u5408\u5e76\u5230\u6240\u6709\u53d7\u5f71\u54cd\u7684 release \u5206\u652f\uff0c\u662f\u5426\u5408\u5e76 master \u89c6\u60c5\u51b5\u800c\u5b9a\u3002 \u6240\u6709\u7248\u672c\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 tag\uff0c2021 \u5e74\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u53d1\u5e03\u662f 2021.1\uff0c\u7b2c\u4e00\u4e2a\u8865\u4e01\u5bf9\u5e94\u7684 tag \u662f 2021.1.1. \u63d0\u4ea4\u8bf4\u660e \u00b6 \u4e3a\u4e86\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5f00\u53d1\u65f6\uff0c\u7edf\u4e00\u7531\u8d1f\u8d23\u4ebacherry-pick\u76f8\u5173\u7684commit-id\u5230master\u5206\u652f\u6216\u8005release\u5206\u652f\u3002 release\u5206\u652f\u4fee\u590d\u4e86bug\u540e\uff0c\u7edf\u4e00\u7531\u8d1f\u8d23\u4ebamerge\uff08\u975efast-forward\u6a21\u5f0f\uff09\u5230master\u5206\u652f\u548c\u5404\u76f8\u5173\u7684release\u5206\u652f\uff0c\u4fdd\u7559\u4ee3\u7801\u7684\u5408\u5e76\u8bb0\u5f55\uff0c\u4fbf\u4e8e\u540e\u7eed\u95ee\u9898\u6392\u67e5\u3002git\u547d\u4ee4\u53c2\u8003\u5982\u4e0b\uff1a git merge --no-ff -e origin/2021.1.x \u6846\u67b6\u7ec4 \u00b6 \u6846\u67b6\u7ec4\u662f\u6846\u67b6\u7ef4\u62a4\u7684\u6838\u5fc3\u4eba\u5458\uff0c\u76ee\u524d\u5305\u62ec\uff1a \u8d21\u732e\u8005 \u5468\u667a\u4f1f \u4e07\u91cd\u9633 \u97e6\u5bb6\u9a79 \u5b59\u957f\u6d69 \u8521\u78ca \u90a3\u4e48\u5982\u4f55\u6210\u4e3a\u6846\u67b6\u7ec4\u6210\u5458\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u53ea\u8981 \u6700\u8fd1\u534a\u5e74\u8d21\u732e\u8d85\u8fc76\u4e2a\u65b0\u7279\u6027\u6216\u8005bug-fix \u3002","title":"\u5f00\u53d1\u7ba1\u7406"},{"location":"prepare/contribute/manage/#java","text":"","title":"Java \u8bed\u8a00\u6846\u67b6\u5f00\u53d1\u7ba1\u7406"},{"location":"prepare/contribute/manage/#_1","text":"\u89e3\u51b3\u4e00\u4e9b\u901a\u7528\u7684\u4e1a\u52a1\u95ee\u9898\uff0c\u6bd4\u5982\u5206\u5e03\u5f0f id \u751f\u6210\u5668\u3001\u6bd4\u5982\u652f\u4ed8 sdk \u5c01\u88c5 \u89e3\u51b3\u4e00\u4e9b\u901a\u7528\u7684\u6280\u672f\u95ee\u9898\uff0c\u6bd4\u5982\u9ed8\u8ba4\u7edf\u4e00\u7684 web \u5b89\u5168\u8bbe\u7f6e \u4e2d\u95f4\u4ef6 sdk \u7684\u5c01\u88c5\uff1a\u7c7b\u4f3c\u4e8e mysql \u6570\u636e\u6e90\u8fde\u63a5\u7ec4\u4ef6 \u4e00\u4e9b\u67b6\u6784\u7684\u843d\u5730\uff0c\u6bd4\u5982\u5fae\u670d\u52a1\u3001\u9ad8\u53ef\u7528\u7b49\u7b49 \u65b0\u6280\u672f\u7684\u5e94\u7528 \u5bf9\u5f00\u6e90\u8f6f\u4ef6\u4f9d\u8d56\u7684\u5347\u7ea7\u4e0e\u7ba1\u7406\uff0c\u5982 jdk \u7248\u672c\u3001Spring Boot \u7248\u672c \u628a\u6846\u67b6\u5bf9\u5e94\u7528\u7684\u8981\u6c42\uff0c\u53cd\u9988\u5230 CI\u3001CD \u7cfb\u7edf\u4e2d \u63d0\u5347\u5f00\u53d1\u56e2\u961f\u7684\u5de5\u7a0b\u6548\u7387","title":"\u5de5\u4f5c\u804c\u8d23"},{"location":"prepare/contribute/manage/#_2","text":"\u6846\u67b6\u662f\u6280\u672f\u7ba1\u7406\u91cc\u975e\u5e38\u91cd\u8981\u7684\u4e00\u73af\uff0c\u8be5\u56e2\u961f\u5e94\u8be5\u80fd\u591f\u505a\u5230\u4ee5\u4e0b\u51e0\u70b9\uff1a \u9f13\u52b1\u6bcf\u4e2a\u5f00\u53d1\u7814\u7a76\u3001\u5b66\u4e60\u3001\u8d21\u732e \u6846\u67b6\u5c01\u88c5\uff0c\u8981\u4f53\u73b0\u4e00\u5b9a\u7684\u7ea6\u675f\u3001\u81ea\u7531\u5ea6\uff0c\u81ea\u8eab\u8981\u4fdd\u6301\u514b\u5236 \u4e00\u4e9b\u65b0\u7684\u91cd\u5927\u529f\u80fd\uff0c\u5e94\u8be5\u5145\u5206\u548c\u522b\u4eba\u8ba8\u8bba\u540e\u5b9e\u73b0\u3001\u5438\u53d6\u4ed6\u4eba\u5efa\u8bae \u6bcf\u6b21\u6709\u65b0\u529f\u80fd\u6216\u8005\u6539\u53d8\u7684\u65f6\u5019\uff0c\u9700\u8981\u901a\u77e5\u5927\u5bb6\u77e5\u6653\u3002\u5927\u7684\u6a21\u5757\u5b8c\u6210\u540e\uff0c\u9700\u8981\u53ec\u5f00\u57f9\u8bad\u4f1a\u8bae\u3002","title":"\u5de5\u4f5c\u8981\u6c42"},{"location":"prepare/contribute/manage/#_3","text":"\u9700\u8981\u7b26\u5408\u4ee3\u7801\u89c4\u8303 \u65b0\u4ee3\u7801\u786e\u4fdd\u5355\u5143\u6d4b\u8bd5 100%\uff0cbug \u4fee\u590d\u4e5f\u9700\u8981\u52a0\u4e0a\u5355\u5143\u6d4b\u8bd5 \u63d0\u4ea4\u7528\u6237\u7684\u90ae\u7bb1\u8bf7\u5c3d\u53ef\u80fd\u4f7f\u7528 gitlab \u6ce8\u518c\u7684\u90ae\u7bb1","title":"\u4ee3\u7801\u89c4\u8303"},{"location":"prepare/contribute/manage/#_4","text":"\u9996\u5148\u9700\u8981\u660e\u786e\uff1a\u6240\u6709\u4eba\u5747\u53ef\u4ee5\u7ed9\u6846\u67b6\u8d21\u732e\u4ee3\u7801\u3002\u6240\u6709\u4eba\u9700\u8981\u9075\u5b88\u4ee5\u4e0b\u6d41\u7a0b\uff1a \u53d1\u8d77\u4eba\u63d0\u4ea4 issue \u5728\u7531\u6846\u67b6\u7ec4\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u53d1\u8d77\u4eba\u53ef\u4ee5\u4ee3\u7801\u5b9e\u73b0 \u53d1\u8d77\u4eba\u5728\u4ee3\u7801\u5b9e\u73b0\u5b8c\u6210\u540e\uff0c\u63d0\u4ea4 Merge Request \u7ed9\u6846\u67b6\u7ec4\u5ba1\u6838 \u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u5373\u53ef\u4ee5\u5408\u5e76\u5230 master \u63d0\u4ea4 \u8bf4\u660e\u6587\u6863 \u5230 guide-java \u548c grus-wiki","title":"\u5de5\u4f5c\u65b9\u5f0f"},{"location":"prepare/contribute/manage/#issue","text":"\u5728\u63d0\u4ea4 issue \u65f6\uff0c\u5fc5\u987b\u9009\u62e9\u6a21\u677f\uff1a \u6709\u4e09\u4e2a label\uff0c\u5206\u522b\u7684\u542b\u4e49\uff1a bug-report\uff1abug \u62a5\u544a enhancement\uff1a\u65b0\u7279\u6027 failing-test\uff1a\u5355\u5143\u6d4b\u8bd5\u5931\u8d25 \u52a0\u5165\u9009\u62e9 enhancement \uff1a \u5176\u4ed6\u51e0\u4e2a lable \u90fd\u7c7b\u4f3c\u3002 \u4e00\u4e2a\u793a\u8303\u6027\u7684 issue\uff1a https://gitlab.wuxingdev.cn/java/framework/grus/issues/2","title":"\u63d0\u4ea4 issue \u6d41\u7a0b"},{"location":"prepare/contribute/manage/#mr","text":"\u5f85\u5b9a\uff0c\u540e\u7eed\u6709\u53ef\u80fd\u4fee\u6539 \u5982\u679c\u4e00\u4e2a MR\uff0c\u6709\u5173\u8054\u7684 issue\uff0c\u53ef\u4ee5\u9009\u62e9\u4ece issue \u521b\u5efa\u3002 \u63d0\u4ea4 MR \u4e5f\u5fc5\u987b\u9009\u62e9\u6a21\u677f\uff1a","title":"\u63d0\u4ea4 MR \u6d41\u7a0b"},{"location":"prepare/contribute/manage/#_5","text":"\u7248\u672c\u53f7\u91c7\u7528\u65e5\u5386\u5316\u7248\u672c( YYYY.MINOR.MICRO )\uff0c\u683c\u5f0f\u4e3a\u5e74\u4efd.\u8f85\u52a9\u7248\u672c\u53f7\uff08\u6b21\u8981\u7248\u672c\u53f7\uff09.\u8865\u4e01\u7248\u672c\u53f7\u3002 YYYY\uff1a\u5e74\u4efd\u5168\u79f0\u3002e.g., 2020 MINOR\uff1a\u8f85\u52a9\u7248\u672c\u53f7\uff0c\u5f53\u5e74\u5185\u4ece1 \u9012\u589e\uff0c\u53d1\u5e03\u4e00\u4e9b\u7279\u6027\u6216\u8005\u4f18\u5316 MICRO\uff1a\u8865\u4e01\u7248\u672c\u53f7\uff0c\u5f53\u5e74\u5185\u4ece 0 \u9012\u589e\uff0c\u4e0d\u4f1a\u589e\u52a0\u65b0\u7279\u6027\uff0c\u53ea\u4f1a\u505a bug-fix \u4f8b\u5982\uff0c2021\u5e74\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e3a\uff1a2021.1\uff0c\u5176\u7b2c\u4e00\u4e2a\u4fee\u590d\u7248\u672c\u4e3a2021.1.1\u30022021\u5e74\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e3a2021.2\u3002","title":"\u7248\u672c\u7ba1\u7406"},{"location":"prepare/contribute/manage/#_6","text":"\u6bcf\u4e2a\u6b21\u8981\u7248\u672c\uff0c\u6211\u4eec\u652f\u6301\u516d\u4e2a\u6708\u7684\u6700\u957f\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u5e94\u7528\u4f9d\u8d56\u7684 grus \u7248\u672c\u8d85\u8fc7\u516d\u4e2a\u6708\uff0c\u90a3\u4e48 jenkins \u6784\u5efa\u5c31\u4f1a\u5931\u8d25\u3002 \u5bf9\u4e8e bug\uff0c\u6211\u4eec\u4f1a\u628a\u8865\u4e01 backport \u5230\u53d7\u5f71\u54cd\u7684\u6240\u6709\u751f\u547d\u5468\u671f\u5185\u7248\u672c\u3002\u4e5f\u5c31\u662f\uff0c\u5bf9\u4e8e\u8d85\u8fc7\u751f\u547d\u5468\u671f\u7684\u7248\u672c\uff0c\u4e0d\u4f1a\u6709 bug \u4fee\u590d\u3002","title":"\u751f\u547d\u5468\u671f"},{"location":"prepare/contribute/manage/#_7","text":"\u6211\u4eec\u91c7\u7528\u4e3b\u5e72\u5f00\u53d1\u7684\u6a21\u5f0f\uff0cmaster \u4e3a\u5f00\u53d1\u4e3b\u7ebf\uff0c\u6b21\u8981\u7248\u672c\u62e5\u6709\u5bf9\u5e94\u7684\u5206\u652f\u3002 \u6240\u6709\u65b0\u7279\u6027\u5747\u5728 feature \u5206\u652f\u5f00\u53d1\uff0c\u5408\u5e76\u5230 master\u3002 \u5f53\u524d\u7248\u672c\u53ef\u4ee5\u53d1\u5e03\u65f6\uff0c\u57fa\u4e8e master \u5206\u652f\u521b\u5efa release \u5206\u652f\u3002\u5f53\u5e74\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5219\u521b\u5efa 2021.1.x \u5206\u652f release \u5206\u652f\u8d1f\u8d23\u6784\u5efa\u5177\u4f53\u4ea7\u7269\uff0c2021.1.x \u5206\u652f\u7684\u7b2c\u4e8c\u4e2a\u8865\u4e01\u7248\u672c\u6784\u5efa\u7684\u4ea7\u7269\u7248\u672c\u4e3a 2021.1.2 bug \u4fee\u590d\u4e5f\u5728 feature \u5206\u652f\u5f00\u53d1\uff0c\u5408\u5e76\u5230\u6240\u6709\u53d7\u5f71\u54cd\u7684 release \u5206\u652f\uff0c\u662f\u5426\u5408\u5e76 master \u89c6\u60c5\u51b5\u800c\u5b9a\u3002 \u6240\u6709\u7248\u672c\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 tag\uff0c2021 \u5e74\u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u53d1\u5e03\u662f 2021.1\uff0c\u7b2c\u4e00\u4e2a\u8865\u4e01\u5bf9\u5e94\u7684 tag \u662f 2021.1.1.","title":"\u5206\u652f\u7ba1\u7406"},{"location":"prepare/contribute/manage/#_8","text":"\u4e3a\u4e86\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5f00\u53d1\u65f6\uff0c\u7edf\u4e00\u7531\u8d1f\u8d23\u4ebacherry-pick\u76f8\u5173\u7684commit-id\u5230master\u5206\u652f\u6216\u8005release\u5206\u652f\u3002 release\u5206\u652f\u4fee\u590d\u4e86bug\u540e\uff0c\u7edf\u4e00\u7531\u8d1f\u8d23\u4ebamerge\uff08\u975efast-forward\u6a21\u5f0f\uff09\u5230master\u5206\u652f\u548c\u5404\u76f8\u5173\u7684release\u5206\u652f\uff0c\u4fdd\u7559\u4ee3\u7801\u7684\u5408\u5e76\u8bb0\u5f55\uff0c\u4fbf\u4e8e\u540e\u7eed\u95ee\u9898\u6392\u67e5\u3002git\u547d\u4ee4\u53c2\u8003\u5982\u4e0b\uff1a git merge --no-ff -e origin/2021.1.x","title":"\u63d0\u4ea4\u8bf4\u660e"},{"location":"prepare/contribute/manage/#_9","text":"\u6846\u67b6\u7ec4\u662f\u6846\u67b6\u7ef4\u62a4\u7684\u6838\u5fc3\u4eba\u5458\uff0c\u76ee\u524d\u5305\u62ec\uff1a \u8d21\u732e\u8005 \u5468\u667a\u4f1f \u4e07\u91cd\u9633 \u97e6\u5bb6\u9a79 \u5b59\u957f\u6d69 \u8521\u78ca \u90a3\u4e48\u5982\u4f55\u6210\u4e3a\u6846\u67b6\u7ec4\u6210\u5458\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u53ea\u8981 \u6700\u8fd1\u534a\u5e74\u8d21\u732e\u8d85\u8fc76\u4e2a\u65b0\u7279\u6027\u6216\u8005bug-fix \u3002","title":"\u6846\u67b6\u7ec4"},{"location":"prepare/develop-env/java-install/","text":"Java \u73af\u5883\u5b89\u88c5 \u00b6 \u516c\u53f8\u76ee\u524d\u4f7f\u7528 openjdk-11 \u8fdb\u884c\u5f00\u53d1\uff0c\u4e0b\u8f7d\u4e0e\u914d\u7f6e\u6d41\u7a0b\u5982\u4e0b\uff1a \u4e0b\u8f7d\u5730\u5740 \u00b6 \u8bbf\u95ee openjdk \u4e0b\u8f7d\u5730\u5740 - \u9009\u62e9\u5408\u9002\u7248\u672c openjdk \u8fdb\u884c\u4e0b\u8f7d \u8bbf\u95ee oracle \u4e0b\u8f7d\u5730\u5740 - \u9009\u62e9\u5408\u9002\u7684 jdk \u8fdb\u884c\u4e0b\u8f7d \u5b89\u88c5 \u00b6 Windows \u00b6 \u7b2c\u4e00\u6b65 \u5c06\u4e0b\u8f7d\u7684 zip \u89e3\u538b\uff0c\u653e\u5165\u5230\u672c\u5730\u76ee\u5f55\u3002 \u7b2c\u4e8c\u6b65 \u8fdb\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7684\u8bbe\u7f6e\u9875\u9762\uff0c\u5f00\u59cb\u914d\u7f6e jdk \u7684\u73af\u5883\u53d8\u91cf\u3002 \u65b0\u5efa JAVA_HOME \u53d8\u91cf\uff0c\u5e76\u4e14\u8f93\u5165 jdk-11 \u7684\u5b89\u88c5\u76ee\u5f55\u3002 \u7f16\u8f91 Path \u53d8\u91cf\u628a %JAVA_HOME%\\bin; \u8fd9\u4e2a\u53d8\u91cf\u63d2\u5165\u3002 \u901a\u8fc7 CMD\uff0cPowerShell \u6216\u8005 Git Bash\uff0c\u8f93\u5165 java -version \u9a8c\u8bc1 jdk \u5b89\u88c5\u662f\u5426\u6210\u529f\u3002 Mac \u00b6 \u79d1\u666e\uff1a\u5378\u8f7dpkg\u5b89\u88c5\u7684\u8f6f\u4ef6\uff1a mac\u4e2d\u5982\u4f55\u5378\u8f7dpkg \u65b9\u6848\u4e00 \u7ec8\u7aef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c \u4e0d\u540c shell\uff0c\u914d\u7f6e\u7684\u5730\u5740\u662f\u4e0d\u540c\u7684\uff0c\u4e0b\u9762\u7528 zsh \u4e3e\u4f8b\uff1a \u5047\u8bbe\u538b\u7f29\u5305\u6700\u540e\u662f\u653e\u5728 Downloads \u4e0b\u3002 # \u547d\u4ee4\u884c\u8fdb\u5165\u4e0b\u8f7d\u76ee\u5f55\uff0c\u89e3\u538b\u4e0b\u8f7d\u7684\u538b\u7f29\u5305 tar -xf openjdk-11.0.2_osx-x64_bin.tar.gz # \u6587\u4ef6\u53ef\u4ee5\u968f\u610f\u653e\u76ee\u5f55\uff0c\u8fd9\u91cc\u5c06 openjdk-11.0.2 \u653e\u5230 java \u6587\u4ef6\u5939\u4e0b # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf # \u6839\u636e shell \u4f7f\u7528\u7684\u4e0d\u540c\uff0c\u8bbe\u7f6e\u7684\u5730\u5740\u4e0d\u540c # bash \u4e00\u822c\u662f ~/.bash_profile # zsh \u4e00\u822c\u662f ~/.zshrc # \u6ca1\u6709\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u8bf7\u81ea\u884c\u521b\u5efa vi ~/.zshrc # \u4fee\u6539\u6587\u4ef6\uff0cwq \u4fdd\u5b58\u5e76\u9000\u51fa export JAVA_HOME = /Users/Downloads/java/jdk-11.0.2/Contents/Home/bin export PATH = $PATH : $JAVA_HOME # \u5237\u65b0\u751f\u6548 source ~/.zshrc \u5378\u8f7d\uff0c\u53ea\u8981\u628a\u6587\u4ef6\u548c\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5220\u9664\u5373\u53ef \u65b9\u6848\u4e8c \u76f4\u63a5\u53bboracle\u5b98\u7f51\u4e0b\u8f7ddmg\u5b89\u88c5\u5305\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a oracle \u5b98\u7f51\u4e0b\u8f7d \u65b9\u6848\u4e09 \u4f7f\u7528 Homebrew \u8fdb\u884c\u5b89\u88c5 brew search openjdk brew install openjdk@11 # \u5378\u8f7d brew uninstall openjdk@11 brew cleanup","title":"Java\u5b89\u88c5"},{"location":"prepare/develop-env/java-install/#java","text":"\u516c\u53f8\u76ee\u524d\u4f7f\u7528 openjdk-11 \u8fdb\u884c\u5f00\u53d1\uff0c\u4e0b\u8f7d\u4e0e\u914d\u7f6e\u6d41\u7a0b\u5982\u4e0b\uff1a","title":"Java \u73af\u5883\u5b89\u88c5"},{"location":"prepare/develop-env/java-install/#_1","text":"\u8bbf\u95ee openjdk \u4e0b\u8f7d\u5730\u5740 - \u9009\u62e9\u5408\u9002\u7248\u672c openjdk \u8fdb\u884c\u4e0b\u8f7d \u8bbf\u95ee oracle \u4e0b\u8f7d\u5730\u5740 - \u9009\u62e9\u5408\u9002\u7684 jdk \u8fdb\u884c\u4e0b\u8f7d","title":"\u4e0b\u8f7d\u5730\u5740"},{"location":"prepare/develop-env/java-install/#_2","text":"","title":"\u5b89\u88c5"},{"location":"prepare/develop-env/java-install/#windows","text":"\u7b2c\u4e00\u6b65 \u5c06\u4e0b\u8f7d\u7684 zip \u89e3\u538b\uff0c\u653e\u5165\u5230\u672c\u5730\u76ee\u5f55\u3002 \u7b2c\u4e8c\u6b65 \u8fdb\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7684\u8bbe\u7f6e\u9875\u9762\uff0c\u5f00\u59cb\u914d\u7f6e jdk \u7684\u73af\u5883\u53d8\u91cf\u3002 \u65b0\u5efa JAVA_HOME \u53d8\u91cf\uff0c\u5e76\u4e14\u8f93\u5165 jdk-11 \u7684\u5b89\u88c5\u76ee\u5f55\u3002 \u7f16\u8f91 Path \u53d8\u91cf\u628a %JAVA_HOME%\\bin; \u8fd9\u4e2a\u53d8\u91cf\u63d2\u5165\u3002 \u901a\u8fc7 CMD\uff0cPowerShell \u6216\u8005 Git Bash\uff0c\u8f93\u5165 java -version \u9a8c\u8bc1 jdk \u5b89\u88c5\u662f\u5426\u6210\u529f\u3002","title":"Windows"},{"location":"prepare/develop-env/java-install/#mac","text":"\u79d1\u666e\uff1a\u5378\u8f7dpkg\u5b89\u88c5\u7684\u8f6f\u4ef6\uff1a mac\u4e2d\u5982\u4f55\u5378\u8f7dpkg \u65b9\u6848\u4e00 \u7ec8\u7aef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c \u4e0d\u540c shell\uff0c\u914d\u7f6e\u7684\u5730\u5740\u662f\u4e0d\u540c\u7684\uff0c\u4e0b\u9762\u7528 zsh \u4e3e\u4f8b\uff1a \u5047\u8bbe\u538b\u7f29\u5305\u6700\u540e\u662f\u653e\u5728 Downloads \u4e0b\u3002 # \u547d\u4ee4\u884c\u8fdb\u5165\u4e0b\u8f7d\u76ee\u5f55\uff0c\u89e3\u538b\u4e0b\u8f7d\u7684\u538b\u7f29\u5305 tar -xf openjdk-11.0.2_osx-x64_bin.tar.gz # \u6587\u4ef6\u53ef\u4ee5\u968f\u610f\u653e\u76ee\u5f55\uff0c\u8fd9\u91cc\u5c06 openjdk-11.0.2 \u653e\u5230 java \u6587\u4ef6\u5939\u4e0b # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf # \u6839\u636e shell \u4f7f\u7528\u7684\u4e0d\u540c\uff0c\u8bbe\u7f6e\u7684\u5730\u5740\u4e0d\u540c # bash \u4e00\u822c\u662f ~/.bash_profile # zsh \u4e00\u822c\u662f ~/.zshrc # \u6ca1\u6709\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u8bf7\u81ea\u884c\u521b\u5efa vi ~/.zshrc # \u4fee\u6539\u6587\u4ef6\uff0cwq \u4fdd\u5b58\u5e76\u9000\u51fa export JAVA_HOME = /Users/Downloads/java/jdk-11.0.2/Contents/Home/bin export PATH = $PATH : $JAVA_HOME # \u5237\u65b0\u751f\u6548 source ~/.zshrc \u5378\u8f7d\uff0c\u53ea\u8981\u628a\u6587\u4ef6\u548c\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5220\u9664\u5373\u53ef \u65b9\u6848\u4e8c \u76f4\u63a5\u53bboracle\u5b98\u7f51\u4e0b\u8f7ddmg\u5b89\u88c5\u5305\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a oracle \u5b98\u7f51\u4e0b\u8f7d \u65b9\u6848\u4e09 \u4f7f\u7528 Homebrew \u8fdb\u884c\u5b89\u88c5 brew search openjdk brew install openjdk@11 # \u5378\u8f7d brew uninstall openjdk@11 brew cleanup","title":"Mac"},{"location":"prepare/develop-env/maven-install/","text":"Maven \u5b89\u88c5 \u00b6 \u516c\u53f8 JAVA \u56e2\u961f\u76ee\u524d\u4f7f\u7528 maven \u6765\u7ba1\u7406\u9879\u76ee\uff0c\u4e0b\u8f7d\u4e0e\u73af\u5883\u914d\u7f6e\u5982\u4e0b\uff1a \u4e5f\u53ef\u4ee5\u4f7f\u7528 IDEA \u81ea\u5e26\u7684 Maven\uff0c\u8fd9\u6837\u65e5\u5e38\u53ef\u4ee5\u4e0d\u7528\u5355\u72ec\u4e0b\u8f7d maven \u5e76\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u4ecd\u9700\u914d\u7f6e setting.xml \u6587\u4ef6\u3002 \u4e0b\u8f7d\u5730\u5740 \u00b6 \u8bbf\u95ee maven \u5b98\u7f51\u4e0b\u8f7d\u5730\u5740 \uff0c\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u4e0b\u8f7d\uff0c\u8fd9\u91cc\u9009\u62e9 3.6.3\uff0c\u5b9e\u9645\u7248\u672c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u53d8\u66f4\u3002 \u5b89\u88c5 \u00b6 windows \u00b6 \u7b2c\u4e00\u6b65 \u5c06\u4e0b\u8f7d\u7684 zip \u89e3\u538b\uff0c\u653e\u5230\u672c\u5730\u76ee\u5f55\u3002 \u7b2c\u4e8c\u6b65 # \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f mvn -v mac \u00b6 \u7ec8\u7aef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c \u4e0d\u540c shell\uff0c\u914d\u7f6e\u7684\u5730\u5740\u662f\u4e0d\u540c\u7684\uff0c\u4e0b\u9762\u7528 zsh \u4e3e\u4f8b\uff1a \u5047\u8bbe maven \u6700\u540e\u662f\u653e\u5728 Downloads \u4e0b\u3002 # \u6839\u636e shell \u4f7f\u7528\u7684\u4e0d\u540c\uff0c\u8bbe\u7f6e\u7684\u5730\u5740\u4e0d\u540c # bash \u4e00\u822c\u662f ~/.bash_profile # zsh \u4e00\u822c\u662f ~/.zshrc # \u6ca1\u6709\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u8bf7\u81ea\u884c\u521b\u5efa vi ~/.zshrc # \u4fee\u6539\u6587\u4ef6\uff0cwq \u4fdd\u5b58\u5e76\u9000\u51fa export M2_HOME = /Users/Downloads/maven/apache-maven-3.6.1/bin export PATH = $PATH : $M2_HOME # \u5237\u65b0\u751f\u6548 source ~/.zshrc \u5378\u8f7d\uff0c\u53ea\u8981\u628a\u6587\u4ef6\u548c\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5220\u9664\u5373\u53ef \u914d\u7f6e\u516c\u53f8\u7684 setting.xml \u6587\u4ef6 \u00b6 \u516c\u53f8\u5f88\u591a jar\uff08\u4f8b\u5982\uff1a\u5de8\u7075\u795e API \u7b49\u7b49\uff09\u90fd\u662f\u53d1\u5e03\u5728\u516c\u53f8\u81ea\u5df1\u642d\u5efa\u7684 maven \u4ed3\u5e93\uff08\u4ec5\u5185\u7f51\u53ef\u8bbf\u95ee\uff09\u4e2d\uff0c\u5982\u679c\u60f3\u901a\u8fc7 maven \u5bfc\u5165\u8fd9\u4e9b jar\uff0c\u5fc5\u987b\u5148\u4fee\u6539\u672c\u5730 maven \u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u4ece\u9ed8\u8ba4\u7684\u4e2d\u592e\u4ed3\u5e93\u6539\u6210\u516c\u53f8\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u5373\u66ff\u6362 maven \u76ee\u5f55\u4e0b conf \u6587\u4ef6\u5939\u4e0b\u7684 setting.xml \u6587\u4ef6\u3002 \u516c\u53f8 setting.xml \u6587\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740\uff1a setting.xml \u4e0b\u8f7d\uff0c\u53f3\u51fb\u70b9\u51fb->\u94fe\u63a5\u53e6\u5b58\u4e3a","title":"Maven\u5b89\u88c5"},{"location":"prepare/develop-env/maven-install/#maven","text":"\u516c\u53f8 JAVA \u56e2\u961f\u76ee\u524d\u4f7f\u7528 maven \u6765\u7ba1\u7406\u9879\u76ee\uff0c\u4e0b\u8f7d\u4e0e\u73af\u5883\u914d\u7f6e\u5982\u4e0b\uff1a \u4e5f\u53ef\u4ee5\u4f7f\u7528 IDEA \u81ea\u5e26\u7684 Maven\uff0c\u8fd9\u6837\u65e5\u5e38\u53ef\u4ee5\u4e0d\u7528\u5355\u72ec\u4e0b\u8f7d maven \u5e76\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u4ecd\u9700\u914d\u7f6e setting.xml \u6587\u4ef6\u3002","title":"Maven \u5b89\u88c5"},{"location":"prepare/develop-env/maven-install/#_1","text":"\u8bbf\u95ee maven \u5b98\u7f51\u4e0b\u8f7d\u5730\u5740 \uff0c\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u4e0b\u8f7d\uff0c\u8fd9\u91cc\u9009\u62e9 3.6.3\uff0c\u5b9e\u9645\u7248\u672c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u53d8\u66f4\u3002","title":"\u4e0b\u8f7d\u5730\u5740"},{"location":"prepare/develop-env/maven-install/#_2","text":"","title":"\u5b89\u88c5"},{"location":"prepare/develop-env/maven-install/#windows","text":"\u7b2c\u4e00\u6b65 \u5c06\u4e0b\u8f7d\u7684 zip \u89e3\u538b\uff0c\u653e\u5230\u672c\u5730\u76ee\u5f55\u3002 \u7b2c\u4e8c\u6b65 # \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f mvn -v","title":"windows"},{"location":"prepare/develop-env/maven-install/#mac","text":"\u7ec8\u7aef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c \u4e0d\u540c shell\uff0c\u914d\u7f6e\u7684\u5730\u5740\u662f\u4e0d\u540c\u7684\uff0c\u4e0b\u9762\u7528 zsh \u4e3e\u4f8b\uff1a \u5047\u8bbe maven \u6700\u540e\u662f\u653e\u5728 Downloads \u4e0b\u3002 # \u6839\u636e shell \u4f7f\u7528\u7684\u4e0d\u540c\uff0c\u8bbe\u7f6e\u7684\u5730\u5740\u4e0d\u540c # bash \u4e00\u822c\u662f ~/.bash_profile # zsh \u4e00\u822c\u662f ~/.zshrc # \u6ca1\u6709\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u8bf7\u81ea\u884c\u521b\u5efa vi ~/.zshrc # \u4fee\u6539\u6587\u4ef6\uff0cwq \u4fdd\u5b58\u5e76\u9000\u51fa export M2_HOME = /Users/Downloads/maven/apache-maven-3.6.1/bin export PATH = $PATH : $M2_HOME # \u5237\u65b0\u751f\u6548 source ~/.zshrc \u5378\u8f7d\uff0c\u53ea\u8981\u628a\u6587\u4ef6\u548c\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5220\u9664\u5373\u53ef","title":"mac"},{"location":"prepare/develop-env/maven-install/#settingxml","text":"\u516c\u53f8\u5f88\u591a jar\uff08\u4f8b\u5982\uff1a\u5de8\u7075\u795e API \u7b49\u7b49\uff09\u90fd\u662f\u53d1\u5e03\u5728\u516c\u53f8\u81ea\u5df1\u642d\u5efa\u7684 maven \u4ed3\u5e93\uff08\u4ec5\u5185\u7f51\u53ef\u8bbf\u95ee\uff09\u4e2d\uff0c\u5982\u679c\u60f3\u901a\u8fc7 maven \u5bfc\u5165\u8fd9\u4e9b jar\uff0c\u5fc5\u987b\u5148\u4fee\u6539\u672c\u5730 maven \u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u4ece\u9ed8\u8ba4\u7684\u4e2d\u592e\u4ed3\u5e93\u6539\u6210\u516c\u53f8\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u5373\u66ff\u6362 maven \u76ee\u5f55\u4e0b conf \u6587\u4ef6\u5939\u4e0b\u7684 setting.xml \u6587\u4ef6\u3002 \u516c\u53f8 setting.xml \u6587\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740\uff1a setting.xml \u4e0b\u8f7d\uff0c\u53f3\u51fb\u70b9\u51fb->\u94fe\u63a5\u53e6\u5b58\u4e3a","title":"\u914d\u7f6e\u516c\u53f8\u7684 setting.xml \u6587\u4ef6"},{"location":"prepare/skill/LearningIdea/","text":"IntelliJ IDEA \u4f7f\u7528\u6280\u5de7 \u00b6 \u7981\u6b62 \u5173\u7231\u901a Java \u5f00\u53d1\u5168\u90e8\u4f7f\u7528 IDEA\uff0c\u7981\u6b62\u4f7f\u7528 Eclipse IDEA \u5b98\u7f51\u4e0b\u8f7d \u7248\u672c\u9009\u62e9 \u00b6 IDEA \u6709\u793e\u533a\u7248\u548c\u5168\u529f\u80fd\u7248\u4e24\u4e2a\u7248\u672c\u3002\u793e\u533a\u7248\u8db3\u591f\u6ee1\u8db3\u5927\u5bb6\u5e73\u5e38\u5de5\u4f5c\u65f6\uff0c\u5c31\u662f\u6ca1\u6709\u548c spring \u96c6\u6210\u76f8\u5173\u7684\u6a21\u677f\u3002\u7528\u5168\u529f\u80fd\u7248\u521b\u5efa\u4e00\u4e2a spring boot \u5e94\u7528\u662f\u975e\u5e38\u65b9\u4fbf\u5feb\u6377\u7684\u3002 \u7248\u672c\u53f7\u65b9\u4fbf\uff0c\u5f53\u7136\u662f\u8d8a\u65b0\u8d8a\u597d\u3002 \u5b89\u88c5\u5b8c\u540e\u7684\u5e38\u7528\u8bbe\u7f6e \u00b6 https://my.oschina.net/yuhuixin/blog/601426 \u5927\u5bb6\u6700\u597d\u628a\u4ee3\u7801\u63d0\u793a\u7684\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u654f\u611f\u6539\u4e3a\u4e0d\u654f\u611f\u3002 \u66f4\u6539 Terminal \u4e3a GitBash \u00b6 \u5bf9\u4e8e windows \u7528\u6237\u6765\u8bf4\uff0cidea \u4f7f\u7528\u7684 Terminal \u9ed8\u8ba4\u4e3a cmd\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5f31\u3002\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6d41\u7a0b\u66f4\u6539\uff1a \u6dfb\u52a0\u7248\u6743 \u00b6 \u7b2c\u4e00\u6b65\uff1a \u5230 settings \u7684 Copyright Profiles \u91cc\u6dfb\u52a0\u5173\u7231\u901a\u7248\u6743\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe \u5177\u4f53\u6587\u5b57\u4fe1\u606f\u5982\u4e0b\uff1a Copyright 2007-$today.year, CIIC Guanaitong, Co., Ltd. All rights reserved. \u7b2c\u4e8c\u6b65\uff1a \u5230 Copyright \u91cc\uff0c\u628a\u5f53\u524d\u9879\u76ee\u7684\u7248\u6743\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u6b65\u6dfb\u52a0\u7684 GAT \uff0c Scope \u4e3a Project Files \u3002\u5982\u4e0b\u56fe\uff1a \u7b2c\u4e09\u6b65\uff1a \u53f3\u51fb\u9879\u76ee\uff0c\u66f4\u65b0\u7248\u6743\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\uff1a \u5feb\u6377\u952e \u00b6 IDEA \u53ef\u4ee5\u4f7f\u7528\u7c7b eclipse \u7684\u5feb\u6377\u952e\u4f53\u7cfb\uff0c\u4f46\u662f\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 IDEA \u81ea\u8eab\u7684\u5feb\u6377\u952e\u4f53\u7cfb\uff0c\u56e0\u4e3a idea \u7684\u529f\u80fd\u8fdc\u6bd4 eclipse \u7684\u8981\u4e30\u5bcc\u3001\u5f3a\u5927\u3002 Ctrl+N \u5feb\u901f\u67e5\u627e\u4e00\u4e2a\u7c7b\uff0c \u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+T \u3002\u9ed8\u8ba4\u67e5\u627e\u7684\u8303\u56f4\u662f\u4f60\u7684\u9879\u76ee\u91cc\u7684\u4ee3\u7801\uff0c\u4e0d\u5305\u62ec jdk \u7684\u7c7b\u548c\u5f15\u7528 jar \u7684\u7c7b\u3002\u5982\u679c\u60f3\u5305\u62ec\uff0c\u518d\u6309\u4e00\u6b21 Ctrl+N \u5373\u53ef\uff0c\u6216\u8005\u9875\u9762\u4e0a\u7528\u9f20\u6807\u70b9\u51fb Include non-project classes \u5373\u53ef\u3002 Ctrl+Shift+N \u5feb\u901f\u67e5\u627e\u4e00\u4e2a\u8d44\u6e90\u6587\u4ef6\uff0c \u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+R Ctrl+Alt+L \u4ee3\u7801\u683c\u5f0f\u5316\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+F \u3002 Ctrl+F12 \u67e5\u770b\u4e00\u4e2a\u7c7b\u7684\u7ed3\u6784\uff1a\u6240\u6709\u6210\u5458\u53d8\u91cf\u548c\u6240\u6709\u65b9\u6cd5\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+O \u3002 Ctrl+Alt+O \u81ea\u52a8\u5bfc\u5305\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+O \u3002 Ctrl+Shift+B \u67e5\u770b\u4e00\u4e2a\u7c7b\u7684\u5b50\u7c7b\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+T \u3002 Alt+F7 \u67e5\u770b\u4e00\u4e2a\u7c7b\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u7b49\u7684\u4f7f\u7528\u7684\u5730\u65b9\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+G \u3002 Ctrl+e \u6253\u5f00\u6700\u8fd1\u4f7f\u7528\u7684\u6587\u4ef6\u3002 Ctrl+f \u6587\u4ef6\u5185\u641c\u7d22\u3002 Ctrl+Shift+f \u5168\u5c40\u641c\u7d22\u3002 Ctrl+j \u6309\u7167\u6a21\u677f\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u3002\u5982\u5faa\u73af\u3001main \u51fd\u6570\u3001if \u5224\u65ad\u7b49\u7b49\u3002\u3002\u3002 Ctrl+alt+t \u9009\u62e9\u4e00\u5757\u4ee3\u7801\u6309\u8fd9\u4e2a\u5feb\u6377\u952e\uff0c\u7528\u5faa\u73af\u3001try catch\u3001while\u3001if \u5224\u65ad\u7b49 surround with \u8fd9\u6bb5\u4ee3\u7801\u3002 Ctrl+f9 \u7f16\u8bd1 Ctrl+\u7a7a\u767d \u4ee3\u7801\u81ea\u52a8\u63d0\u793a\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Alt+/ \u3002 Ctrl+x \u5220\u9664\u3001\u526a\u5207\u4e00\u884c\u4ee3\u7801\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+d \u3002 Ctrl+d \u590d\u5236\u4e00\u884c\u4ee3\u7801\u3002 tab tab \u662f\u6839\u636e\u6a21\u677f\u7b80\u79f0\u81ea\u52a8\u751f\u6210\u4e00\u6bb5\u4ee3\u7801\u3002\u6bd4\u5982\u5bf9\u4e8e mian \u51fd\u6570 public static void main ,\u53ea\u9700\u8981\u8f93\u5165\u5176 4 \u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd psvm \uff0c\u518d\u6309 tab \uff0cIDEA \u5c31\u4f1a\u7ed9\u4f60\u751f\u6210\u5b8c\u6574\u7684 main \u51fd\u6570\u3002\u518d\u6bd4\u5982 System.out.println() ,\u53ea\u9700\u8981\u8f93\u5165\u7b80\u79f0 sout \uff0cIDEA \u5c31\u4f1a\u81ea\u52a8\u751f\u6210 System.out.println() \u3002 Ctrl+t \u6839\u636e\u4ee3\u7801\u4ed3\u5e93\u66f4\u65b0\u6574\u4e2a\u9879\u76ee\u3002 alt+enter \u81ea\u52a8\u89e3\u51b3\u9519\u8bef\uff0c\u6bd4\u5982\u7f3a\u5c11 import\u3001\u7c7b\u578b\u9519\u8bef\u7b49\u3002 alt+insert \u751f\u6210\u4ee3\u7801\uff0c\u6bd4\u5982 getter\u3001setter\u3001contructor\u3001equal\u3001toString \u7b49\u65b9\u6cd5\u3002 Ctrl+Shift+u \u5927\u5c0f\u5199\u8f6c\u6362\u3002 IDED \u9ed8\u8ba4\u7684 KeyMap: \u4ee3\u7801\u63d0\u793a \u00b6 idea \u4ee3\u7801\u63d0\u793a\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002 \u81ea\u52a8\u751f\u6210\u53d8\u91cf\u547d\u540d\uff1a \u7701\u53bb\u5927\u5bb6\u547d\u540d\u7684\u82e6\u607c\u3002 \u81ea\u52a8\u5f15\u5165\u53d8\u91cf\u58f0\u660e\uff1a \u6309 alt+enter \u5feb\u6377\u952e 3.\u9ed8\u8ba4\u7684\uff0cidea \u6240\u6709\u7684\u8f93\u5165\u90fd\u4f1a\u81ea\u52a8\u63d0\u793a\u3002\u53ef\u662f\u5f53\u8f93\u5165\u4e00\u534a\u65f6\uff0c\u9875\u9762\u7684\u7126\u70b9\u5207\u6362\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u518d\u5207\u6362\u56de\u6765\u65f6\uff0c\u81ea\u52a8\u63d0\u793a\u5c31\u4f1a\u6d88\u5931\u3002\u6b64\u65f6\u6309 Ctrl+\u7a7a\u767d \u4ee3\u7801\u53c8\u4f1a\u91cd\u65b0\u51fa\u73b0\u3002 \u5176\u4ed6\u5b9e\u7528\u7684\u529f\u80fd \u00b6 \u901a\u8fc7 run_with_coverage \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u770b\u5230\u6574\u4f53\u4ee3\u7801\u7684\u8986\u76d6\u7387 Analyze->Inspect Code \u521d\u6b65\u5206\u6790\u4ee3\u7801\u8d28\u91cf\u3002\u4e0b\u9762\u662f userdoor \u7684\u63a2\u6d4b\u7ed3\u679c\uff1a Analyze->Code CleanUp \u6e05\u7406\u65e0\u7528\u4ee3\u7801\uff0c\u5305\u62ec\u65e0\u7528\u7684 import\u3001\u65e0\u7528\u7684\u53d8\u91cf\u58f0\u660e\u7b49\u3002 Lifecycle \u63d2\u4ef6 \u00b6 \u8fd9\u91cc\u9762\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u901a\u8fc7 maven \u63d2\u4ef6\u542f\u52a8\uff0c\u9700\u8981\u628a\u4f9d\u8d56\u7684\u6a21\u5757\u7ed9 install \u4e00\u4e0b\u3002\u56e0\u4e3a maven \u662f\u901a\u8fc7 jar \u5305\u7ba1\u7406\u4f9d\u8d56\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u628a\u4f9d\u8d56\u7684\u6a21\u5757\u7684 class \u76ee\u5f55\u7b49\u5173\u8054\u8d77\u6765\u3002 \u9700\u8981\u6267\u884c maven \u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u7528 Lifecycle \u83dc\u5355\uff0c\u5982\u4e0b\u56fe\uff1a \u4ece\u6570\u636e\u5e93\u8868\u751f\u6210 POJO \u00b6 \u5728 IDEA \u5185\u65b0\u5efa DataSource \u586b\u5199 DataSource \u7684\u914d\u7f6e\u4fe1\u606f \u5982\u679c driver \u6ca1\u6709\u5b89\u88c5\u5219\u5148\u70b9\u51fb\u5b89\u88c5 driver \u66ff\u6362\u751f\u6210\u4ee3\u7801\u7684 groovy \u6587\u4ef6\uff0c\u7b26\u53f7\u5173\u7231\u901a\u4e60\u60ef \u811a\u672c\u7684\u4e0b\u8f7d\u5730\u5740\u4e3a https://gitlab.wuxingdev.cn/tech/guide-java/tree/master/images/skill/idea/pojo.groovy \u7f16\u8f91 groovy \u6587\u4ef6\uff0c\u66ff\u6362\u4e3a\u9879\u76ee\u7684\u5305\u540d \u9009\u62e9\u76ee\u6807\u6587\u4ef6\u5939\u751f\u6210 pojo","title":"IDEA\u4f7f\u7528\u6280\u5de7"},{"location":"prepare/skill/LearningIdea/#intellij-idea","text":"\u7981\u6b62 \u5173\u7231\u901a Java \u5f00\u53d1\u5168\u90e8\u4f7f\u7528 IDEA\uff0c\u7981\u6b62\u4f7f\u7528 Eclipse IDEA \u5b98\u7f51\u4e0b\u8f7d","title":"IntelliJ IDEA \u4f7f\u7528\u6280\u5de7"},{"location":"prepare/skill/LearningIdea/#_1","text":"IDEA \u6709\u793e\u533a\u7248\u548c\u5168\u529f\u80fd\u7248\u4e24\u4e2a\u7248\u672c\u3002\u793e\u533a\u7248\u8db3\u591f\u6ee1\u8db3\u5927\u5bb6\u5e73\u5e38\u5de5\u4f5c\u65f6\uff0c\u5c31\u662f\u6ca1\u6709\u548c spring \u96c6\u6210\u76f8\u5173\u7684\u6a21\u677f\u3002\u7528\u5168\u529f\u80fd\u7248\u521b\u5efa\u4e00\u4e2a spring boot \u5e94\u7528\u662f\u975e\u5e38\u65b9\u4fbf\u5feb\u6377\u7684\u3002 \u7248\u672c\u53f7\u65b9\u4fbf\uff0c\u5f53\u7136\u662f\u8d8a\u65b0\u8d8a\u597d\u3002","title":"\u7248\u672c\u9009\u62e9"},{"location":"prepare/skill/LearningIdea/#_2","text":"https://my.oschina.net/yuhuixin/blog/601426 \u5927\u5bb6\u6700\u597d\u628a\u4ee3\u7801\u63d0\u793a\u7684\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u654f\u611f\u6539\u4e3a\u4e0d\u654f\u611f\u3002","title":"\u5b89\u88c5\u5b8c\u540e\u7684\u5e38\u7528\u8bbe\u7f6e"},{"location":"prepare/skill/LearningIdea/#terminal-gitbash","text":"\u5bf9\u4e8e windows \u7528\u6237\u6765\u8bf4\uff0cidea \u4f7f\u7528\u7684 Terminal \u9ed8\u8ba4\u4e3a cmd\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5f31\u3002\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6d41\u7a0b\u66f4\u6539\uff1a","title":"\u66f4\u6539 Terminal \u4e3a GitBash"},{"location":"prepare/skill/LearningIdea/#_3","text":"\u7b2c\u4e00\u6b65\uff1a \u5230 settings \u7684 Copyright Profiles \u91cc\u6dfb\u52a0\u5173\u7231\u901a\u7248\u6743\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe \u5177\u4f53\u6587\u5b57\u4fe1\u606f\u5982\u4e0b\uff1a Copyright 2007-$today.year, CIIC Guanaitong, Co., Ltd. All rights reserved. \u7b2c\u4e8c\u6b65\uff1a \u5230 Copyright \u91cc\uff0c\u628a\u5f53\u524d\u9879\u76ee\u7684\u7248\u6743\u8bbe\u7f6e\u4e3a\u4e0a\u4e00\u6b65\u6dfb\u52a0\u7684 GAT \uff0c Scope \u4e3a Project Files \u3002\u5982\u4e0b\u56fe\uff1a \u7b2c\u4e09\u6b65\uff1a \u53f3\u51fb\u9879\u76ee\uff0c\u66f4\u65b0\u7248\u6743\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\uff1a","title":"\u6dfb\u52a0\u7248\u6743"},{"location":"prepare/skill/LearningIdea/#_4","text":"IDEA \u53ef\u4ee5\u4f7f\u7528\u7c7b eclipse \u7684\u5feb\u6377\u952e\u4f53\u7cfb\uff0c\u4f46\u662f\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 IDEA \u81ea\u8eab\u7684\u5feb\u6377\u952e\u4f53\u7cfb\uff0c\u56e0\u4e3a idea \u7684\u529f\u80fd\u8fdc\u6bd4 eclipse \u7684\u8981\u4e30\u5bcc\u3001\u5f3a\u5927\u3002 Ctrl+N \u5feb\u901f\u67e5\u627e\u4e00\u4e2a\u7c7b\uff0c \u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+T \u3002\u9ed8\u8ba4\u67e5\u627e\u7684\u8303\u56f4\u662f\u4f60\u7684\u9879\u76ee\u91cc\u7684\u4ee3\u7801\uff0c\u4e0d\u5305\u62ec jdk \u7684\u7c7b\u548c\u5f15\u7528 jar \u7684\u7c7b\u3002\u5982\u679c\u60f3\u5305\u62ec\uff0c\u518d\u6309\u4e00\u6b21 Ctrl+N \u5373\u53ef\uff0c\u6216\u8005\u9875\u9762\u4e0a\u7528\u9f20\u6807\u70b9\u51fb Include non-project classes \u5373\u53ef\u3002 Ctrl+Shift+N \u5feb\u901f\u67e5\u627e\u4e00\u4e2a\u8d44\u6e90\u6587\u4ef6\uff0c \u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+R Ctrl+Alt+L \u4ee3\u7801\u683c\u5f0f\u5316\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+F \u3002 Ctrl+F12 \u67e5\u770b\u4e00\u4e2a\u7c7b\u7684\u7ed3\u6784\uff1a\u6240\u6709\u6210\u5458\u53d8\u91cf\u548c\u6240\u6709\u65b9\u6cd5\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+O \u3002 Ctrl+Alt+O \u81ea\u52a8\u5bfc\u5305\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+O \u3002 Ctrl+Shift+B \u67e5\u770b\u4e00\u4e2a\u7c7b\u7684\u5b50\u7c7b\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+T \u3002 Alt+F7 \u67e5\u770b\u4e00\u4e2a\u7c7b\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u7b49\u7684\u4f7f\u7528\u7684\u5730\u65b9\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+Shift+G \u3002 Ctrl+e \u6253\u5f00\u6700\u8fd1\u4f7f\u7528\u7684\u6587\u4ef6\u3002 Ctrl+f \u6587\u4ef6\u5185\u641c\u7d22\u3002 Ctrl+Shift+f \u5168\u5c40\u641c\u7d22\u3002 Ctrl+j \u6309\u7167\u6a21\u677f\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u3002\u5982\u5faa\u73af\u3001main \u51fd\u6570\u3001if \u5224\u65ad\u7b49\u7b49\u3002\u3002\u3002 Ctrl+alt+t \u9009\u62e9\u4e00\u5757\u4ee3\u7801\u6309\u8fd9\u4e2a\u5feb\u6377\u952e\uff0c\u7528\u5faa\u73af\u3001try catch\u3001while\u3001if \u5224\u65ad\u7b49 surround with \u8fd9\u6bb5\u4ee3\u7801\u3002 Ctrl+f9 \u7f16\u8bd1 Ctrl+\u7a7a\u767d \u4ee3\u7801\u81ea\u52a8\u63d0\u793a\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Alt+/ \u3002 Ctrl+x \u5220\u9664\u3001\u526a\u5207\u4e00\u884c\u4ee3\u7801\u3002\u529f\u80fd\u7c7b\u4f3c\u4e0e eclipse \u7684 Ctrl+d \u3002 Ctrl+d \u590d\u5236\u4e00\u884c\u4ee3\u7801\u3002 tab tab \u662f\u6839\u636e\u6a21\u677f\u7b80\u79f0\u81ea\u52a8\u751f\u6210\u4e00\u6bb5\u4ee3\u7801\u3002\u6bd4\u5982\u5bf9\u4e8e mian \u51fd\u6570 public static void main ,\u53ea\u9700\u8981\u8f93\u5165\u5176 4 \u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd psvm \uff0c\u518d\u6309 tab \uff0cIDEA \u5c31\u4f1a\u7ed9\u4f60\u751f\u6210\u5b8c\u6574\u7684 main \u51fd\u6570\u3002\u518d\u6bd4\u5982 System.out.println() ,\u53ea\u9700\u8981\u8f93\u5165\u7b80\u79f0 sout \uff0cIDEA \u5c31\u4f1a\u81ea\u52a8\u751f\u6210 System.out.println() \u3002 Ctrl+t \u6839\u636e\u4ee3\u7801\u4ed3\u5e93\u66f4\u65b0\u6574\u4e2a\u9879\u76ee\u3002 alt+enter \u81ea\u52a8\u89e3\u51b3\u9519\u8bef\uff0c\u6bd4\u5982\u7f3a\u5c11 import\u3001\u7c7b\u578b\u9519\u8bef\u7b49\u3002 alt+insert \u751f\u6210\u4ee3\u7801\uff0c\u6bd4\u5982 getter\u3001setter\u3001contructor\u3001equal\u3001toString \u7b49\u65b9\u6cd5\u3002 Ctrl+Shift+u \u5927\u5c0f\u5199\u8f6c\u6362\u3002 IDED \u9ed8\u8ba4\u7684 KeyMap:","title":"\u5feb\u6377\u952e"},{"location":"prepare/skill/LearningIdea/#_5","text":"idea \u4ee3\u7801\u63d0\u793a\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002 \u81ea\u52a8\u751f\u6210\u53d8\u91cf\u547d\u540d\uff1a \u7701\u53bb\u5927\u5bb6\u547d\u540d\u7684\u82e6\u607c\u3002 \u81ea\u52a8\u5f15\u5165\u53d8\u91cf\u58f0\u660e\uff1a \u6309 alt+enter \u5feb\u6377\u952e 3.\u9ed8\u8ba4\u7684\uff0cidea \u6240\u6709\u7684\u8f93\u5165\u90fd\u4f1a\u81ea\u52a8\u63d0\u793a\u3002\u53ef\u662f\u5f53\u8f93\u5165\u4e00\u534a\u65f6\uff0c\u9875\u9762\u7684\u7126\u70b9\u5207\u6362\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u518d\u5207\u6362\u56de\u6765\u65f6\uff0c\u81ea\u52a8\u63d0\u793a\u5c31\u4f1a\u6d88\u5931\u3002\u6b64\u65f6\u6309 Ctrl+\u7a7a\u767d \u4ee3\u7801\u53c8\u4f1a\u91cd\u65b0\u51fa\u73b0\u3002","title":"\u4ee3\u7801\u63d0\u793a"},{"location":"prepare/skill/LearningIdea/#_6","text":"\u901a\u8fc7 run_with_coverage \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u770b\u5230\u6574\u4f53\u4ee3\u7801\u7684\u8986\u76d6\u7387 Analyze->Inspect Code \u521d\u6b65\u5206\u6790\u4ee3\u7801\u8d28\u91cf\u3002\u4e0b\u9762\u662f userdoor \u7684\u63a2\u6d4b\u7ed3\u679c\uff1a Analyze->Code CleanUp \u6e05\u7406\u65e0\u7528\u4ee3\u7801\uff0c\u5305\u62ec\u65e0\u7528\u7684 import\u3001\u65e0\u7528\u7684\u53d8\u91cf\u58f0\u660e\u7b49\u3002","title":"\u5176\u4ed6\u5b9e\u7528\u7684\u529f\u80fd"},{"location":"prepare/skill/LearningIdea/#lifecycle","text":"\u8fd9\u91cc\u9762\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u901a\u8fc7 maven \u63d2\u4ef6\u542f\u52a8\uff0c\u9700\u8981\u628a\u4f9d\u8d56\u7684\u6a21\u5757\u7ed9 install \u4e00\u4e0b\u3002\u56e0\u4e3a maven \u662f\u901a\u8fc7 jar \u5305\u7ba1\u7406\u4f9d\u8d56\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u628a\u4f9d\u8d56\u7684\u6a21\u5757\u7684 class \u76ee\u5f55\u7b49\u5173\u8054\u8d77\u6765\u3002 \u9700\u8981\u6267\u884c maven \u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u7528 Lifecycle \u83dc\u5355\uff0c\u5982\u4e0b\u56fe\uff1a","title":"Lifecycle \u63d2\u4ef6"},{"location":"prepare/skill/LearningIdea/#pojo","text":"\u5728 IDEA \u5185\u65b0\u5efa DataSource \u586b\u5199 DataSource \u7684\u914d\u7f6e\u4fe1\u606f \u5982\u679c driver \u6ca1\u6709\u5b89\u88c5\u5219\u5148\u70b9\u51fb\u5b89\u88c5 driver \u66ff\u6362\u751f\u6210\u4ee3\u7801\u7684 groovy \u6587\u4ef6\uff0c\u7b26\u53f7\u5173\u7231\u901a\u4e60\u60ef \u811a\u672c\u7684\u4e0b\u8f7d\u5730\u5740\u4e3a https://gitlab.wuxingdev.cn/tech/guide-java/tree/master/images/skill/idea/pojo.groovy \u7f16\u8f91 groovy \u6587\u4ef6\uff0c\u66ff\u6362\u4e3a\u9879\u76ee\u7684\u5305\u540d \u9009\u62e9\u76ee\u6807\u6587\u4ef6\u5939\u751f\u6210 pojo","title":"\u4ece\u6570\u636e\u5e93\u8868\u751f\u6210 POJO"},{"location":"prepare/skill/checkstyle/","text":"Java \u4ee3\u7801\u98ce\u683c\u89c4\u8303 \u00b6 \u4e00\u4e07\u4e2a\u4eba\u5fc3\u4e2d\u6709\u4e00\u4e07\u4e2a\u54c8\u59c6\u96f7\u7279\u3002 \u57fa\u672c\u539f\u5247 \u00b6 \u516c\u5171\u9879\u76ee\u5f3a\u5236\u542f\u7528 api-checkstyle \u72ec\u7acb\u9879\u76ee\u4e2d\u524d\u540e\u4fdd\u6301\u4e00\u81f4\u539f\u5219 API Checkstyle \u00b6 \u9488\u5bf9\u4e2d\u53f0\u670d\u52a1\u5c01\u88c5\u7684 client-sdk \u7c7b\u9879\u76ee\u5f3a\u5236\u542f\u7528 api-checkstyle.xml\u3002 \u6d89\u53ca\u9879\u76ee\uff1a ciicgat-api-fpp ciicgat-api-bpp ciicgat-api-app Checkstyle-IDEA \u00b6 \u5b89\u88c5 \u00b6 \u5b89\u88c5 Checkstyle \u63d2\u4ef6, Preference>Plugins>Marketplace \u8f93\u5165 Checkstyle \u5173\u952e\u5b57 \u5b89\u88c5\u5b8c\u6210\u540e\u91cd\u542f IDEA \u914d\u7f6e \u00b6 \u6307\u5b9a checkstyle \u6587\u4ef6\u8def\u5f84\uff0c\u516c\u5171\u9879\u76ee src/checkstyle \u76ee\u5f55\u4e0b checkstyle.xml \u70b9\u51fb\u4e0b\u4e00\u6b65\u8f93\u5165 checkstyle.header.file \u6587\u4ef6\u5730\u5740 \u516c\u5171\u9879\u76ee src/checkstyle \u76ee\u5f55\u4e0b checkstyle-header.txt \u70b9\u51fb\u4e0b\u4e00\u6b65\uff0c\u914d\u7f6e\u5b8c\u6210 \u68c0\u67e5 \u00b6 Maven \u63d2\u4ef6 \u00b6 \u914d\u7f6e \u00b6 <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-checkstyle-plugin </artifactId> <executions> <execution> <id> checkstyle-validation </id> <phase> validate </phase> <configuration> <configLocation> src/checkstyle/checkstyle.xml </configLocation> <headerLocation> src/checkstyle/checkstyle-header.txt </headerLocation> <encoding> UTF-8 </encoding> <consoleOutput> true </consoleOutput> <failOnViolation> true </failOnViolation> <includeTestSourceDirectory> true </includeTestSourceDirectory> </configuration> <goals> <goal> check </goal> </goals> </execution> </executions> </plugin> \u68c0\u9a8c \u00b6 \u9879\u76ee\u6839\u8def\u5f84\u6267\u884c mvn validate ,\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\u9519\u8bef\uff1a [ INFO ] \u5f00\u59cb\u68c0\u67e5\u2026\u2026 [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/xyz/Sample.java:1: \u5f53\u524d\u884c\u4e0e\u88ab\u671f\u5f85\u7684 header: '^\\Q/*\\E$' \u4e0d\u7b26\u3002 [ RegexpHeader ] [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/xyz/Sample.java:1:9: \u540d\u79f0 'com.xyz' \u5fc5\u987b\u5339\u914d\u8868\u8fbe\u5f0f\uff1a '^com\\.ciicgat\\.api(\\.[a-*)*$' \u3002 [ PackageName ] [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/ciicgat/api/catalog/model/EnterpriseBillDateSetting.java:1: \u5f53\u524d\u884c\u4e0e\u88ab\u671f\u5f85\u7684 h^ \\Q /* \\E $ ' \u4e0d\u7b26\u3002 [ RegexpHeader ] \u68c0\u67e5\u5b8c\u6210\u3002 \u5176\u4ed6\u9879\u76ee \u00b6 \u5efa\u8bae\u5c0f\u56e2\u961f\u8303\u56f4\u5185\u7ea6\u5b9a\u4e00\u79cd\uff0c\u57fa\u4e8e Checkstyle-IDEA \u4e2d\u5185\u7f6e\u7684 Google \u548c Sun \u6807\u51c6\u8fdb\u884c\u89c4\u8303\u5373\u53ef\u3002 \u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4ee3\u7801\u89c4\u8303\u4fdd\u6301\u4e00\u81f4\uff0c\u51cf\u8f7b\u5fc3\u7406\u8d1f\u62c5 \u6700\u540e \u00b6 \u671f\u5f85\u5171\u540c\u8fdb\u6b65","title":"Checksyle\u914d\u7f6e"},{"location":"prepare/skill/checkstyle/#java","text":"\u4e00\u4e07\u4e2a\u4eba\u5fc3\u4e2d\u6709\u4e00\u4e07\u4e2a\u54c8\u59c6\u96f7\u7279\u3002","title":"Java \u4ee3\u7801\u98ce\u683c\u89c4\u8303"},{"location":"prepare/skill/checkstyle/#_1","text":"\u516c\u5171\u9879\u76ee\u5f3a\u5236\u542f\u7528 api-checkstyle \u72ec\u7acb\u9879\u76ee\u4e2d\u524d\u540e\u4fdd\u6301\u4e00\u81f4\u539f\u5219","title":"\u57fa\u672c\u539f\u5247"},{"location":"prepare/skill/checkstyle/#api-checkstyle","text":"\u9488\u5bf9\u4e2d\u53f0\u670d\u52a1\u5c01\u88c5\u7684 client-sdk \u7c7b\u9879\u76ee\u5f3a\u5236\u542f\u7528 api-checkstyle.xml\u3002 \u6d89\u53ca\u9879\u76ee\uff1a ciicgat-api-fpp ciicgat-api-bpp ciicgat-api-app","title":"API Checkstyle"},{"location":"prepare/skill/checkstyle/#checkstyle-idea","text":"","title":"Checkstyle-IDEA"},{"location":"prepare/skill/checkstyle/#_2","text":"\u5b89\u88c5 Checkstyle \u63d2\u4ef6, Preference>Plugins>Marketplace \u8f93\u5165 Checkstyle \u5173\u952e\u5b57 \u5b89\u88c5\u5b8c\u6210\u540e\u91cd\u542f IDEA","title":"\u5b89\u88c5"},{"location":"prepare/skill/checkstyle/#_3","text":"\u6307\u5b9a checkstyle \u6587\u4ef6\u8def\u5f84\uff0c\u516c\u5171\u9879\u76ee src/checkstyle \u76ee\u5f55\u4e0b checkstyle.xml \u70b9\u51fb\u4e0b\u4e00\u6b65\u8f93\u5165 checkstyle.header.file \u6587\u4ef6\u5730\u5740 \u516c\u5171\u9879\u76ee src/checkstyle \u76ee\u5f55\u4e0b checkstyle-header.txt \u70b9\u51fb\u4e0b\u4e00\u6b65\uff0c\u914d\u7f6e\u5b8c\u6210","title":"\u914d\u7f6e"},{"location":"prepare/skill/checkstyle/#_4","text":"","title":"\u68c0\u67e5"},{"location":"prepare/skill/checkstyle/#maven","text":"","title":"Maven \u63d2\u4ef6"},{"location":"prepare/skill/checkstyle/#_5","text":"<plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-checkstyle-plugin </artifactId> <executions> <execution> <id> checkstyle-validation </id> <phase> validate </phase> <configuration> <configLocation> src/checkstyle/checkstyle.xml </configLocation> <headerLocation> src/checkstyle/checkstyle-header.txt </headerLocation> <encoding> UTF-8 </encoding> <consoleOutput> true </consoleOutput> <failOnViolation> true </failOnViolation> <includeTestSourceDirectory> true </includeTestSourceDirectory> </configuration> <goals> <goal> check </goal> </goals> </execution> </executions> </plugin>","title":"\u914d\u7f6e"},{"location":"prepare/skill/checkstyle/#_6","text":"\u9879\u76ee\u6839\u8def\u5f84\u6267\u884c mvn validate ,\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\u9519\u8bef\uff1a [ INFO ] \u5f00\u59cb\u68c0\u67e5\u2026\u2026 [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/xyz/Sample.java:1: \u5f53\u524d\u884c\u4e0e\u88ab\u671f\u5f85\u7684 header: '^\\Q/*\\E$' \u4e0d\u7b26\u3002 [ RegexpHeader ] [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/xyz/Sample.java:1:9: \u540d\u79f0 'com.xyz' \u5fc5\u987b\u5339\u914d\u8868\u8fbe\u5f0f\uff1a '^com\\.ciicgat\\.api(\\.[a-*)*$' \u3002 [ PackageName ] [ ERROR ] /Users/Albert/.repo/ciicgat/ciicgat-api-bpp/ciicgat-api-catalog/src/main/java/com/ciicgat/api/catalog/model/EnterpriseBillDateSetting.java:1: \u5f53\u524d\u884c\u4e0e\u88ab\u671f\u5f85\u7684 h^ \\Q /* \\E $ ' \u4e0d\u7b26\u3002 [ RegexpHeader ] \u68c0\u67e5\u5b8c\u6210\u3002","title":"\u68c0\u9a8c"},{"location":"prepare/skill/checkstyle/#_7","text":"\u5efa\u8bae\u5c0f\u56e2\u961f\u8303\u56f4\u5185\u7ea6\u5b9a\u4e00\u79cd\uff0c\u57fa\u4e8e Checkstyle-IDEA \u4e2d\u5185\u7f6e\u7684 Google \u548c Sun \u6807\u51c6\u8fdb\u884c\u89c4\u8303\u5373\u53ef\u3002 \u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4ee3\u7801\u89c4\u8303\u4fdd\u6301\u4e00\u81f4\uff0c\u51cf\u8f7b\u5fc3\u7406\u8d1f\u62c5","title":"\u5176\u4ed6\u9879\u76ee"},{"location":"prepare/skill/checkstyle/#_8","text":"\u671f\u5f85\u5171\u540c\u8fdb\u6b65","title":"\u6700\u540e"},{"location":"prepare/skill/sonar/","text":"SonarQube \u672c\u5730\u914d\u7f6e\u6307\u5357 \u00b6 sonarqube \u7f51\u5740\uff1a https://sonarqube.wuxingdev.cn \u53ef\u4ee5\u4f7f\u7528 Gitlab \u8d26\u53f7\u5355\u70b9\u767b\u9646\u3002 \u56e0\u4e3a sonar \u670d\u52a1\u662f https \u7684\uff08\u91c7\u7528\u5173\u7231\u901a CA \u9881\u53d1\uff09\uff0c\u6240\u4ee5 jdk \u91cc\u9700\u8981\u6dfb\u52a0\u5173\u7231\u901a CA \u7684\u4fe1\u4efb\uff0c\u5b89\u88c5\u65b9\u6cd5 \u70b9\u51fb\u8fd9\u91cc \u4fee\u6539\u672c\u5730 settings.xml \uff0c\u5982\u4e0b\u56fe \u6587\u672c\u5728\u6b64\uff1a <pluginGroups> <pluginGroup> org.sonarsource.scanner.maven </pluginGroup> </pluginGroups> <properties> <sonar.host.url> https://sonarqube.wuxingdev.cn </sonar.host.url> <sonar.login> sonar </sonar.login> <sonar.password> sonar </sonar.password> </properties> JAVA \u9879\u76ee pom \u914d\u7f6e \u00b6 pom \u6587\u4ef6\u91cc\u9700\u8981\u6dfb\u52a0 jacoco\uff0c\u7528\u4e8e\u7edf\u8ba1\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u90a3\u4e48\u8986\u76d6\u7387\u4f1a\u663e\u793a 0%\u3002 build \u6807\u7b7e\u91cc\u6dfb\u52a0: <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> </plugin> </plugins> </build> \u4f7f\u7528 sonarqube \u00b6 \u8fdb\u5165\u5230\u9879\u76ee\u76ee\u5f55\uff0c\u547d\u4ee4\u884c\u91cc\u76f4\u63a5\u4f7f\u7528\u547d\u4ee4: mvn clean package sonar:sonar -U \u6253\u5f00 sonar \u670d\u52a1\u7f51\u7ad9\uff0c\u5373\u53ef\u770b\u5230\u4f60\u7684\u9879\u76ee\u7684\u5206\u6790\u7ed3\u679c\uff1a \u76ee\u524d\u4f7f\u7528\u7684\u8fd8\u662f sonar \u5b98\u65b9\u9ed8\u8ba4\u7684\u89c4\u5219\u5e93\uff0c\u90e8\u5206\u574f\u95ee\u9898\u4e0d\u4e00\u5b9a\u9700\u8981\u4fee\u6539\uff0c\u4f46\u662f\u5927\u90e8\u5206\u8fd8\u662f\u6709\u501f\u9274\u610f\u4e49\u3002 \u5728 Idea \u4e2d\u542f\u7528 Sonar \u00b6 \u53ef\u4ee5\u5728 idea \u7684 settings->Plugins->Browse Repositories \u641c\u7d22 sonar \uff0c\u7136\u540e\u70b9\u51fb Install \u5982\u679c\u7f51\u7edc\u4e0d\u597d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u63d2\u4ef6\u5b89\u88c5\u3002 \u8bbf\u95eeIDEA\u5b98\u7f51\u4e0b\u8f7d\u63d2\u4ef6 \uff0c\u70b9\u51fb Install plugin from disk \uff0c\u9009\u62e9\u4e0b\u8f7d\u597d\u7684\u63d2\u4ef6\uff0c\u5b89\u88c5\u3002 \u91cd\u542f Idea \u540e\uff0c\u91cd\u65b0\u6253\u5f00 Idea \u7684 Preference\uff0c\u53ef\u4ee5\u770b\u5230 Other Settings : \u6dfb\u52a0\u670d\u52a1\u5668https://sonarqube.wuxingdev.cn/ SonarLint \u9879\u76ee\u8bbe\u7f6e: \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 Idea \u7f16\u8f91\u5668\u91cc\u770b\u5230 SonarLint \u7684\u63d0\u793a\u4e86","title":"Sonarlint\u914d\u7f6e\u6307\u5357"},{"location":"prepare/skill/sonar/#sonarqube","text":"sonarqube \u7f51\u5740\uff1a https://sonarqube.wuxingdev.cn \u53ef\u4ee5\u4f7f\u7528 Gitlab \u8d26\u53f7\u5355\u70b9\u767b\u9646\u3002 \u56e0\u4e3a sonar \u670d\u52a1\u662f https \u7684\uff08\u91c7\u7528\u5173\u7231\u901a CA \u9881\u53d1\uff09\uff0c\u6240\u4ee5 jdk \u91cc\u9700\u8981\u6dfb\u52a0\u5173\u7231\u901a CA \u7684\u4fe1\u4efb\uff0c\u5b89\u88c5\u65b9\u6cd5 \u70b9\u51fb\u8fd9\u91cc \u4fee\u6539\u672c\u5730 settings.xml \uff0c\u5982\u4e0b\u56fe \u6587\u672c\u5728\u6b64\uff1a <pluginGroups> <pluginGroup> org.sonarsource.scanner.maven </pluginGroup> </pluginGroups> <properties> <sonar.host.url> https://sonarqube.wuxingdev.cn </sonar.host.url> <sonar.login> sonar </sonar.login> <sonar.password> sonar </sonar.password> </properties>","title":"SonarQube \u672c\u5730\u914d\u7f6e\u6307\u5357"},{"location":"prepare/skill/sonar/#java-pom","text":"pom \u6587\u4ef6\u91cc\u9700\u8981\u6dfb\u52a0 jacoco\uff0c\u7528\u4e8e\u7edf\u8ba1\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u90a3\u4e48\u8986\u76d6\u7387\u4f1a\u663e\u793a 0%\u3002 build \u6807\u7b7e\u91cc\u6dfb\u52a0: <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> </plugin> </plugins> </build>","title":"JAVA \u9879\u76ee pom \u914d\u7f6e"},{"location":"prepare/skill/sonar/#sonarqube_1","text":"\u8fdb\u5165\u5230\u9879\u76ee\u76ee\u5f55\uff0c\u547d\u4ee4\u884c\u91cc\u76f4\u63a5\u4f7f\u7528\u547d\u4ee4: mvn clean package sonar:sonar -U \u6253\u5f00 sonar \u670d\u52a1\u7f51\u7ad9\uff0c\u5373\u53ef\u770b\u5230\u4f60\u7684\u9879\u76ee\u7684\u5206\u6790\u7ed3\u679c\uff1a \u76ee\u524d\u4f7f\u7528\u7684\u8fd8\u662f sonar \u5b98\u65b9\u9ed8\u8ba4\u7684\u89c4\u5219\u5e93\uff0c\u90e8\u5206\u574f\u95ee\u9898\u4e0d\u4e00\u5b9a\u9700\u8981\u4fee\u6539\uff0c\u4f46\u662f\u5927\u90e8\u5206\u8fd8\u662f\u6709\u501f\u9274\u610f\u4e49\u3002","title":"\u4f7f\u7528 sonarqube"},{"location":"prepare/skill/sonar/#idea-sonar","text":"\u53ef\u4ee5\u5728 idea \u7684 settings->Plugins->Browse Repositories \u641c\u7d22 sonar \uff0c\u7136\u540e\u70b9\u51fb Install \u5982\u679c\u7f51\u7edc\u4e0d\u597d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u63d2\u4ef6\u5b89\u88c5\u3002 \u8bbf\u95eeIDEA\u5b98\u7f51\u4e0b\u8f7d\u63d2\u4ef6 \uff0c\u70b9\u51fb Install plugin from disk \uff0c\u9009\u62e9\u4e0b\u8f7d\u597d\u7684\u63d2\u4ef6\uff0c\u5b89\u88c5\u3002 \u91cd\u542f Idea \u540e\uff0c\u91cd\u65b0\u6253\u5f00 Idea \u7684 Preference\uff0c\u53ef\u4ee5\u770b\u5230 Other Settings : \u6dfb\u52a0\u670d\u52a1\u5668https://sonarqube.wuxingdev.cn/ SonarLint \u9879\u76ee\u8bbe\u7f6e: \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 Idea \u7f16\u8f91\u5668\u91cc\u770b\u5230 SonarLint \u7684\u63d0\u793a\u4e86","title":"\u5728 Idea \u4e2d\u542f\u7528 Sonar"},{"location":"prepare/specs/app-framework-spec/","text":"\u9879\u76ee\u89c4\u8303 \u00b6 \u6a21\u5757\u89c4\u8303 \u00b6 \u6240\u6709\u7684\u9879\u76ee\uff0c\u5747\u4e3a SpringBoot \u9879\u76ee\uff0c\u6700\u7ec8\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684 fatjar\u3002 \u9879\u76ee\u5fc5\u987b\u4f7f\u7528 grus \u6846\u67b6\uff0c\u7b26\u5408 grus \u6846\u67b6\u7684\u6240\u6709\u89c4\u8303\uff0c\u6bd4\u5982 pom \u7684 parent \u5fc5\u987b\u7ee7\u627f\u81ea grus-boot-starter-parent pom \u91cc\u5fc5\u987b\u8bbe\u7f6e <build> <finalName> \u6807\u7b7e\uff0c\u5176\u503c\u5fc5\u987b\u548c\u6700\u7ec8\u4e0a\u7ebf\u7684\u5e94\u7528\u540d\u4e00\u81f4\u3002 application.properties \u91cc\u5fc5\u987b\u8bbe\u7f6e spring.application.name \uff0c\u5176\u503c\u5fc5\u987b\u548c\u6700\u7ec8\u4e0a\u7ebf\u7684\u5e94\u7528\u540d\u4e00\u81f4\u3002 grus \u7684\u6240\u6709\u6a21\u5757\uff0c\u4e00\u5f8b\u901a\u8fc7 starter \u7684\u65b9\u5f0f\u5f15\u5165\u3002 \u5c3d\u91cf\u4e0d\u8981\u5206\u592a\u591a\u6a21\u5757\uff0c\u7b80\u5355\u7684\u7eaf\u540e\u53f0\u9879\u76ee\u4e00\u4e2a\u6a21\u5757\u641e\u5b9a\u3002 \u5305\u540d\u4ee5\"com.ciicgat.xxx.yyy\"\u5f00\u5934 GAV \u6a21\u677f\u4e3a\uff1a <!-- xxx\u4e3a\u9879\u76ee\u540d\uff0cyyy\u4e3a\u9879\u76ee\u91cc\u7684\u5b50\u6a21\u5757 --> <!-- parent:xxx --> <groupId> com.ciicgat.xxx </groupId> <artifactId> ciicgat-xxx </artifactId> <version> \u5b9e\u9645\u7248\u672c\u53f7 </version> <!-- parent-module:yyy --> <groupId> com.ciicgat.xxx </groupId> <artifactId> ciicgat-xxx-yyy </artifactId> <version> \u5b9e\u9645\u7248\u672c\u53f7 </version> \u542f\u52a8\u89c4\u8303 \u00b6 \u7528\u8ba2\u5355\u670d\u52a1\u9879\u76ee\u4e3e\u4f8b\uff0c\u5b8c\u6574\u7684\u5e94\u7528\u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff08\u57fa\u4e8e grus-boot-starter-parent \u4e3a 2021.1 \uff0c spring-boot-version \u4e3a 2.3.1.RELEASE \uff09\uff1a \u968f\u7740 spring-boot \u7248\u672c\u5347\u7ea7\uff0c\u6709\u4e9b properties \u4f1a\u88ab\u5e9f\u5f03\u6216\u8005\u66ff\u6362\u3002\u8fd9\u70b9\u5728\u5347\u7ea7\u6846\u67b6\u4f9d\u8d56\u7684 spring-boot \u7248\u672c\u65f6\uff0c\u9700\u8981\u683c\u5916\u6ce8\u610f\uff0c\u505a\u597d\u517c\u5bb9\u5904\u7406\u3002 exec /usr/local/openjdk-11/bin/java \\ -XshowSettings:vm \\ -Dclient.encoding.override = UTF-8 \\ -Dfile.encoding = UTF-8 \\ -Duser.language = zh \\ -Duser.region = CN \\ -XX:InitialRAMPercentage = 50 .0 \\ -XX:MaxRAMPercentage = 85 .0 \\ -XX:MetaspaceSize = 128M \\ -XX:+HeapDumpOnOutOfMemoryError \\ -XX:HeapDumpPath = logs/heapDump.hprof \\ -XX:+ExitOnOutOfMemoryError \\ -XX:+UnlockDiagnosticVMOptions \\ '-Xlog:gc*:file=logs/gc.log:time,tags:filecount=10,filesize=10240000' \\ -jar commerce-order.jar \\ --server.port = 80 \\ --server.tomcat.max-threads = 200 \\ --server.tomcat.basedir = . \\ --server.tomcat.accesslog.directory = logs \\ --server.tomcat.accesslog.enabled = true \\ '--server.tomcat.accesslog.pattern=%t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q' \\ --server.tomcat.accesslog.prefix = access \\ --server.tomcat.accesslog.suffix = .log \\ --server.tomcat.accesslog.rotate = true \\ --server.tomcat.accesslog.rename-on-rotate = true \\ --server.tomcat.min-spare-threads = 5 \\ --server.tomcat.uri-encoding = UTF-8 \\ --spring.boot.admin.client.url = http://spring-boot-admin-server/ \\ --spring.boot.admin.client.instance.prefer-ip = true \\ --management.server.port = 8181 \\ '--management.endpoints.web.exposure.include=*' \\ --spring.cloud.sentinel.transport.dashboard = sentinel-dashboard \\ --spring.http.encoding.charset = UTF-8 \\ --spring.http.encoding.enabled = true \\ --logging.file.name = logs/application.log \\ --logging.file.max-history = 7 \\ --logging.file.max-size = 512MB \\ '--logging.pattern.file=^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n'","title":"\u9879\u76ee\u89c4\u8303"},{"location":"prepare/specs/app-framework-spec/#_1","text":"","title":"\u9879\u76ee\u89c4\u8303"},{"location":"prepare/specs/app-framework-spec/#_2","text":"\u6240\u6709\u7684\u9879\u76ee\uff0c\u5747\u4e3a SpringBoot \u9879\u76ee\uff0c\u6700\u7ec8\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684 fatjar\u3002 \u9879\u76ee\u5fc5\u987b\u4f7f\u7528 grus \u6846\u67b6\uff0c\u7b26\u5408 grus \u6846\u67b6\u7684\u6240\u6709\u89c4\u8303\uff0c\u6bd4\u5982 pom \u7684 parent \u5fc5\u987b\u7ee7\u627f\u81ea grus-boot-starter-parent pom \u91cc\u5fc5\u987b\u8bbe\u7f6e <build> <finalName> \u6807\u7b7e\uff0c\u5176\u503c\u5fc5\u987b\u548c\u6700\u7ec8\u4e0a\u7ebf\u7684\u5e94\u7528\u540d\u4e00\u81f4\u3002 application.properties \u91cc\u5fc5\u987b\u8bbe\u7f6e spring.application.name \uff0c\u5176\u503c\u5fc5\u987b\u548c\u6700\u7ec8\u4e0a\u7ebf\u7684\u5e94\u7528\u540d\u4e00\u81f4\u3002 grus \u7684\u6240\u6709\u6a21\u5757\uff0c\u4e00\u5f8b\u901a\u8fc7 starter \u7684\u65b9\u5f0f\u5f15\u5165\u3002 \u5c3d\u91cf\u4e0d\u8981\u5206\u592a\u591a\u6a21\u5757\uff0c\u7b80\u5355\u7684\u7eaf\u540e\u53f0\u9879\u76ee\u4e00\u4e2a\u6a21\u5757\u641e\u5b9a\u3002 \u5305\u540d\u4ee5\"com.ciicgat.xxx.yyy\"\u5f00\u5934 GAV \u6a21\u677f\u4e3a\uff1a <!-- xxx\u4e3a\u9879\u76ee\u540d\uff0cyyy\u4e3a\u9879\u76ee\u91cc\u7684\u5b50\u6a21\u5757 --> <!-- parent:xxx --> <groupId> com.ciicgat.xxx </groupId> <artifactId> ciicgat-xxx </artifactId> <version> \u5b9e\u9645\u7248\u672c\u53f7 </version> <!-- parent-module:yyy --> <groupId> com.ciicgat.xxx </groupId> <artifactId> ciicgat-xxx-yyy </artifactId> <version> \u5b9e\u9645\u7248\u672c\u53f7 </version>","title":"\u6a21\u5757\u89c4\u8303"},{"location":"prepare/specs/app-framework-spec/#_3","text":"\u7528\u8ba2\u5355\u670d\u52a1\u9879\u76ee\u4e3e\u4f8b\uff0c\u5b8c\u6574\u7684\u5e94\u7528\u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff08\u57fa\u4e8e grus-boot-starter-parent \u4e3a 2021.1 \uff0c spring-boot-version \u4e3a 2.3.1.RELEASE \uff09\uff1a \u968f\u7740 spring-boot \u7248\u672c\u5347\u7ea7\uff0c\u6709\u4e9b properties \u4f1a\u88ab\u5e9f\u5f03\u6216\u8005\u66ff\u6362\u3002\u8fd9\u70b9\u5728\u5347\u7ea7\u6846\u67b6\u4f9d\u8d56\u7684 spring-boot \u7248\u672c\u65f6\uff0c\u9700\u8981\u683c\u5916\u6ce8\u610f\uff0c\u505a\u597d\u517c\u5bb9\u5904\u7406\u3002 exec /usr/local/openjdk-11/bin/java \\ -XshowSettings:vm \\ -Dclient.encoding.override = UTF-8 \\ -Dfile.encoding = UTF-8 \\ -Duser.language = zh \\ -Duser.region = CN \\ -XX:InitialRAMPercentage = 50 .0 \\ -XX:MaxRAMPercentage = 85 .0 \\ -XX:MetaspaceSize = 128M \\ -XX:+HeapDumpOnOutOfMemoryError \\ -XX:HeapDumpPath = logs/heapDump.hprof \\ -XX:+ExitOnOutOfMemoryError \\ -XX:+UnlockDiagnosticVMOptions \\ '-Xlog:gc*:file=logs/gc.log:time,tags:filecount=10,filesize=10240000' \\ -jar commerce-order.jar \\ --server.port = 80 \\ --server.tomcat.max-threads = 200 \\ --server.tomcat.basedir = . \\ --server.tomcat.accesslog.directory = logs \\ --server.tomcat.accesslog.enabled = true \\ '--server.tomcat.accesslog.pattern=%t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q' \\ --server.tomcat.accesslog.prefix = access \\ --server.tomcat.accesslog.suffix = .log \\ --server.tomcat.accesslog.rotate = true \\ --server.tomcat.accesslog.rename-on-rotate = true \\ --server.tomcat.min-spare-threads = 5 \\ --server.tomcat.uri-encoding = UTF-8 \\ --spring.boot.admin.client.url = http://spring-boot-admin-server/ \\ --spring.boot.admin.client.instance.prefer-ip = true \\ --management.server.port = 8181 \\ '--management.endpoints.web.exposure.include=*' \\ --spring.cloud.sentinel.transport.dashboard = sentinel-dashboard \\ --spring.http.encoding.charset = UTF-8 \\ --spring.http.encoding.enabled = true \\ --logging.file.name = logs/application.log \\ --logging.file.max-history = 7 \\ --logging.file.max-size = 512MB \\ '--logging.pattern.file=^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n'","title":"\u542f\u52a8\u89c4\u8303"},{"location":"prepare/specs/app-log/","text":"Java \u65e5\u5fd7\u89c4\u8303 \u00b6 \u65e5\u5fd7\u89c4\u8303\u662f\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e25\u683c\u7684\u7ea6\u675f\uff0c\u4e0d\u9075\u5b88\u89c4\u8303\u7684\u65e5\u5fd7\uff0c\u662f\u8fdb\u4e0d\u4e86 ELK \u65e5\u5fd7\u89c4\u8303 \u00b6 access \u00b6 \u65e5\u5fd7\u8f93\u51fa\u76ee\u5f55\uff1a logs/access.log \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\u89e3\u6790: \u65e5\u5fd7\u4ee5 ^ \u4f5c\u4e3a\u5206\u9694\u7b26 %t \u4e3a\u8bf7\u6c42\u65f6\u95f4 %I \u4e3a\u5904\u7406\u7ebf\u7a0b %a \u4e3a\u8bbf\u95ee\u8005\u7684 IP %{x-app-name}o \u4e3a\u5f53\u524d\u5e94\u7528\u540d %{x-app-instance}o \u4e3a\u5f53\u524d\u5e94\u7528\u5b9e\u4f8b %{x-req-app-name}i \u4e3a\u8bf7\u6c42\u5e94\u7528\u540d %{x-req-app-instance}i \u4e3a\u8bf7\u6c42\u5e94\u7528\u5b9e\u4f8b %{x-trace-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 traceId %{x-span-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 spanId %{x-parent-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 parentId %m \u4e3a http \u8bf7\u6c42\u65b9\u6cd5 %U \u4e3a http \u8bf7\u6c42 URL \u91cc\u7684\u8def\u5f84 %H \u4e3a http \u8bf7\u6c42\u534f\u8bae\u7248\u672c %s \u4e3a http \u8bf7\u6c42\u8fd4\u56de\u7801 %b \u4e3a http \u8bf7\u6c42\u53d1\u9001\u4fe1\u606f\u7684\u5b57\u8282\u6570\uff0c\u4e0d\u5305\u62ec http \u5934\uff0c\u5982\u679c\u5b57\u8282\u6570\u4e3a 0 \u7684\u8bdd\uff0c\u663e\u793a\u4e3a- %D \u4e3a http \u8bf7\u6c42\u5904\u7406\u6d88\u8017\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2 %q \u4e3a http \u8bf7\u6c42 URL \u91cc\u7684 query \u4e3e\u4e2a\u6817\u5b50 [11/Dec/2018:00:00:02 +0800]^http-nio-80-exec-7^192.168.29.52^catalog^catalog-5849984c48-pbdj7^invoice-provider^invoice-provider-847ddbfcc-xd95v^3ec492be948636c2^ca71db0256d32de2^3ec492be948636c2^POST^/catalog/product/getByEntProductCategory^HTTP/1.1^200^558^11^ application \u00b6 \u65e5\u5fd7\u8f93\u51fa\u76ee\u5f55\uff1a logs/application.log \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a ^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\u89e3\u6790: \u4ee5 ^V^ \u4f5c\u4e3a\u6362\u884c\u7b26\u53f7\uff08PS:\u56e0\u4e3a\u5185\u5bb9\u91cc\u53ef\u80fd\u5b58\u5728\u6362\u884c\u7b26 \\n \uff0c\u6bd4\u5982\u8bf4\u9519\u8bef\u5806\u6808\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 \\n \uff09 %p \u4e3a\u65e5\u5fd7\u7ea7\u522b,\u5373 DEBUG\u3001INFO\u3001WARN\u3001ERROR\u3001FATAL %d{yyyy-MM-dd HH:mm:ss.SSS} \u4e3a\u65f6\u95f4\u6233 %t \u4e3a\u8f93\u51fa\u4ea7\u751f\u8be5\u65e5\u5fd7\u4e8b\u4ef6\u7684\u7ebf\u7a0b\u540d %c \u4e3a\u8f93\u51fa\u6240\u5c5e\u7684\u7c7b\u76ee\uff0c\u901a\u5e38\u5c31\u662f\u6240\u5728\u7c7b\u7684\u5168\u540d %L\u4e3a \u4e3a\u65e5\u5fd7\u4e8b\u4ef6\u7684\u53d1\u751f\u4f4d\u7f6e\uff0c\u53ca\u5728\u4ee3\u7801\u4e2d\u7684\u884c\u6570 %X{traceId}:%X{spanId}:%X{parentId} \u4e3a jaeger \u8bf7\u6c42\u7684 trace \u4fe1\u606f\u3002\u63d0\u793a\uff1a \u53ef\u4ee5\u4f7f\u7528\u8be5\u503c\u548c access \u65e5\u5fd7\u91cc\u7684\u5355\u6761\u8bb0\u5f55\u5173\u8054 \uff0c\u66f4\u52a0\u4fbf\u4e8e\u67e5\u8be2\u95ee\u9898 %X{req.xRequestId} \u53ef\u4ee5\u4e3a\u7531\u6d4f\u89c8\u5668\u6216\u8005 app \u4f20\u5165\u7684\u8bf7\u6c42 id\uff0c\u6216\u8005\u4e3a\u7a0b\u5e8f\u81ea\u5df1\u8bbe\u7f6e\u7684\u4e0a\u4e0b\u6587 id\u3002\u9ed8\u8ba4\u4e3a jaeger \u4e2d\u7684 traceId %m \u4e3a\u6307\u5b9a\u7684\u65e5\u5fd7\u5185\u5bb9 %n \u4e3a\u56de\u8f66\u6362\u884c\u7b26 \u4e3e\u4e2a\u6817\u5b50\uff1a ^V^ [INFO] [2018-12-11 10:12:46.004] [http-nio-80-exec-3] [com.ciicgat.catalog.provider.web.aop.ControllerAspect:58] [9fdc8467fd959175:c750076cbc96c3bd:6aab7c52ac856950] [9fdc8467fd959175] =====>>>>>requestInfo:catalog/param.getAllCommonParams() war \u9879\u76ee Deprecated \u00b6 \u4e0d\u518d\u4f7f\u7528 war \u9879\u76ee\uff0c\u7edf\u4e00\u4f7f\u7528 spring-boot\uff0c\u4f7f\u7528 jar \u90e8\u7f72 jar \u9879\u76ee \u00b6 access \u00b6 \u5bf9\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u73af\u5883\u7684\u5e94\u7528\uff0c\u7a0b\u5e8f\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u53d1\u5e03\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6ce8\u5165\u4ee5\u4e0b\u53c2\u6570 --server.tomcat.accesslog.directory = logs --server.tomcat.accesslog.enabled = true --server.tomcat.accesslog.pattern = %t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q --server.tomcat.accesslog.prefix = access --server.tomcat.accesslog.suffix = .log \u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u5426\u5728 application.properties \u6587\u4ef6\u91cc\u914d\u7f6e\u4e86 server.tomcat.accesslog \u9009\u9879\uff0c\u90fd\u4f1a\u4f7f\u7528\u7a0b\u5e8f\u542f\u52a8\u65f6\u547d\u4ee4\u884c\u91cc\u7684\u53c2\u6570(\u547d\u4ee4\u884c\u91cc\u4f18\u5148\u7ea7\u6700\u9ad8)\u3002 \u6240\u4ee5\u5f00\u53d1\u65e0\u9700\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u914d\u7f6e server.tomcat.accesslog \u4e86\u3002 application \u00b6 \u5bf9\u4e8e SpringBoot \u9879\u76ee\uff0c spring-boot-starter \u9ed8\u8ba4\u96c6\u6210\u4e86 logback \u3002\u5982\u679c\u4f60\u9009\u62e9 logback \uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u505a pom \u7684\u4fee\u6539\u3002 \u5047\u5982\u9700\u8981\u4f7f\u7528 log4j2 \uff0c\u9700\u8981\u4ee5\u4e0b\u914d\u7f6e\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> <exclusions> <exclusion> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-logging </artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-log4j2 </artifactId> </dependency> \u89c4\u8303\uff1a \u53ea\u5141\u8bb8\u4f7f\u7528\u9ed8\u8ba4\u5b9e\u73b0\u6216\u8005 log4j2 \u540c access \u65e5\u5fd7\uff0c\u53d1\u5e03\u7cfb\u7edf\u540c\u6837\u4f1a\u6ce8\u5165\u4ee5\u4e0b\u53c2\u6570\uff0c\u5f00\u53d1\u4e5f\u65e0\u9700\u914d\u7f6e\uff1a logging.file = logs/application.log logging.file.max-history = 7 logging.file.max-size = 512MB logging.pattern.file = ^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n \u8be6\u7ec6\u7684\u542f\u52a8\u53c2\u6570\u89c1\uff1a \u5e94\u7528\u542f\u52a8\u811a\u672c \u65e5\u5fd7\u6536\u96c6\u4e0e\u67e5\u770b \u00b6 \u8fd0\u7ef4\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u90e8\u7f72 filebeat,\u901a\u8fc7 filebeat \u6536\u96c6\u65e5\u5fd7\u6587\u4ef6\uff0c\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230 kafka \u4e4b\u4e2d\u3002\u7136\u540e\u901a\u8fc7 logstash \uff0c\u5904\u7406 kafka \u65e5\u5fd7\u6d41\uff0c\u5199\u5165\u5230 Elastic search \u4e4b\u4e2d\u3002\u6700\u7ec8\uff0c\u53ef\u4ee5\u901a\u8fc7 kibana \u67e5\u770b\u3002\u5f53\u7136\uff0c\u65e5\u5fd7\u662f\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\u3002","title":"\u65e5\u5fd7\u89c4\u8303"},{"location":"prepare/specs/app-log/#java","text":"\u65e5\u5fd7\u89c4\u8303\u662f\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e25\u683c\u7684\u7ea6\u675f\uff0c\u4e0d\u9075\u5b88\u89c4\u8303\u7684\u65e5\u5fd7\uff0c\u662f\u8fdb\u4e0d\u4e86 ELK","title":"Java \u65e5\u5fd7\u89c4\u8303"},{"location":"prepare/specs/app-log/#_1","text":"","title":"\u65e5\u5fd7\u89c4\u8303"},{"location":"prepare/specs/app-log/#access","text":"\u65e5\u5fd7\u8f93\u51fa\u76ee\u5f55\uff1a logs/access.log \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\u89e3\u6790: \u65e5\u5fd7\u4ee5 ^ \u4f5c\u4e3a\u5206\u9694\u7b26 %t \u4e3a\u8bf7\u6c42\u65f6\u95f4 %I \u4e3a\u5904\u7406\u7ebf\u7a0b %a \u4e3a\u8bbf\u95ee\u8005\u7684 IP %{x-app-name}o \u4e3a\u5f53\u524d\u5e94\u7528\u540d %{x-app-instance}o \u4e3a\u5f53\u524d\u5e94\u7528\u5b9e\u4f8b %{x-req-app-name}i \u4e3a\u8bf7\u6c42\u5e94\u7528\u540d %{x-req-app-instance}i \u4e3a\u8bf7\u6c42\u5e94\u7528\u5b9e\u4f8b %{x-trace-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 traceId %{x-span-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 spanId %{x-parent-id}o \u4e3a\u5206\u5e03\u5f0f jaeger \u8ffd\u8e2a\u7cfb\u7edf\u91cc\u7684 parentId %m \u4e3a http \u8bf7\u6c42\u65b9\u6cd5 %U \u4e3a http \u8bf7\u6c42 URL \u91cc\u7684\u8def\u5f84 %H \u4e3a http \u8bf7\u6c42\u534f\u8bae\u7248\u672c %s \u4e3a http \u8bf7\u6c42\u8fd4\u56de\u7801 %b \u4e3a http \u8bf7\u6c42\u53d1\u9001\u4fe1\u606f\u7684\u5b57\u8282\u6570\uff0c\u4e0d\u5305\u62ec http \u5934\uff0c\u5982\u679c\u5b57\u8282\u6570\u4e3a 0 \u7684\u8bdd\uff0c\u663e\u793a\u4e3a- %D \u4e3a http \u8bf7\u6c42\u5904\u7406\u6d88\u8017\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2 %q \u4e3a http \u8bf7\u6c42 URL \u91cc\u7684 query \u4e3e\u4e2a\u6817\u5b50 [11/Dec/2018:00:00:02 +0800]^http-nio-80-exec-7^192.168.29.52^catalog^catalog-5849984c48-pbdj7^invoice-provider^invoice-provider-847ddbfcc-xd95v^3ec492be948636c2^ca71db0256d32de2^3ec492be948636c2^POST^/catalog/product/getByEntProductCategory^HTTP/1.1^200^558^11^","title":"access"},{"location":"prepare/specs/app-log/#application","text":"\u65e5\u5fd7\u8f93\u51fa\u76ee\u5f55\uff1a logs/application.log \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a ^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\u89e3\u6790: \u4ee5 ^V^ \u4f5c\u4e3a\u6362\u884c\u7b26\u53f7\uff08PS:\u56e0\u4e3a\u5185\u5bb9\u91cc\u53ef\u80fd\u5b58\u5728\u6362\u884c\u7b26 \\n \uff0c\u6bd4\u5982\u8bf4\u9519\u8bef\u5806\u6808\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 \\n \uff09 %p \u4e3a\u65e5\u5fd7\u7ea7\u522b,\u5373 DEBUG\u3001INFO\u3001WARN\u3001ERROR\u3001FATAL %d{yyyy-MM-dd HH:mm:ss.SSS} \u4e3a\u65f6\u95f4\u6233 %t \u4e3a\u8f93\u51fa\u4ea7\u751f\u8be5\u65e5\u5fd7\u4e8b\u4ef6\u7684\u7ebf\u7a0b\u540d %c \u4e3a\u8f93\u51fa\u6240\u5c5e\u7684\u7c7b\u76ee\uff0c\u901a\u5e38\u5c31\u662f\u6240\u5728\u7c7b\u7684\u5168\u540d %L\u4e3a \u4e3a\u65e5\u5fd7\u4e8b\u4ef6\u7684\u53d1\u751f\u4f4d\u7f6e\uff0c\u53ca\u5728\u4ee3\u7801\u4e2d\u7684\u884c\u6570 %X{traceId}:%X{spanId}:%X{parentId} \u4e3a jaeger \u8bf7\u6c42\u7684 trace \u4fe1\u606f\u3002\u63d0\u793a\uff1a \u53ef\u4ee5\u4f7f\u7528\u8be5\u503c\u548c access \u65e5\u5fd7\u91cc\u7684\u5355\u6761\u8bb0\u5f55\u5173\u8054 \uff0c\u66f4\u52a0\u4fbf\u4e8e\u67e5\u8be2\u95ee\u9898 %X{req.xRequestId} \u53ef\u4ee5\u4e3a\u7531\u6d4f\u89c8\u5668\u6216\u8005 app \u4f20\u5165\u7684\u8bf7\u6c42 id\uff0c\u6216\u8005\u4e3a\u7a0b\u5e8f\u81ea\u5df1\u8bbe\u7f6e\u7684\u4e0a\u4e0b\u6587 id\u3002\u9ed8\u8ba4\u4e3a jaeger \u4e2d\u7684 traceId %m \u4e3a\u6307\u5b9a\u7684\u65e5\u5fd7\u5185\u5bb9 %n \u4e3a\u56de\u8f66\u6362\u884c\u7b26 \u4e3e\u4e2a\u6817\u5b50\uff1a ^V^ [INFO] [2018-12-11 10:12:46.004] [http-nio-80-exec-3] [com.ciicgat.catalog.provider.web.aop.ControllerAspect:58] [9fdc8467fd959175:c750076cbc96c3bd:6aab7c52ac856950] [9fdc8467fd959175] =====>>>>>requestInfo:catalog/param.getAllCommonParams()","title":"application"},{"location":"prepare/specs/app-log/#war-deprecated","text":"\u4e0d\u518d\u4f7f\u7528 war \u9879\u76ee\uff0c\u7edf\u4e00\u4f7f\u7528 spring-boot\uff0c\u4f7f\u7528 jar \u90e8\u7f72","title":"war \u9879\u76ee Deprecated"},{"location":"prepare/specs/app-log/#jar","text":"","title":"jar \u9879\u76ee"},{"location":"prepare/specs/app-log/#access_1","text":"\u5bf9\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u73af\u5883\u7684\u5e94\u7528\uff0c\u7a0b\u5e8f\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u53d1\u5e03\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6ce8\u5165\u4ee5\u4e0b\u53c2\u6570 --server.tomcat.accesslog.directory = logs --server.tomcat.accesslog.enabled = true --server.tomcat.accesslog.pattern = %t^%I^%a^%{x-app-name}o^%{x-app-instance}o^%{x-req-app-name}i^%{x-req-app-instance}i^%{x-trace-id}o^%{x-span-id}o^%{x-parent-id}o^%m^%U^%H^%s^%b^%D^%q --server.tomcat.accesslog.prefix = access --server.tomcat.accesslog.suffix = .log \u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u5426\u5728 application.properties \u6587\u4ef6\u91cc\u914d\u7f6e\u4e86 server.tomcat.accesslog \u9009\u9879\uff0c\u90fd\u4f1a\u4f7f\u7528\u7a0b\u5e8f\u542f\u52a8\u65f6\u547d\u4ee4\u884c\u91cc\u7684\u53c2\u6570(\u547d\u4ee4\u884c\u91cc\u4f18\u5148\u7ea7\u6700\u9ad8)\u3002 \u6240\u4ee5\u5f00\u53d1\u65e0\u9700\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u914d\u7f6e server.tomcat.accesslog \u4e86\u3002","title":"access"},{"location":"prepare/specs/app-log/#application_1","text":"\u5bf9\u4e8e SpringBoot \u9879\u76ee\uff0c spring-boot-starter \u9ed8\u8ba4\u96c6\u6210\u4e86 logback \u3002\u5982\u679c\u4f60\u9009\u62e9 logback \uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u505a pom \u7684\u4fee\u6539\u3002 \u5047\u5982\u9700\u8981\u4f7f\u7528 log4j2 \uff0c\u9700\u8981\u4ee5\u4e0b\u914d\u7f6e\uff1a <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> <exclusions> <exclusion> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-logging </artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-log4j2 </artifactId> </dependency> \u89c4\u8303\uff1a \u53ea\u5141\u8bb8\u4f7f\u7528\u9ed8\u8ba4\u5b9e\u73b0\u6216\u8005 log4j2 \u540c access \u65e5\u5fd7\uff0c\u53d1\u5e03\u7cfb\u7edf\u540c\u6837\u4f1a\u6ce8\u5165\u4ee5\u4e0b\u53c2\u6570\uff0c\u5f00\u53d1\u4e5f\u65e0\u9700\u914d\u7f6e\uff1a logging.file = logs/application.log logging.file.max-history = 7 logging.file.max-size = 512MB logging.pattern.file = ^V^ [%p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%c:%L] [%X{traceId}:%X{spanId}:%X{parentId}] [%X{req.xRequestId}] %m%n \u8be6\u7ec6\u7684\u542f\u52a8\u53c2\u6570\u89c1\uff1a \u5e94\u7528\u542f\u52a8\u811a\u672c","title":"application"},{"location":"prepare/specs/app-log/#_2","text":"\u8fd0\u7ef4\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u90e8\u7f72 filebeat,\u901a\u8fc7 filebeat \u6536\u96c6\u65e5\u5fd7\u6587\u4ef6\uff0c\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230 kafka \u4e4b\u4e2d\u3002\u7136\u540e\u901a\u8fc7 logstash \uff0c\u5904\u7406 kafka \u65e5\u5fd7\u6d41\uff0c\u5199\u5165\u5230 Elastic search \u4e4b\u4e2d\u3002\u6700\u7ec8\uff0c\u53ef\u4ee5\u901a\u8fc7 kibana \u67e5\u770b\u3002\u5f53\u7136\uff0c\u65e5\u5fd7\u662f\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\u3002","title":"\u65e5\u5fd7\u6536\u96c6\u4e0e\u67e5\u770b"},{"location":"prepare/specs/jdbc-pool-config/","text":"JDBC \u8fde\u63a5\u6c60\u914d\u7f6e\u6307\u5357 \u00b6 grus \u6846\u67b6\u4f7f\u7528 springboot \u5b98\u65b9\u63a8\u8350\u7684\u8fde\u63a5\u6c60 HikariCP\uff0c\u4e0b\u6587\u5168\u90e8\u9488\u5bf9\u7684\u662f HikariCP\u3002 \u9ed8\u8ba4\u7684\uff0cgrus \u6846\u67b6\u5df2\u7ecf\u5b9e\u73b0\u4e86\u672c\u89c4\u8303\u3002 \u7531\u4e8e\u5173\u7231\u901a\u7ebf\u4e0a\u4e1a\u52a1\u662f\u4f7f\u7528\u7684\u540c\u4e00\u4e2a MYSQL \u7269\u7406\u5b9e\u4f8b\uff0c\u5982\u679c\u5927\u5bb6\u4e0d\u5f53\u914d\u7f6e\u8fde\u63a5\u6c60\uff0c\u90a3\u4e48\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u5f88\u5bb9\u6613\u8fbe\u5230\u4e0a\u9650\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u67d0\u4e2a\u5e94\u7528\u7684\u521d\u59cb\u5316\u8fde\u63a5\u6570\u91cf\u8bbe\u7f6e\u4e3a 10\uff0c\u800c\u6211\u4eec\u4e00\u822c\u90e8\u7f72\u4e09\u53f0\uff0c\u90a3\u4e48\u8be5\u5e94\u7528\u4e0a\u7ebf\u540e\u6b63\u5e38\u5c31\u6709 30 \u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u3002 \u5047\u5982\u6570\u636e\u5e93\u8fde\u63a5\u4e0a\u9650\u4e3a 1000\uff0c\u90a3\u4e48\u6211\u4eec\u4ec5\u4ec5\u6700\u591a\u652f\u6491 33 \u4e2a\u5e94\u7528\u4e86\u3002\u5b9e\u9645\u5173\u7231\u901a\u5e94\u7528\u6709\u4e0a\u767e\u4e2a\uff0c\u5e73\u644a\u4e0b\u6765\uff0c\u6bcf\u4e2a\u5e94\u7528\u7684\u5e76\u53d1\u6ca1\u6709\u90a3\u4e48\u9ad8\u3002 \u7efc\u4e0a\uff0c\u4e3a\u4e86\u9632\u6b62\u6ee5\u7528\u6216\u8005\u4e0d\u6b63\u5f53\u4f7f\u7528\u8fde\u63a5\u6c60\uff0c\u9488\u5bf9\u8fde\u63a5\u6c60\u914d\u7f6e\u6709\u5982\u4e0b\u89c4\u8303\uff1a \u57fa\u7840\u53c2\u6570 \u00b6 \u6ce8\u610f\u5f53\u524d\u7684\u63a8\u8350\u503c\u4e3a\u9488\u5bf9\u76ee\u524d\u5171\u7528 mysql \u673a\u5668\u7684\u60c5\u51b5\uff0c\u540e\u7eed db \u8fc1\u79fb\u540e\u53e6\u884c\u901a\u77e5\u3002 \u53c2\u6570\u540d \u542b\u4e49 \u63a8\u8350\u503c dataSourceClassName mysql \u4f69 HikariCP \u7684\u63a8\u8350 com.mysql.jdbc.jdbc2.optional.MysqlDataSource maximumPoolSize \u8fde\u63a5\u6c60\u5141\u8bb8\u7684**\u6700\u5927\u8fde\u63a5\u603b\u6570**\uff08\u5305\u542b\u7a7a\u95f2\u548c\u4f7f\u7528\u4e2d\uff09\uff0c\u56e0\u6b64\u6b64\u53c2\u6570\u9700\u8981\u770b\u5b9e\u9645\u4e1a\u52a1\u662f\u5426\u5b58\u5728\u9ad8 TPS \u7684\u573a\u666f\uff0c\u914c\u60c5\u5904\u7406 5-10 minimumIdle \u8fde\u63a5\u6c60\u4e2d\u4fdd\u7559\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570 1-3 connectionTimeout \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u539f\u6846\u67b6 Default: 30000 (30 seconds) \uff0c\u6b64\u539f\u59cb\u503c\u8fc7\u5927\uff0c\u4e0d\u9002\u5408\u5fae\u670d\u52a1\u67b6\u6784\u3002\u6700\u5c0f\u503c\u4e3a 250ms 3s idleTimeout \u8fde\u63a5\u8bbe\u7f6e\u4e3a\u7a7a\u95f2 Default: 600000 (10 minutes) \u6700\u5c0f\u503c\u4e3a 10s 30s-5m maxLifetime \u8fde\u63a5\u7684\u6700\u5927\u5b58\u6d3b\u65f6\u95f4 Default: 1800000 (30 minutes) 5m-10m poolName \u7ed9\u8fde\u63a5\u6c60\u8d77\u4e2a\u540d\uff0c\u4fbf\u4e8e\u4ece\u65e5\u5fd7\u89d2\u5ea6\u770b\u5f85\u8fde\u63a5\u95ee\u9898\uff0c\u4f9d\u636e\u4e1a\u52a1\u5e94\u7528\u8fdb\u884c\u547d\u540d APPID validationTimeout \u591a\u957f\u65f6\u95f4\u68c0\u6d4b\u4e0b\u8fde\u63a5 \u53d6\u503c\u7b80\u6613\u5c0f\u4e8e connectionTimeout \u9ed8\u8ba4\u503c 5 \u79d2 5s leakDetectionThreshold \u591a\u957f\u65f6\u95f4\u68c0\u6d4b\u4e0b\u8fde\u63a5\u6c60\u662f\u5426\u6cc4\u6f0f \u9ed8\u8ba4\u4e3a 0 \u4e0d\u68c0\u6d4b.\u6b64\u53c2\u6570\u53ef\u4ee5\u6709\u6548\u68c0\u6d4b\u8fde\u63a5\u6570\u6cc4\u6f0f\u7684\u95ee\u9898 30s \u4ee5\u4e0a \u5176\u4ed6\u4f18\u5316\u53c2\u6570 \u00b6 \u53c2\u6570\u540d \u542b\u4e49 \u63a8\u8350\u503c useServerPrepStmts \u6253\u5f00 mysql \u670d\u52a1\u5668\u7aef\u9884\u7f16\u8bd1 true prepStmtCacheSize driver \u7aef\u7f13\u5b58\u5927\u5c0f \u9ed8\u8ba4 25 250-500 prepStmtCacheSqlLimit \u6700\u5927\u7f13\u5b58\u9650\u5236 \u9ed8\u8ba4 256 1024-2048 cachePrepStmts \u6253\u5f00\u672c\u5730 Driver \u5f00\u5173 true","title":"\u8fde\u63a5\u6c60\u89c4\u8303"},{"location":"prepare/specs/jdbc-pool-config/#jdbc","text":"grus \u6846\u67b6\u4f7f\u7528 springboot \u5b98\u65b9\u63a8\u8350\u7684\u8fde\u63a5\u6c60 HikariCP\uff0c\u4e0b\u6587\u5168\u90e8\u9488\u5bf9\u7684\u662f HikariCP\u3002 \u9ed8\u8ba4\u7684\uff0cgrus \u6846\u67b6\u5df2\u7ecf\u5b9e\u73b0\u4e86\u672c\u89c4\u8303\u3002 \u7531\u4e8e\u5173\u7231\u901a\u7ebf\u4e0a\u4e1a\u52a1\u662f\u4f7f\u7528\u7684\u540c\u4e00\u4e2a MYSQL \u7269\u7406\u5b9e\u4f8b\uff0c\u5982\u679c\u5927\u5bb6\u4e0d\u5f53\u914d\u7f6e\u8fde\u63a5\u6c60\uff0c\u90a3\u4e48\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u5f88\u5bb9\u6613\u8fbe\u5230\u4e0a\u9650\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u67d0\u4e2a\u5e94\u7528\u7684\u521d\u59cb\u5316\u8fde\u63a5\u6570\u91cf\u8bbe\u7f6e\u4e3a 10\uff0c\u800c\u6211\u4eec\u4e00\u822c\u90e8\u7f72\u4e09\u53f0\uff0c\u90a3\u4e48\u8be5\u5e94\u7528\u4e0a\u7ebf\u540e\u6b63\u5e38\u5c31\u6709 30 \u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u3002 \u5047\u5982\u6570\u636e\u5e93\u8fde\u63a5\u4e0a\u9650\u4e3a 1000\uff0c\u90a3\u4e48\u6211\u4eec\u4ec5\u4ec5\u6700\u591a\u652f\u6491 33 \u4e2a\u5e94\u7528\u4e86\u3002\u5b9e\u9645\u5173\u7231\u901a\u5e94\u7528\u6709\u4e0a\u767e\u4e2a\uff0c\u5e73\u644a\u4e0b\u6765\uff0c\u6bcf\u4e2a\u5e94\u7528\u7684\u5e76\u53d1\u6ca1\u6709\u90a3\u4e48\u9ad8\u3002 \u7efc\u4e0a\uff0c\u4e3a\u4e86\u9632\u6b62\u6ee5\u7528\u6216\u8005\u4e0d\u6b63\u5f53\u4f7f\u7528\u8fde\u63a5\u6c60\uff0c\u9488\u5bf9\u8fde\u63a5\u6c60\u914d\u7f6e\u6709\u5982\u4e0b\u89c4\u8303\uff1a","title":"JDBC \u8fde\u63a5\u6c60\u914d\u7f6e\u6307\u5357"},{"location":"prepare/specs/jdbc-pool-config/#_1","text":"\u6ce8\u610f\u5f53\u524d\u7684\u63a8\u8350\u503c\u4e3a\u9488\u5bf9\u76ee\u524d\u5171\u7528 mysql \u673a\u5668\u7684\u60c5\u51b5\uff0c\u540e\u7eed db \u8fc1\u79fb\u540e\u53e6\u884c\u901a\u77e5\u3002 \u53c2\u6570\u540d \u542b\u4e49 \u63a8\u8350\u503c dataSourceClassName mysql \u4f69 HikariCP \u7684\u63a8\u8350 com.mysql.jdbc.jdbc2.optional.MysqlDataSource maximumPoolSize \u8fde\u63a5\u6c60\u5141\u8bb8\u7684**\u6700\u5927\u8fde\u63a5\u603b\u6570**\uff08\u5305\u542b\u7a7a\u95f2\u548c\u4f7f\u7528\u4e2d\uff09\uff0c\u56e0\u6b64\u6b64\u53c2\u6570\u9700\u8981\u770b\u5b9e\u9645\u4e1a\u52a1\u662f\u5426\u5b58\u5728\u9ad8 TPS \u7684\u573a\u666f\uff0c\u914c\u60c5\u5904\u7406 5-10 minimumIdle \u8fde\u63a5\u6c60\u4e2d\u4fdd\u7559\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570 1-3 connectionTimeout \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u539f\u6846\u67b6 Default: 30000 (30 seconds) \uff0c\u6b64\u539f\u59cb\u503c\u8fc7\u5927\uff0c\u4e0d\u9002\u5408\u5fae\u670d\u52a1\u67b6\u6784\u3002\u6700\u5c0f\u503c\u4e3a 250ms 3s idleTimeout \u8fde\u63a5\u8bbe\u7f6e\u4e3a\u7a7a\u95f2 Default: 600000 (10 minutes) \u6700\u5c0f\u503c\u4e3a 10s 30s-5m maxLifetime \u8fde\u63a5\u7684\u6700\u5927\u5b58\u6d3b\u65f6\u95f4 Default: 1800000 (30 minutes) 5m-10m poolName \u7ed9\u8fde\u63a5\u6c60\u8d77\u4e2a\u540d\uff0c\u4fbf\u4e8e\u4ece\u65e5\u5fd7\u89d2\u5ea6\u770b\u5f85\u8fde\u63a5\u95ee\u9898\uff0c\u4f9d\u636e\u4e1a\u52a1\u5e94\u7528\u8fdb\u884c\u547d\u540d APPID validationTimeout \u591a\u957f\u65f6\u95f4\u68c0\u6d4b\u4e0b\u8fde\u63a5 \u53d6\u503c\u7b80\u6613\u5c0f\u4e8e connectionTimeout \u9ed8\u8ba4\u503c 5 \u79d2 5s leakDetectionThreshold \u591a\u957f\u65f6\u95f4\u68c0\u6d4b\u4e0b\u8fde\u63a5\u6c60\u662f\u5426\u6cc4\u6f0f \u9ed8\u8ba4\u4e3a 0 \u4e0d\u68c0\u6d4b.\u6b64\u53c2\u6570\u53ef\u4ee5\u6709\u6548\u68c0\u6d4b\u8fde\u63a5\u6570\u6cc4\u6f0f\u7684\u95ee\u9898 30s \u4ee5\u4e0a","title":"\u57fa\u7840\u53c2\u6570"},{"location":"prepare/specs/jdbc-pool-config/#_2","text":"\u53c2\u6570\u540d \u542b\u4e49 \u63a8\u8350\u503c useServerPrepStmts \u6253\u5f00 mysql \u670d\u52a1\u5668\u7aef\u9884\u7f16\u8bd1 true prepStmtCacheSize driver \u7aef\u7f13\u5b58\u5927\u5c0f \u9ed8\u8ba4 25 250-500 prepStmtCacheSqlLimit \u6700\u5927\u7f13\u5b58\u9650\u5236 \u9ed8\u8ba4 256 1024-2048 cachePrepStmts \u6253\u5f00\u672c\u5730 Driver \u5f00\u5173 true","title":"\u5176\u4ed6\u4f18\u5316\u53c2\u6570"},{"location":"prepare/specs/maven/","text":"maven \u4f7f\u7528\u4ecb\u7ecd \u00b6 setting.xml \u4e0b\u8f7d\uff0c\u53f3\u51fb\u70b9\u51fb->\u94fe\u63a5\u53e6\u5b58\u4e3a Parent \u00b6 \u56e0\u4e3a\u6211\u4eec java \u7edf\u4e00\u91c7\u7528 grus \u6846\u67b6\uff0c\u6240\u4ee5\u4f60\u7684\u9879\u76ee\u7684 parent\uff0c\u5fc5\u987b\u7edf\u4e00\u4f7f\u7528 grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u6b64 parent \u5305\u542b\u4e86 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u3001\u5de8\u7075\u795e API \u7b49\u7684\u6240\u6709\u4f9d\u8d56\u3002 jar \u5305\u7248\u672c\u7531 parent \u7edf\u4e00\u5b9a\u4e49\uff0c\u5404\u81ea\u7684\u9879\u76ee\u4e0d\u9700\u8981\u5b9a\u4e49\u4e5f\u7981\u6b62\u5b9a\u4e49\u81ea\u5df1\u7684\u7248\u672c\u3002\u9664\u975e parent \u4e2d\u4e0d\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 \u5982\u679c\u4f60\u7684\u9879\u76ee\u9700\u8981\u53d1\u5e03\u5230 maven \u79c1\u670d\uff0c\u90a3\u4e48\u4f60\u7684 parent \u5fc5\u987b\u7ee7\u627f mvn-depoly-parent \uff1a \u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat </groupId> <artifactId> mvn-depoly-parent </artifactId> <version> 1.0.0 </version> </parent> BOM \u00b6 \u73b0\u4ee3 java \u7684\u6846\u67b6\uff0c\u57fa\u672c\u90fd\u6709\u7269\u6599\u6e05\u5355\u3002 \u57fa\u4e8e BOM\uff0c\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a \u6574\u5408\u5f15\u7528 JAR \u53ef\u4ee5\u907f\u514d\u5927\u91cf GAV \u7f57\u5217\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u81ea\u6709\u9879\u76ee\u4e2d dependencyManagement \u5217\u8868\u4e2d\u7684\u4e2a\u6570 \u89e3\u51b3 jar \u5305\u7248\u672c\u51b2\u7a81\u3001\u4e0d\u517c\u5bb9\u95ee\u9898 \u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u3001\u51cf\u5c11\u51fa\u9519\u51e0\u7387 \u51cf\u5c11\u9879\u76ee\u76f4\u5c5e\u4f9d\u8d56\uff0c\u907f\u514d\u9677\u5165\u4f9d\u8d56\u9677\u8fdb \u5f00\u7bb1\u5373\u7528 \u63d0\u9ad8\u751f\u4ea7\u529b \u4fbf\u4e8e\u67b6\u6784\u5c42\u9762\u505a\u7edf\u4e00\u7684\u5c01\u88c5\u548c\u7ea6\u675f \u7528\u7684\u4eba\u5f88\u723d BuildName \u00b6 \u9879\u76ee\u5fc5\u987b\u8981\u5b9a\u4e49 finalName \u6807\u7b7e\u503c\uff0c\u8fd9\u4e2a\u503c\u548c\u4f60\u7684\u5e94\u7528\u540d\u5b57\u76f8\u540c\u3002\u5426\u5219 Jenkins \u7f16\u8bd1\u540e\uff0c\u65e0\u6cd5\u53d1\u5e03\u5230\u4ea7\u7269\u5e93\u4e4b\u4e2d\u3002 \u5982\u4e0b: <build> <finalName> userdoor </finalName> //\u8fd9\u4e2afinalName\u5fc5\u987b\u548c\u4e0b\u56fe\u7ea2\u6846\u4e2d\u7684\u540d\u5b57\u76f8\u540c </build> \u5e38\u7528\u547d\u4ee4 \u00b6 \u56e0\u4e3a\u6211\u4eec\u5173\u7231\u901a\u7684\u6846\u67b6\uff0c\u90fd\u662f\u901a\u8fc7 SNAPSHOT \u7248\u672c\u5f15\u5165\u7684\u3002\u6240\u4ee5\u7ecf\u5e38\u5b58\u5728\u9700\u8981\u8ddf\u65b0 snapshot \u7684\u9700\u6c42\uff0c\u4e00\u822c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a mvn package -U","title":"Maven\u89c4\u8303"},{"location":"prepare/specs/maven/#maven","text":"setting.xml \u4e0b\u8f7d\uff0c\u53f3\u51fb\u70b9\u51fb->\u94fe\u63a5\u53e6\u5b58\u4e3a","title":"maven \u4f7f\u7528\u4ecb\u7ecd"},{"location":"prepare/specs/maven/#parent","text":"\u56e0\u4e3a\u6211\u4eec java \u7edf\u4e00\u91c7\u7528 grus \u6846\u67b6\uff0c\u6240\u4ee5\u4f60\u7684\u9879\u76ee\u7684 parent\uff0c\u5fc5\u987b\u7edf\u4e00\u4f7f\u7528 grus-boot-starter-parent \uff0c\u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat.grus.boot </groupId> <artifactId> grus-boot-starter-parent </artifactId> <version> ${suggested-version} </version> </parent> \u6b64 parent \u5305\u542b\u4e86 SpringBoot\u3001Grus\u3001Grus Boot\u3001\u5e38\u7528\u7b2c\u4e09\u65b9\u3001\u5de8\u7075\u795e API \u7b49\u7684\u6240\u6709\u4f9d\u8d56\u3002 jar \u5305\u7248\u672c\u7531 parent \u7edf\u4e00\u5b9a\u4e49\uff0c\u5404\u81ea\u7684\u9879\u76ee\u4e0d\u9700\u8981\u5b9a\u4e49\u4e5f\u7981\u6b62\u5b9a\u4e49\u81ea\u5df1\u7684\u7248\u672c\u3002\u9664\u975e parent \u4e2d\u4e0d\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 \u5982\u679c\u4f60\u7684\u9879\u76ee\u9700\u8981\u53d1\u5e03\u5230 maven \u79c1\u670d\uff0c\u90a3\u4e48\u4f60\u7684 parent \u5fc5\u987b\u7ee7\u627f mvn-depoly-parent \uff1a \u5982\u4e0b\uff1a <parent> <groupId> com.ciicgat </groupId> <artifactId> mvn-depoly-parent </artifactId> <version> 1.0.0 </version> </parent>","title":"Parent"},{"location":"prepare/specs/maven/#bom","text":"\u73b0\u4ee3 java \u7684\u6846\u67b6\uff0c\u57fa\u672c\u90fd\u6709\u7269\u6599\u6e05\u5355\u3002 \u57fa\u4e8e BOM\uff0c\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a \u6574\u5408\u5f15\u7528 JAR \u53ef\u4ee5\u907f\u514d\u5927\u91cf GAV \u7f57\u5217\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u81ea\u6709\u9879\u76ee\u4e2d dependencyManagement \u5217\u8868\u4e2d\u7684\u4e2a\u6570 \u89e3\u51b3 jar \u5305\u7248\u672c\u51b2\u7a81\u3001\u4e0d\u517c\u5bb9\u95ee\u9898 \u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u3001\u51cf\u5c11\u51fa\u9519\u51e0\u7387 \u51cf\u5c11\u9879\u76ee\u76f4\u5c5e\u4f9d\u8d56\uff0c\u907f\u514d\u9677\u5165\u4f9d\u8d56\u9677\u8fdb \u5f00\u7bb1\u5373\u7528 \u63d0\u9ad8\u751f\u4ea7\u529b \u4fbf\u4e8e\u67b6\u6784\u5c42\u9762\u505a\u7edf\u4e00\u7684\u5c01\u88c5\u548c\u7ea6\u675f \u7528\u7684\u4eba\u5f88\u723d","title":"BOM"},{"location":"prepare/specs/maven/#buildname","text":"\u9879\u76ee\u5fc5\u987b\u8981\u5b9a\u4e49 finalName \u6807\u7b7e\u503c\uff0c\u8fd9\u4e2a\u503c\u548c\u4f60\u7684\u5e94\u7528\u540d\u5b57\u76f8\u540c\u3002\u5426\u5219 Jenkins \u7f16\u8bd1\u540e\uff0c\u65e0\u6cd5\u53d1\u5e03\u5230\u4ea7\u7269\u5e93\u4e4b\u4e2d\u3002 \u5982\u4e0b: <build> <finalName> userdoor </finalName> //\u8fd9\u4e2afinalName\u5fc5\u987b\u548c\u4e0b\u56fe\u7ea2\u6846\u4e2d\u7684\u540d\u5b57\u76f8\u540c </build>","title":"BuildName"},{"location":"prepare/specs/maven/#_1","text":"\u56e0\u4e3a\u6211\u4eec\u5173\u7231\u901a\u7684\u6846\u67b6\uff0c\u90fd\u662f\u901a\u8fc7 SNAPSHOT \u7248\u672c\u5f15\u5165\u7684\u3002\u6240\u4ee5\u7ecf\u5e38\u5b58\u5728\u9700\u8981\u8ddf\u65b0 snapshot \u7684\u9700\u6c42\uff0c\u4e00\u822c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a mvn package -U","title":"\u5e38\u7528\u547d\u4ee4"}]}